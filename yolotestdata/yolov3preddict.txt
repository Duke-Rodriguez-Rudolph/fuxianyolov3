DarkNet(
  (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu1): LeakyReLU(negative_slope=0.1)
  (layer1): Sequential(
    (ds_conv): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (ds_bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (ds_relu): LeakyReLU(negative_slope=0.1)
    (residual_0): BasicBlock(
      (conv1): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
  )
  (layer2): Sequential(
    (ds_conv): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (ds_bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (ds_relu): LeakyReLU(negative_slope=0.1)
    (residual_0): BasicBlock(
      (conv1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
    (residual_1): BasicBlock(
      (conv1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
  )
  (layer3): Sequential(
    (ds_conv): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (ds_bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (ds_relu): LeakyReLU(negative_slope=0.1)
    (residual_0): BasicBlock(
      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
    (residual_1): BasicBlock(
      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
    (residual_2): BasicBlock(
      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
    (residual_3): BasicBlock(
      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
    (residual_4): BasicBlock(
      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
    (residual_5): BasicBlock(
      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
    (residual_6): BasicBlock(
      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
    (residual_7): BasicBlock(
      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
  )
  (layer4): Sequential(
    (ds_conv): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (ds_bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (ds_relu): LeakyReLU(negative_slope=0.1)
    (residual_0): BasicBlock(
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
    (residual_1): BasicBlock(
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
    (residual_2): BasicBlock(
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
    (residual_3): BasicBlock(
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
    (residual_4): BasicBlock(
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
    (residual_5): BasicBlock(
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
    (residual_6): BasicBlock(
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
    (residual_7): BasicBlock(
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
  )
  (layer5): Sequential(
    (ds_conv): Conv2d(512, 1024, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (ds_bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (ds_relu): LeakyReLU(negative_slope=0.1)
    (residual_0): BasicBlock(
      (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
    (residual_1): BasicBlock(
      (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
    (residual_2): BasicBlock(
      (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
    (residual_3): BasicBlock(
      (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
  )
)
YoloBody(
  (backbone): DarkNet(
    (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu1): LeakyReLU(negative_slope=0.1)
    (layer1): Sequential(
      (ds_conv): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (ds_bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (ds_relu): LeakyReLU(negative_slope=0.1)
      (residual_0): BasicBlock(
        (conv1): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
    )
    (layer2): Sequential(
      (ds_conv): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (ds_bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (ds_relu): LeakyReLU(negative_slope=0.1)
      (residual_0): BasicBlock(
        (conv1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
      (residual_1): BasicBlock(
        (conv1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
    )
    (layer3): Sequential(
      (ds_conv): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (ds_bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (ds_relu): LeakyReLU(negative_slope=0.1)
      (residual_0): BasicBlock(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
      (residual_1): BasicBlock(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
      (residual_2): BasicBlock(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
      (residual_3): BasicBlock(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
      (residual_4): BasicBlock(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
      (residual_5): BasicBlock(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
      (residual_6): BasicBlock(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
      (residual_7): BasicBlock(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
    )
    (layer4): Sequential(
      (ds_conv): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (ds_bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (ds_relu): LeakyReLU(negative_slope=0.1)
      (residual_0): BasicBlock(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
      (residual_1): BasicBlock(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
      (residual_2): BasicBlock(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
      (residual_3): BasicBlock(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
      (residual_4): BasicBlock(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
      (residual_5): BasicBlock(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
      (residual_6): BasicBlock(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
      (residual_7): BasicBlock(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
    )
    (layer5): Sequential(
      (ds_conv): Conv2d(512, 1024, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (ds_bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (ds_relu): LeakyReLU(negative_slope=0.1)
      (residual_0): BasicBlock(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
      (residual_1): BasicBlock(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
      (residual_2): BasicBlock(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
      (residual_3): BasicBlock(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
    )
  )
  (last_layer0): ModuleList(
    (0): Sequential(
      (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.1)
    )
    (1): Sequential(
      (conv): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.1)
    )
    (2): Sequential(
      (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.1)
    )
    (3): Sequential(
      (conv): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.1)
    )
    (4): Sequential(
      (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.1)
    )
    (5): Sequential(
      (conv): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.1)
    )
    (6): Conv2d(1024, 50, kernel_size=(1, 1), stride=(1, 1))
  )
  (last_layer1_conv): Sequential(
    (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): LeakyReLU(negative_slope=0.1)
  )
  (last_layer1_upsample): Upsample(scale_factor=2.0, mode=nearest)
  (last_layer1): ModuleList(
    (0): Sequential(
      (conv): Conv2d(768, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.1)
    )
    (1): Sequential(
      (conv): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.1)
    )
    (2): Sequential(
      (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.1)
    )
    (3): Sequential(
      (conv): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.1)
    )
    (4): Sequential(
      (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.1)
    )
    (5): Sequential(
      (conv): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.1)
    )
    (6): Conv2d(512, 50, kernel_size=(1, 1), stride=(1, 1))
  )
  (last_layer2_conv): Sequential(
    (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): LeakyReLU(negative_slope=0.1)
  )
  (last_layer2_upsample): Upsample(scale_factor=2.0, mode=nearest)
  (last_layer2): ModuleList(
    (0): Sequential(
      (conv): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.1)
    )
    (1): Sequential(
      (conv): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.1)
    )
    (2): Sequential(
      (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.1)
    )
    (3): Sequential(
      (conv): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.1)
    )
    (4): Sequential(
      (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.1)
    )
    (5): Sequential(
      (conv): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.1)
    )
    (6): Conv2d(256, 50, kernel_size=(1, 1), stride=(1, 1))
  )
)
use the get_dafaults
use the get_dafaults
use the get_dafaults
Loading weights into state dict...
self.anchors[i]: [[116.  90.]
 [156. 198.]
 [373. 326.]]
self.anchors[i]: [[ 30.  61.]
 [ 62.  45.]
 [ 59. 119.]]
self.anchors[i]: [[10. 13.]
 [16. 30.]
 [33. 23.]]
model_data/yolo_weights.pth model, anchors, and classes loaded.
Input image filename:C:\Users\不羡仙\Desktop\street.jpg
image: <PIL.Image.Image image mode=RGB size=1330x1330 at 0x26B1413A2B0>
image_shape: [1330 1330]
crop_img: <PIL.Image.Image image mode=RGB size=416x416 at 0x26B1413A0F0>
photonorm: [[[1.         1.         1.        ]
  [1.         1.         1.        ]
  [1.         1.         1.        ]
  ...
  [0.14901961 0.18431373 0.21176471]
  [0.16470589 0.2        0.22745098]
  [0.17254902 0.21568628 0.23921569]]

 [[1.         1.         1.        ]
  [1.         1.         1.        ]
  [1.         1.         1.        ]
  ...
  [0.18039216 0.21568628 0.24313726]
  [0.18431373 0.21960784 0.2509804 ]
  [0.19215687 0.22745098 0.25882354]]

 [[1.         1.         1.        ]
  [1.         1.         1.        ]
  [1.         1.         1.        ]
  ...
  [0.2        0.23529412 0.27058825]
  [0.2        0.23529412 0.27058825]
  [0.2        0.23529412 0.27058825]]

 ...

 [[0.5764706  0.5764706  0.57254905]
  [0.5921569  0.5921569  0.5882353 ]
  [0.6        0.6        0.59607846]
  ...
  [0.47843137 0.47843137 0.4862745 ]
  [0.4862745  0.4862745  0.49411765]
  [0.46666667 0.46666667 0.4745098 ]]

 [[0.5882353  0.5882353  0.58431375]
  [0.58431375 0.58431375 0.5803922 ]
  [0.6117647  0.6117647  0.6117647 ]
  ...
  [0.4862745  0.4862745  0.49411765]
  [0.4862745  0.4862745  0.49411765]
  [0.52156866 0.52156866 0.5294118 ]]

 [[0.58431375 0.58431375 0.58431375]
  [0.5882353  0.5882353  0.59607846]
  [0.59607846 0.59607846 0.6039216 ]
  ...
  [0.4862745  0.4862745  0.49411765]
  [0.49803922 0.49803922 0.5058824 ]
  [0.49803922 0.49803922 0.5058824 ]]]
phototrans: [[[1.         1.         1.         ... 0.14901961 0.16470589 0.17254902]
  [1.         1.         1.         ... 0.18039216 0.18431373 0.19215687]
  [1.         1.         1.         ... 0.2        0.2        0.2       ]
  ...
  [0.5764706  0.5921569  0.6        ... 0.47843137 0.4862745  0.46666667]
  [0.5882353  0.58431375 0.6117647  ... 0.4862745  0.4862745  0.52156866]
  [0.58431375 0.5882353  0.59607846 ... 0.4862745  0.49803922 0.49803922]]

 [[1.         1.         1.         ... 0.18431373 0.2        0.21568628]
  [1.         1.         1.         ... 0.21568628 0.21960784 0.22745098]
  [1.         1.         1.         ... 0.23529412 0.23529412 0.23529412]
  ...
  [0.5764706  0.5921569  0.6        ... 0.47843137 0.4862745  0.46666667]
  [0.5882353  0.58431375 0.6117647  ... 0.4862745  0.4862745  0.52156866]
  [0.58431375 0.5882353  0.59607846 ... 0.4862745  0.49803922 0.49803922]]

 [[1.         1.         1.         ... 0.21176471 0.22745098 0.23921569]
  [1.         1.         1.         ... 0.24313726 0.2509804  0.25882354]
  [1.         1.         1.         ... 0.27058825 0.27058825 0.27058825]
  ...
  [0.57254905 0.5882353  0.59607846 ... 0.4862745  0.49411765 0.4745098 ]
  [0.58431375 0.5803922  0.6117647  ... 0.49411765 0.49411765 0.5294118 ]
  [0.58431375 0.59607846 0.6039216  ... 0.49411765 0.5058824  0.5058824 ]]]
images_batch: [array([[[1.        , 1.        , 1.        , ..., 0.14901961,
         0.16470589, 0.17254902],
        [1.        , 1.        , 1.        , ..., 0.18039216,
         0.18431373, 0.19215687],
        [1.        , 1.        , 1.        , ..., 0.2       ,
         0.2       , 0.2       ],
        ...,
        [0.5764706 , 0.5921569 , 0.6       , ..., 0.47843137,
         0.4862745 , 0.46666667],
        [0.5882353 , 0.58431375, 0.6117647 , ..., 0.4862745 ,
         0.4862745 , 0.52156866],
        [0.58431375, 0.5882353 , 0.59607846, ..., 0.4862745 ,
         0.49803922, 0.49803922]],

       [[1.        , 1.        , 1.        , ..., 0.18431373,
         0.2       , 0.21568628],
        [1.        , 1.        , 1.        , ..., 0.21568628,
         0.21960784, 0.22745098],
        [1.        , 1.        , 1.        , ..., 0.23529412,
         0.23529412, 0.23529412],
        ...,
        [0.5764706 , 0.5921569 , 0.6       , ..., 0.47843137,
         0.4862745 , 0.46666667],
        [0.5882353 , 0.58431375, 0.6117647 , ..., 0.4862745 ,
         0.4862745 , 0.52156866],
        [0.58431375, 0.5882353 , 0.59607846, ..., 0.4862745 ,
         0.49803922, 0.49803922]],

       [[1.        , 1.        , 1.        , ..., 0.21176471,
         0.22745098, 0.23921569],
        [1.        , 1.        , 1.        , ..., 0.24313726,
         0.2509804 , 0.25882354],
        [1.        , 1.        , 1.        , ..., 0.27058825,
         0.27058825, 0.27058825],
        ...,
        [0.57254905, 0.5882353 , 0.59607846, ..., 0.4862745 ,
         0.49411765, 0.4745098 ],
        [0.58431375, 0.5803922 , 0.6117647 , ..., 0.49411765,
         0.49411765, 0.5294118 ],
        [0.58431375, 0.59607846, 0.6039216 , ..., 0.49411765,
         0.5058824 , 0.5058824 ]]], dtype=float32)]
imagestorch: tensor([[[[1.0000, 1.0000, 1.0000,  ..., 0.1490, 0.1647, 0.1725],
          [1.0000, 1.0000, 1.0000,  ..., 0.1804, 0.1843, 0.1922],
          [1.0000, 1.0000, 1.0000,  ..., 0.2000, 0.2000, 0.2000],
          ...,
          [0.5765, 0.5922, 0.6000,  ..., 0.4784, 0.4863, 0.4667],
          [0.5882, 0.5843, 0.6118,  ..., 0.4863, 0.4863, 0.5216],
          [0.5843, 0.5882, 0.5961,  ..., 0.4863, 0.4980, 0.4980]],

         [[1.0000, 1.0000, 1.0000,  ..., 0.1843, 0.2000, 0.2157],
          [1.0000, 1.0000, 1.0000,  ..., 0.2157, 0.2196, 0.2275],
          [1.0000, 1.0000, 1.0000,  ..., 0.2353, 0.2353, 0.2353],
          ...,
          [0.5765, 0.5922, 0.6000,  ..., 0.4784, 0.4863, 0.4667],
          [0.5882, 0.5843, 0.6118,  ..., 0.4863, 0.4863, 0.5216],
          [0.5843, 0.5882, 0.5961,  ..., 0.4863, 0.4980, 0.4980]],

         [[1.0000, 1.0000, 1.0000,  ..., 0.2118, 0.2275, 0.2392],
          [1.0000, 1.0000, 1.0000,  ..., 0.2431, 0.2510, 0.2588],
          [1.0000, 1.0000, 1.0000,  ..., 0.2706, 0.2706, 0.2706],
          ...,
          [0.5725, 0.5882, 0.5961,  ..., 0.4863, 0.4941, 0.4745],
          [0.5843, 0.5804, 0.6118,  ..., 0.4941, 0.4941, 0.5294],
          [0.5843, 0.5961, 0.6039,  ..., 0.4941, 0.5059, 0.5059]]]])
imagescuda: tensor([[[[1.0000, 1.0000, 1.0000,  ..., 0.1490, 0.1647, 0.1725],
          [1.0000, 1.0000, 1.0000,  ..., 0.1804, 0.1843, 0.1922],
          [1.0000, 1.0000, 1.0000,  ..., 0.2000, 0.2000, 0.2000],
          ...,
          [0.5765, 0.5922, 0.6000,  ..., 0.4784, 0.4863, 0.4667],
          [0.5882, 0.5843, 0.6118,  ..., 0.4863, 0.4863, 0.5216],
          [0.5843, 0.5882, 0.5961,  ..., 0.4863, 0.4980, 0.4980]],

         [[1.0000, 1.0000, 1.0000,  ..., 0.1843, 0.2000, 0.2157],
          [1.0000, 1.0000, 1.0000,  ..., 0.2157, 0.2196, 0.2275],
          [1.0000, 1.0000, 1.0000,  ..., 0.2353, 0.2353, 0.2353],
          ...,
          [0.5765, 0.5922, 0.6000,  ..., 0.4784, 0.4863, 0.4667],
          [0.5882, 0.5843, 0.6118,  ..., 0.4863, 0.4863, 0.5216],
          [0.5843, 0.5882, 0.5961,  ..., 0.4863, 0.4980, 0.4980]],

         [[1.0000, 1.0000, 1.0000,  ..., 0.2118, 0.2275, 0.2392],
          [1.0000, 1.0000, 1.0000,  ..., 0.2431, 0.2510, 0.2588],
          [1.0000, 1.0000, 1.0000,  ..., 0.2706, 0.2706, 0.2706],
          ...,
          [0.5725, 0.5882, 0.5961,  ..., 0.4863, 0.4941, 0.4745],
          [0.5843, 0.5804, 0.6118,  ..., 0.4941, 0.4941, 0.5294],
          [0.5843, 0.5961, 0.6039,  ..., 0.4941, 0.5059, 0.5059]]]],
       device='cuda:0')
input: tensor([[[[ -0.3180,   0.5235,   0.4413,  ...,   0.4291,  -0.8028,  -0.1594],
          [ -0.2616,   0.5125,   0.4825,  ...,   0.6654,  -0.9139,  -0.3982],
          [ -0.3928,   0.5546,   0.4167,  ...,   0.9203,  -0.3512,  -0.6636],
          ...,
          [ -0.5403,   0.1387,  -0.5573,  ...,  -0.7086,  -0.6497,  -0.0481],
          [ -0.6344,   0.1138,   0.0183,  ...,  -0.2939,  -0.7829,   0.3575],
          [ -0.2489,   1.1099,   0.5403,  ...,  -0.2362,  -0.6690,   0.2580]],

         [[  0.5426,   1.0245,   1.0645,  ...,   0.8405,   0.8867,  -0.1318],
          [ -0.0141,  -0.0246,   0.0410,  ...,   0.0790,   0.8027,   0.6092],
          [  0.4862,   0.2018,   0.1902,  ...,  -0.6030,  -0.7783,  -0.3642],
          ...,
          [  0.4564,   0.1596,   0.0127,  ...,  -0.0316,   0.7198,   0.3725],
          [  0.1022,  -0.3097,   0.6234,  ...,   0.2616,   0.3523,   0.8018],
          [ -0.7432,  -0.7764,  -0.4287,  ...,  -0.2368,  -0.8605,  -0.5373]],

         [[  0.3545,   0.1370,   0.4827,  ...,   0.3631,   0.1227,   0.5435],
          [  0.0829,  -0.1581,   0.2271,  ...,   0.2555,  -0.0435,   0.3578],
          [  0.1382,  -0.1243,   0.1808,  ...,   0.1836,  -0.1163,   0.2197],
          ...,
          [ -0.1061,  -0.1734,   0.1598,  ...,   0.3378,  -0.0644,   0.3244],
          [ -0.2151,  -0.1416,   0.2629,  ...,   0.3304,  -0.1378,   0.2539],
          [  0.1487,   0.1414,   0.3626,  ...,   0.4697,   0.1702,   0.5418]],

         ...,

         [[ -4.5642,  -4.6301,  -4.2732,  ...,  -5.1009,  -5.1620,  -3.6537],
          [ -4.3771,  -4.6559,  -4.2298,  ...,  -6.3485,  -6.4930,  -4.5303],
          [ -4.0680,  -4.3774,  -4.2560,  ...,  -7.3588,  -7.7401,  -5.1450],
          ...,
          [ -4.7219,  -6.7858,  -7.6364,  ..., -12.6375,  -9.3036,  -5.8292],
          [ -5.6208,  -7.5618,  -9.0496,  ..., -11.3560,  -9.2251,  -5.5086],
          [ -5.4132,  -7.0614,  -9.3036,  ...,  -8.4075,  -6.4625,  -3.5800]],

         [[ -5.1100,  -5.4665,  -5.5741,  ...,  -6.5227,  -6.4222,  -5.3222],
          [ -5.1322,  -5.5975,  -5.8859,  ...,  -6.8842,  -6.7407,  -5.4836],
          [ -5.5378,  -6.3089,  -6.6473,  ...,  -7.5569,  -7.0253,  -5.5416],
          ...,
          [ -5.6665,  -7.0529,  -7.6313,  ..., -10.3407,  -8.4265,  -6.4124],
          [ -5.5065,  -7.5725,  -8.0733,  ...,  -9.1147,  -7.3722,  -5.9326],
          [ -5.1529,  -6.9624,  -7.6522,  ...,  -7.2795,  -6.0896,  -4.7731]],

         [[ -4.4107,  -4.8478,  -5.5157,  ...,  -6.4640,  -6.1726,  -4.4605],
          [ -4.5054,  -5.4545,  -6.2256,  ...,  -7.7997,  -7.6222,  -5.3276],
          [ -4.7113,  -5.8510,  -6.9439,  ...,  -8.7653,  -8.1834,  -5.4633],
          ...,
          [ -5.1498,  -7.0786,  -7.7451,  ..., -11.2167,  -9.3005,  -6.2412],
          [ -5.4353,  -7.9227,  -8.5884,  ..., -10.1535,  -8.6558,  -6.0309],
          [ -4.9323,  -7.2379,  -7.8492,  ...,  -8.0988,  -7.0567,  -4.7831]]]],
       device='cuda:0')
input_size: torch.Size([1, 255, 13, 13])
scaled_anchors: [(3.625, 2.8125), (4.875, 6.1875), (11.65625, 10.1875)]
prediction: tensor([[[[[-3.1796e-01,  5.4260e-01,  3.5451e-01,  ..., -5.7762e+00,
            -5.4879e+00, -5.5787e+00],
           [ 5.2352e-01,  1.0245e+00,  1.3704e-01,  ..., -5.8701e+00,
            -5.7671e+00, -6.4820e+00],
           [ 4.4132e-01,  1.0645e+00,  4.8270e-01,  ..., -5.6526e+00,
            -5.7730e+00, -6.7241e+00],
           ...,
           [ 4.2908e-01,  8.4050e-01,  3.6309e-01,  ..., -6.6736e+00,
            -6.7696e+00, -7.3911e+00],
           [-8.0275e-01,  8.8672e-01,  1.2272e-01,  ..., -6.7508e+00,
            -6.8114e+00, -6.9079e+00],
           [-1.5942e-01, -1.3175e-01,  5.4350e-01,  ..., -3.8134e+00,
            -5.8197e+00, -4.9307e+00]],

          [[-2.6157e-01, -1.4067e-02,  8.2927e-02,  ..., -4.7476e+00,
            -5.2547e+00, -5.1764e+00],
           [ 5.1255e-01, -2.4641e-02, -1.5808e-01,  ..., -5.3956e+00,
            -5.5567e+00, -6.6618e+00],
           [ 4.8252e-01,  4.1025e-02,  2.2713e-01,  ..., -5.1306e+00,
            -5.7474e+00, -6.8220e+00],
           ...,
           [ 6.6535e-01,  7.8993e-02,  2.5549e-01,  ..., -6.7770e+00,
            -6.9538e+00, -8.7912e+00],
           [-9.1392e-01,  8.0275e-01, -4.3494e-02,  ..., -7.7152e+00,
            -7.2049e+00, -8.8157e+00],
           [-3.9815e-01,  6.0921e-01,  3.5783e-01,  ..., -4.1679e+00,
            -5.7542e+00, -5.6142e+00]],

          [[-3.9276e-01,  4.8615e-01,  1.3816e-01,  ..., -3.4465e+00,
            -4.6981e+00, -4.7848e+00],
           [ 5.5459e-01,  2.0181e-01, -1.2431e-01,  ..., -3.7928e+00,
            -4.9479e+00, -5.9874e+00],
           [ 4.1671e-01,  1.9021e-01,  1.8081e-01,  ..., -3.4803e+00,
            -5.1992e+00, -6.1175e+00],
           ...,
           [ 9.2026e-01, -6.0296e-01,  1.8362e-01,  ..., -6.3750e+00,
            -6.7911e+00, -8.8979e+00],
           [-3.5123e-01, -7.7832e-01, -1.1628e-01,  ..., -8.3156e+00,
            -7.2097e+00, -9.4550e+00],
           [-6.6357e-01, -3.6419e-01,  2.1971e-01,  ..., -4.7544e+00,
            -5.6542e+00, -5.9506e+00]],

          ...,

          [[-5.4034e-01,  4.5636e-01, -1.0611e-01,  ..., -4.6365e+00,
            -7.0130e+00, -6.9517e+00],
           [ 1.3869e-01,  1.5963e-01, -1.7345e-01,  ..., -6.9786e+00,
            -8.3398e+00, -8.6338e+00],
           [-5.5731e-01,  1.2657e-02,  1.5982e-01,  ..., -7.1117e+00,
            -8.0388e+00, -8.6524e+00],
           ...,
           [-7.0859e-01, -3.1601e-02,  3.3781e-01,  ..., -9.3844e+00,
            -1.1092e+01, -1.1249e+01],
           [-6.4973e-01,  7.1979e-01, -6.4353e-02,  ..., -7.4518e+00,
            -9.0974e+00, -9.7273e+00],
           [-4.8139e-02,  3.7247e-01,  3.2444e-01,  ..., -4.1088e+00,
            -6.3650e+00, -6.7458e+00]],

          [[-6.3440e-01,  1.0223e-01, -2.1515e-01,  ..., -4.3145e+00,
            -7.5606e+00, -7.3248e+00],
           [ 1.1375e-01, -3.0972e-01, -1.4159e-01,  ..., -7.1093e+00,
            -9.1606e+00, -9.0231e+00],
           [ 1.8269e-02,  6.2338e-01,  2.6289e-01,  ..., -9.0364e+00,
            -9.8036e+00, -9.6144e+00],
           ...,
           [-2.9386e-01,  2.6165e-01,  3.3043e-01,  ..., -1.1425e+01,
            -1.0951e+01, -1.0376e+01],
           [-7.8289e-01,  3.5230e-01, -1.3782e-01,  ..., -9.0858e+00,
            -8.7333e+00, -9.5280e+00],
           [ 3.5750e-01,  8.0181e-01,  2.5394e-01,  ..., -4.9524e+00,
            -6.4834e+00, -6.9550e+00]],

          [[-2.4891e-01, -7.4321e-01,  1.4872e-01,  ..., -4.4130e+00,
            -7.2910e+00, -6.5017e+00],
           [ 1.1099e+00, -7.7644e-01,  1.4135e-01,  ..., -6.9363e+00,
            -8.8772e+00, -8.2315e+00],
           [ 5.4031e-01, -4.2874e-01,  3.6257e-01,  ..., -1.0062e+01,
            -1.0008e+01, -9.4144e+00],
           ...,
           [-2.3618e-01, -2.3677e-01,  4.6967e-01,  ..., -8.8906e+00,
            -9.4623e+00, -8.1620e+00],
           [-6.6896e-01, -8.6054e-01,  1.7021e-01,  ..., -7.0525e+00,
            -7.8536e+00, -7.7099e+00],
           [ 2.5798e-01, -5.3727e-01,  5.4184e-01,  ..., -4.1949e+00,
            -6.2791e+00, -5.8015e+00]]],


         [[[ 2.7235e-01, -1.2071e-01, -2.2797e-01,  ..., -5.7586e+00,
            -5.8779e+00, -4.7408e+00],
           [ 5.4280e-01, -8.3615e-03, -1.9094e-01,  ..., -5.8038e+00,
            -6.1919e+00, -5.1207e+00],
           [ 5.8361e-01,  9.8043e-02,  8.3303e-02,  ..., -5.3722e+00,
            -6.0803e+00, -5.6165e+00],
           ...,
           [ 2.7105e-01,  3.1739e-01, -7.1897e-03,  ..., -5.3273e+00,
            -6.7272e+00, -6.2098e+00],
           [-3.5286e-01, -7.3089e-02, -1.4833e-01,  ..., -5.3819e+00,
            -6.7030e+00, -5.6400e+00],
           [ 2.7583e-01, -1.8046e-01, -1.1919e-01,  ..., -3.8811e+00,
            -5.6752e+00, -4.1443e+00]],

          [[ 6.0547e-01,  4.0192e-01, -1.4506e-01,  ..., -5.4438e+00,
            -6.0250e+00, -4.5855e+00],
           [ 3.7773e-01,  9.2453e-01, -9.0083e-02,  ..., -5.6764e+00,
            -6.2235e+00, -5.4092e+00],
           [ 6.0819e-01,  9.7679e-01,  1.9163e-01,  ..., -4.9366e+00,
            -6.1651e+00, -6.0780e+00],
           ...,
           [ 1.2249e-01,  1.3884e+00,  1.2879e-01,  ..., -6.1661e+00,
            -7.1805e+00, -7.8710e+00],
           [-9.9650e-01,  1.5530e+00, -7.1082e-02,  ..., -6.6930e+00,
            -7.2436e+00, -7.6783e+00],
           [ 5.6503e-02,  5.1000e-01,  9.5419e-03,  ..., -4.3778e+00,
            -5.6841e+00, -4.8309e+00]],

          [[ 6.5108e-01,  4.5816e-01, -2.8589e-01,  ..., -4.4150e+00,
            -5.6188e+00, -4.1865e+00],
           [ 4.7061e-01,  5.7953e-01, -2.9178e-01,  ..., -4.3347e+00,
            -5.9032e+00, -4.9314e+00],
           [ 4.5976e-01,  1.7201e-01,  9.4741e-02,  ..., -3.7325e+00,
            -6.0324e+00, -5.9831e+00],
           ...,
           [ 1.5954e-02, -6.1250e-03,  1.0515e-01,  ..., -6.4264e+00,
            -7.6919e+00, -8.3997e+00],
           [-8.1938e-01,  5.2259e-01, -1.9566e-01,  ..., -7.7369e+00,
            -7.7302e+00, -8.5187e+00],
           [-3.3038e-01, -1.3579e-01, -9.3376e-02,  ..., -5.2765e+00,
            -5.9647e+00, -5.0409e+00]],

          ...,

          [[ 6.2660e-01,  2.7419e-01, -3.5003e-01,  ..., -5.9125e+00,
            -7.0177e+00, -6.6670e+00],
           [ 3.6905e-01, -1.3179e-01, -4.1275e-01,  ..., -7.7509e+00,
            -8.3348e+00, -8.2085e+00],
           [-3.7557e-01,  4.7733e-01, -2.5036e-02,  ..., -7.8731e+00,
            -8.3617e+00, -8.5166e+00],
           ...,
           [-1.1976e+00, -6.7171e-01,  1.1729e-02,  ..., -1.1186e+01,
            -1.0828e+01, -1.1089e+01],
           [-5.2107e-01, -8.2734e-02, -1.6763e-01,  ..., -8.9099e+00,
            -9.2838e+00, -9.8486e+00],
           [-1.8533e-01,  1.1701e-01, -3.6535e-01,  ..., -5.3974e+00,
            -6.7975e+00, -6.3322e+00]],

          [[ 6.0274e-01, -4.2734e-01, -2.5391e-01,  ..., -6.2525e+00,
            -7.0630e+00, -7.0781e+00],
           [ 7.4534e-01, -1.2470e+00, -2.4655e-01,  ..., -8.0371e+00,
            -8.6409e+00, -8.7134e+00],
           [ 9.6222e-02, -1.1040e+00, -3.5528e-02,  ..., -9.4098e+00,
            -9.4450e+00, -9.1231e+00],
           ...,
           [-1.1395e+00, -7.2670e-01,  1.2891e-01,  ..., -1.1544e+01,
            -1.0368e+01, -1.0191e+01],
           [-7.6669e-01, -5.0881e-01, -2.0061e-01,  ..., -9.3868e+00,
            -8.3319e+00, -9.1083e+00],
           [ 2.9448e-01, -5.2855e-01, -1.9109e-01,  ..., -5.7894e+00,
            -6.3702e+00, -6.2742e+00]],

          [[ 4.4405e-01,  5.1251e-02, -2.5901e-01,  ..., -5.5701e+00,
            -6.7601e+00, -6.4604e+00],
           [ 7.4527e-01,  9.7430e-02, -2.2669e-01,  ..., -7.1152e+00,
            -8.2618e+00, -8.1138e+00],
           [ 5.1083e-01, -1.2031e-01, -9.9866e-02,  ..., -9.7132e+00,
            -9.4902e+00, -9.0108e+00],
           ...,
           [-4.6587e-01,  1.4258e-01,  2.7439e-02,  ..., -8.5160e+00,
            -8.5322e+00, -8.2869e+00],
           [-1.1401e-01,  2.4441e-01, -1.4154e-01,  ..., -6.4850e+00,
            -7.0250e+00, -7.5470e+00],
           [ 1.0376e-01,  1.5985e-01, -1.5313e-01,  ..., -3.9270e+00,
            -5.3973e+00, -5.1456e+00]]],


         [[[ 7.2712e-01,  2.8649e-01, -1.2131e-01,  ..., -4.5642e+00,
            -5.1100e+00, -4.4107e+00],
           [ 9.4041e-01,  3.8051e-01, -1.0259e-01,  ..., -4.6301e+00,
            -5.4665e+00, -4.8478e+00],
           [ 7.9193e-01,  2.5944e-01, -7.1409e-02,  ..., -4.2732e+00,
            -5.5741e+00, -5.5157e+00],
           ...,
           [ 1.5838e-02,  1.9576e-01, -1.9319e-01,  ..., -5.1009e+00,
            -6.5227e+00, -6.4640e+00],
           [ 8.2870e-02, -1.0869e-01, -1.6435e-01,  ..., -5.1620e+00,
            -6.4222e+00, -6.1726e+00],
           [ 4.9458e-01,  1.0431e-01, -1.0587e-01,  ..., -3.6537e+00,
            -5.3222e+00, -4.4605e+00]],

          [[ 5.7830e-01,  3.0061e-01, -1.4126e-01,  ..., -4.3771e+00,
            -5.1322e+00, -4.5054e+00],
           [ 8.1010e-01,  5.0314e-01, -9.3869e-02,  ..., -4.6559e+00,
            -5.5975e+00, -5.4545e+00],
           [ 1.0366e+00,  5.6675e-01, -1.2735e-01,  ..., -4.2298e+00,
            -5.8859e+00, -6.2256e+00],
           ...,
           [-1.1028e-01,  8.3904e-01, -2.3412e-01,  ..., -6.3485e+00,
            -6.8842e+00, -7.7997e+00],
           [-1.9033e-01,  8.6960e-01, -2.5899e-01,  ..., -6.4930e+00,
            -6.7407e+00, -7.6222e+00],
           [ 6.2870e-01,  4.4059e-01, -6.4725e-02,  ..., -4.5303e+00,
            -5.4836e+00, -5.3276e+00]],

          [[ 1.6558e-01,  3.2818e-01, -1.4088e-01,  ..., -4.0680e+00,
            -5.5378e+00, -4.7113e+00],
           [ 8.3861e-01,  4.1867e-01, -1.2139e-01,  ..., -4.3774e+00,
            -6.3089e+00, -5.8510e+00],
           [ 1.0344e+00,  5.0929e-01, -1.9803e-01,  ..., -4.2560e+00,
            -6.6473e+00, -6.9439e+00],
           ...,
           [-2.7543e-01,  1.6914e-01, -2.4832e-01,  ..., -7.3588e+00,
            -7.5569e+00, -8.7653e+00],
           [-1.3432e-01,  1.7246e-01, -1.9386e-01,  ..., -7.7401e+00,
            -7.0253e+00, -8.1834e+00],
           [ 8.4289e-01, -4.2710e-02, -4.6075e-02,  ..., -5.1450e+00,
            -5.5416e+00, -5.4633e+00]],

          ...,

          [[ 5.1093e-01, -2.4528e-02, -1.0771e-01,  ..., -4.7219e+00,
            -5.6665e+00, -5.1498e+00],
           [ 1.8769e-01, -2.8538e-02, -2.6063e-01,  ..., -6.7858e+00,
            -7.0529e+00, -7.0786e+00],
           [ 8.3910e-01, -4.7954e-01, -2.2693e-01,  ..., -7.6364e+00,
            -7.6313e+00, -7.7451e+00],
           ...,
           [-7.8313e-01, -7.3824e-01, -1.3632e-01,  ..., -1.2638e+01,
            -1.0341e+01, -1.1217e+01],
           [ 7.7287e-02, -3.2783e-02, -4.3298e-01,  ..., -9.3036e+00,
            -8.4265e+00, -9.3005e+00],
           [ 2.3325e-01,  2.5302e-01, -2.2526e-02,  ..., -5.8292e+00,
            -6.4124e+00, -6.2412e+00]],

          [[ 3.4403e-01, -9.6849e-02, -7.0674e-02,  ..., -5.6208e+00,
            -5.5065e+00, -5.4353e+00],
           [ 5.4531e-01, -1.5917e-01, -1.6465e-01,  ..., -7.5618e+00,
            -7.5725e+00, -7.9227e+00],
           [ 9.6365e-01, -5.0306e-01, -1.5024e-01,  ..., -9.0496e+00,
            -8.0733e+00, -8.5884e+00],
           ...,
           [-1.0781e+00, -7.9521e-01, -1.0741e-01,  ..., -1.1356e+01,
            -9.1147e+00, -1.0153e+01],
           [ 6.5339e-01, -3.5210e-01, -3.1756e-01,  ..., -9.2251e+00,
            -7.3722e+00, -8.6558e+00],
           [ 2.8520e-01, -3.3261e-01,  5.6315e-02,  ..., -5.5086e+00,
            -5.9326e+00, -6.0309e+00]],

          [[ 3.2622e-01,  3.1816e-02, -1.6115e-01,  ..., -5.4132e+00,
            -5.1529e+00, -4.9323e+00],
           [ 7.3440e-01,  1.0327e-01, -3.5550e-01,  ..., -7.0614e+00,
            -6.9624e+00, -7.2379e+00],
           [ 8.3864e-01,  3.3558e-01, -2.2267e-01,  ..., -9.3036e+00,
            -7.6522e+00, -7.8492e+00],
           ...,
           [-2.9878e-01,  2.5458e-01, -1.7796e-01,  ..., -8.4075e+00,
            -7.2795e+00, -8.0988e+00],
           [ 4.3036e-01,  1.6807e-01, -3.0728e-01,  ..., -6.4625e+00,
            -6.0896e+00, -7.0567e+00],
           [ 7.3342e-02, -3.5101e-01, -5.7720e-02,  ..., -3.5800e+00,
            -4.7731e+00, -4.7831e+00]]]]], device='cuda:0')
prediction_size: torch.Size([1, 3, 13, 13, 85])
x: tensor([[[[0.4212, 0.6280, 0.6086, 0.4832, 0.4969, 0.4837, 0.4847, 0.3930,
           0.5743, 0.5127, 0.6057, 0.3094, 0.4602],
          [0.4350, 0.6254, 0.6183, 0.4202, 0.3766, 0.3586, 0.5028, 0.4788,
           0.5570, 0.5564, 0.6605, 0.2862, 0.4018],
          [0.4031, 0.6352, 0.6027, 0.4639, 0.4311, 0.3665, 0.5467, 0.4916,
           0.4618, 0.6184, 0.7151, 0.4131, 0.3399],
          [0.3883, 0.5998, 0.6262, 0.4780, 0.5712, 0.4917, 0.5262, 0.6445,
           0.4496, 0.5061, 0.5553, 0.4055, 0.4232],
          [0.4872, 0.6138, 0.6177, 0.5200, 0.4921, 0.4199, 0.5208, 0.5999,
           0.5213, 0.4749, 0.5006, 0.4992, 0.3525],
          [0.6009, 0.6475, 0.5871, 0.4220, 0.4355, 0.4569, 0.4459, 0.5546,
           0.4773, 0.4116, 0.4007, 0.5248, 0.3061],
          [0.5651, 0.6472, 0.5881, 0.4169, 0.4062, 0.4896, 0.4279, 0.8653,
           0.0784, 0.8226, 0.1127, 0.4534, 0.4093],
          [0.6084, 0.6354, 0.4318, 0.4188, 0.4889, 0.4364, 0.4512, 0.7772,
           0.3038, 0.8989, 0.1432, 0.2752, 0.4065],
          [0.4122, 0.6388, 0.5304, 0.3867, 0.4907, 0.5069, 0.4275, 0.5640,
           0.7783, 0.8990, 0.0623, 0.1424, 0.4221],
          [0.3525, 0.5766, 0.4904, 0.4318, 0.4646, 0.4359, 0.4514, 0.4939,
           0.6364, 0.8670, 0.0666, 0.2207, 0.6036],
          [0.3681, 0.5346, 0.3642, 0.5120, 0.5162, 0.4717, 0.4184, 0.3256,
           0.4628, 0.5572, 0.3299, 0.3430, 0.4880],
          [0.3465, 0.5284, 0.5046, 0.3637, 0.5010, 0.4576, 0.3798, 0.2917,
           0.5369, 0.4689, 0.4271, 0.3137, 0.5884],
          [0.4381, 0.7521, 0.6319, 0.3853, 0.4513, 0.4996, 0.4027, 0.3006,
           0.5239, 0.4638, 0.4412, 0.3387, 0.5641]],

         [[0.5677, 0.6325, 0.6419, 0.4776, 0.5208, 0.4639, 0.5293, 0.5216,
           0.5358, 0.5440, 0.5674, 0.4127, 0.5685],
          [0.6469, 0.5933, 0.6475, 0.3629, 0.3947, 0.3448, 0.4879, 0.5092,
           0.5405, 0.5946, 0.5306, 0.2696, 0.5141],
          [0.6573, 0.6155, 0.6130, 0.3404, 0.4357, 0.3205, 0.5171, 0.5633,
           0.5462, 0.5534, 0.5040, 0.3059, 0.4181],
          [0.6729, 0.5589, 0.5871, 0.3570, 0.4448, 0.3435, 0.4625, 0.5861,
           0.5863, 0.5070, 0.5174, 0.4052, 0.2580],
          [0.7081, 0.5623, 0.5965, 0.4110, 0.4421, 0.4374, 0.4680, 0.5388,
           0.5800, 0.4819, 0.4702, 0.5066, 0.2409],
          [0.6722, 0.5674, 0.6412, 0.4013, 0.4084, 0.4116, 0.4891, 0.5298,
           0.5431, 0.4054, 0.4035, 0.5134, 0.2933],
          [0.6457, 0.6080, 0.5706, 0.3933, 0.3855, 0.4084, 0.5061, 0.4590,
           0.5084, 0.8018, 0.1583, 0.4052, 0.3927],
          [0.6331, 0.6368, 0.6027, 0.3969, 0.4553, 0.4318, 0.5557, 0.5494,
           0.5318, 0.8575, 0.1048, 0.2435, 0.3817],
          [0.6146, 0.6384, 0.5321, 0.4346, 0.4804, 0.4086, 0.5227, 0.5914,
           0.5269, 0.8714, 0.0818, 0.2632, 0.4021],
          [0.6324, 0.5984, 0.4089, 0.5030, 0.4699, 0.4336, 0.5447, 0.5864,
           0.4546, 0.8013, 0.1239, 0.3395, 0.5181],
          [0.6517, 0.5912, 0.4072, 0.5587, 0.5101, 0.4820, 0.5616, 0.4379,
           0.3889, 0.7011, 0.2319, 0.3726, 0.4538],
          [0.6463, 0.6782, 0.5240, 0.4473, 0.5126, 0.5013, 0.5112, 0.3614,
           0.4817, 0.5193, 0.2424, 0.3172, 0.5731],
          [0.6092, 0.6781, 0.6250, 0.4759, 0.4972, 0.4684, 0.4574, 0.3837,
           0.5619, 0.5366, 0.3856, 0.4715, 0.5259]],

         [[0.6742, 0.7192, 0.6882, 0.5494, 0.5739, 0.5586, 0.5859, 0.5484,
           0.5839, 0.5370, 0.5040, 0.5207, 0.6212],
          [0.6407, 0.6921, 0.7382, 0.5839, 0.5637, 0.6059, 0.5415, 0.4607,
           0.4787, 0.3993, 0.4725, 0.4526, 0.6522],
          [0.5413, 0.6982, 0.7378, 0.5225, 0.5673, 0.5537, 0.5345, 0.4683,
           0.5174, 0.3974, 0.4316, 0.4665, 0.6991],
          [0.5133, 0.6929, 0.7633, 0.5267, 0.5893, 0.5627, 0.5746, 0.5381,
           0.5163, 0.3812, 0.4021, 0.5014, 0.6723],
          [0.5234, 0.6261, 0.7534, 0.5375, 0.5759, 0.6369, 0.5052, 0.4661,
           0.4878, 0.3888, 0.2758, 0.4541, 0.6398],
          [0.4987, 0.5722, 0.6551, 0.4396, 0.5309, 0.5313, 0.4602, 0.4454,
           0.4876, 0.3718, 0.3270, 0.4688, 0.5723],
          [0.5788, 0.6069, 0.5875, 0.4690, 0.5388, 0.4729, 0.4334, 0.4629,
           0.4973, 0.5217, 0.3506, 0.5239, 0.5555],
          [0.5999, 0.5594, 0.5504, 0.4640, 0.5895, 0.5555, 0.4409, 0.4780,
           0.4282, 0.6651, 0.3633, 0.4445, 0.5360],
          [0.6110, 0.6062, 0.6376, 0.5229, 0.5654, 0.5798, 0.4676, 0.4673,
           0.3708, 0.5510, 0.4030, 0.4158, 0.5285],
          [0.5902, 0.6016, 0.6593, 0.6037, 0.5727, 0.5808, 0.5129, 0.4445,
           0.2875, 0.6150, 0.4689, 0.4537, 0.5418],
          [0.6250, 0.5468, 0.6983, 0.5609, 0.5479, 0.6268, 0.4813, 0.2386,
           0.1940, 0.4529, 0.3136, 0.5193, 0.5580],
          [0.5852, 0.6330, 0.7239, 0.4879, 0.6257, 0.6564, 0.3718, 0.1695,
           0.3190, 0.4683, 0.2539, 0.6578, 0.5708],
          [0.5808, 0.6758, 0.6982, 0.5108, 0.6150, 0.6264, 0.5219, 0.3193,
           0.4940, 0.5097, 0.4259, 0.6060, 0.5183]]]], device='cuda:0')
x_size: torch.Size([1, 3, 13, 13])
y: tensor([[[[0.6324, 0.7359, 0.7436, 0.7730, 0.7308, 0.6596, 0.6159, 0.6060,
           0.6413, 0.6390, 0.6986, 0.7082, 0.4671],
          [0.4965, 0.4938, 0.5103, 0.5414, 0.5594, 0.5455, 0.4735, 0.5391,
           0.4035, 0.3884, 0.5197, 0.6906, 0.6478],
          [0.6192, 0.5503, 0.5474, 0.4845, 0.4754, 0.5980, 0.6084, 0.5635,
           0.5962, 0.5601, 0.3537, 0.3147, 0.4099],
          [0.6867, 0.6497, 0.6047, 0.5449, 0.5664, 0.5374, 0.5443, 0.4654,
           0.5060, 0.5012, 0.4756, 0.4445, 0.4706],
          [0.5323, 0.6407, 0.6478, 0.6357, 0.5987, 0.5962, 0.6474, 0.6870,
           0.6918, 0.6618, 0.7122, 0.7428, 0.7276],
          [0.7434, 0.8456, 0.8699, 0.8617, 0.8240, 0.8430, 0.8502, 0.7987,
           0.6686, 0.6801, 0.6378, 0.5313, 0.4900],
          [0.3194, 0.4573, 0.4245, 0.4867, 0.5221, 0.4734, 0.3459, 0.5697,
           0.5609, 0.6835, 0.7477, 0.4113, 0.3968],
          [0.4232, 0.3722, 0.2686, 0.2281, 0.2177, 0.1838, 0.3294, 0.1115,
           0.1891, 0.3761, 0.3697, 0.5936, 0.5281],
          [0.4532, 0.1853, 0.2972, 0.2913, 0.3254, 0.4020, 0.5316, 0.5393,
           0.5078, 0.5820, 0.5620, 0.4523, 0.4152],
          [0.4401, 0.4566, 0.4234, 0.3953, 0.4670, 0.4380, 0.3723, 0.3505,
           0.2612, 0.0548, 0.0604, 0.2831, 0.5207],
          [0.6121, 0.5398, 0.5032, 0.4314, 0.3932, 0.4210, 0.4447, 0.4262,
           0.4122, 0.3834, 0.4921, 0.6726, 0.5921],
          [0.5255, 0.4232, 0.6510, 0.7750, 0.7160, 0.6973, 0.6718, 0.7029,
           0.7253, 0.6629, 0.5650, 0.5872, 0.6904],
          [0.3223, 0.3151, 0.3944, 0.4351, 0.5074, 0.5067, 0.4659, 0.4175,
           0.4264, 0.4310, 0.4411, 0.2972, 0.3688]],

         [[0.4699, 0.4979, 0.5245, 0.5626, 0.5327, 0.4990, 0.4763, 0.4986,
           0.5371, 0.5435, 0.5787, 0.4817, 0.4550],
          [0.5991, 0.7160, 0.7265, 0.7660, 0.7458, 0.7052, 0.6731, 0.7170,
           0.6787, 0.7344, 0.8003, 0.8253, 0.6248],
          [0.6126, 0.6410, 0.5429, 0.5180, 0.5080, 0.5275, 0.5539, 0.5083,
           0.6003, 0.5733, 0.4985, 0.6278, 0.4661],
          [0.6025, 0.5998, 0.5943, 0.5087, 0.4886, 0.4795, 0.5050, 0.4378,
           0.4554, 0.5035, 0.5177, 0.5659, 0.5255],
          [0.4921, 0.4698, 0.5250, 0.5673, 0.5776, 0.5806, 0.5878, 0.5860,
           0.5433, 0.4071, 0.3845, 0.3829, 0.4525],
          [0.3913, 0.3874, 0.4486, 0.5043, 0.5058, 0.5258, 0.5960, 0.5593,
           0.5415, 0.5040, 0.4524, 0.3442, 0.4268],
          [0.6114, 0.7796, 0.8169, 0.7899, 0.7270, 0.7205, 0.6497, 0.6095,
           0.5797, 0.8639, 0.8708, 0.5114, 0.4644],
          [0.3436, 0.3191, 0.2852, 0.2873, 0.3399, 0.3738, 0.3937, 0.4375,
           0.5104, 0.3863, 0.3336, 0.3855, 0.4277],
          [0.4452, 0.4686, 0.4169, 0.3228, 0.3167, 0.2710, 0.2657, 0.2263,
           0.2023, 0.3955, 0.4002, 0.3161, 0.4823],
          [0.3860, 0.3462, 0.3548, 0.3566, 0.4015, 0.4015, 0.4025, 0.3860,
           0.2644, 0.1233, 0.1631, 0.2915, 0.5003],
          [0.5681, 0.4671, 0.6171, 0.5646, 0.5117, 0.4685, 0.4702, 0.4936,
           0.4149, 0.2086, 0.3381, 0.4793, 0.5292],
          [0.3948, 0.2232, 0.2490, 0.2643, 0.2991, 0.4104, 0.3785, 0.3112,
           0.3305, 0.3715, 0.3259, 0.3755, 0.3709],
          [0.5128, 0.5243, 0.4700, 0.5042, 0.5228, 0.5353, 0.5400, 0.5859,
           0.5491, 0.5144, 0.5356, 0.5608, 0.5399]],

         [[0.5711, 0.5940, 0.5645, 0.6032, 0.5770, 0.5945, 0.6196, 0.6177,
           0.5778, 0.5628, 0.5488, 0.4729, 0.5261],
          [0.5746, 0.6232, 0.6380, 0.6482, 0.6714, 0.7281, 0.7160, 0.7084,
           0.6977, 0.7116, 0.6983, 0.7047, 0.6084],
          [0.5813, 0.6032, 0.6246, 0.6252, 0.6102, 0.6049, 0.6053, 0.6295,
           0.6407, 0.6402, 0.5422, 0.5430, 0.4893],
          [0.5911, 0.6186, 0.6251, 0.5433, 0.4801, 0.4329, 0.4499, 0.4935,
           0.5445, 0.5658, 0.5978, 0.5992, 0.5584],
          [0.4662, 0.4389, 0.4972, 0.5099, 0.5396, 0.5653, 0.5794, 0.5886,
           0.5715, 0.4483, 0.4363, 0.3877, 0.4357],
          [0.5163, 0.4881, 0.5542, 0.5516, 0.6010, 0.5912, 0.6586, 0.6061,
           0.5810, 0.4997, 0.5310, 0.4031, 0.5034],
          [0.6259, 0.6694, 0.7420, 0.7089, 0.6998, 0.6947, 0.6676, 0.5447,
           0.4850, 0.5476, 0.5702, 0.4836, 0.4816],
          [0.4713, 0.4254, 0.3795, 0.4061, 0.4729, 0.5258, 0.5379, 0.5361,
           0.5455, 0.4957, 0.5411, 0.5306, 0.4756],
          [0.4993, 0.5116, 0.4011, 0.4467, 0.3520, 0.3300, 0.3654, 0.3501,
           0.3165, 0.3099, 0.3420, 0.3359, 0.5461],
          [0.3866, 0.3453, 0.3085, 0.2812, 0.3233, 0.3419, 0.3928, 0.3893,
           0.3120, 0.2622, 0.2623, 0.3188, 0.5238],
          [0.4939, 0.4929, 0.3824, 0.4050, 0.4030, 0.4350, 0.4419, 0.4481,
           0.3704, 0.3962, 0.3234, 0.4918, 0.5629],
          [0.4758, 0.4603, 0.3768, 0.3636, 0.3382, 0.3788, 0.4109, 0.3980,
           0.3391, 0.3587, 0.3111, 0.4129, 0.4176],
          [0.5080, 0.5258, 0.5831, 0.5898, 0.5705, 0.5103, 0.4602, 0.5644,
           0.6053, 0.5666, 0.5633, 0.5419, 0.4131]]]], device='cuda:0')
y_size: torch.Size([1, 3, 13, 13])
w: tensor([[[[ 3.5451e-01,  1.3704e-01,  4.8270e-01,  5.0019e-01,  4.5847e-01,
            6.6395e-01,  8.2280e-01,  8.3987e-01,  6.3241e-01,  4.2848e-01,
            3.6309e-01,  1.2272e-01,  5.4350e-01],
          [ 8.2927e-02, -1.5808e-01,  2.2713e-01,  2.5465e-01,  4.1814e-02,
            2.3266e-01,  4.6425e-01,  4.3616e-01,  1.2682e-01,  2.1728e-01,
            2.5549e-01, -4.3494e-02,  3.5783e-01],
          [ 1.3816e-01, -1.2431e-01,  1.8081e-01,  1.4063e-01,  8.2979e-02,
            3.4085e-01,  4.1850e-01,  2.7074e-01,  4.2710e-01,  3.7433e-01,
            1.8362e-01, -1.1628e-01,  2.1971e-01],
          [ 3.1435e-01,  1.0882e-01,  3.4114e-01,  3.8866e-01,  4.9641e-01,
            5.2775e-01,  6.9920e-01,  4.4319e-01,  5.8724e-01,  5.8667e-01,
            4.5543e-01,  5.1308e-02,  4.9060e-01],
          [ 3.6592e-01,  1.5964e-01,  4.9454e-01,  5.4123e-01,  4.9045e-01,
            6.2183e-01,  7.8340e-01,  6.2664e-01,  6.3728e-01,  7.1352e-01,
            4.6259e-01,  6.7140e-02,  5.2074e-01],
          [ 4.3412e-01,  1.0833e-01,  4.2545e-01,  4.4912e-01,  6.1896e-01,
            6.8993e-01,  5.6965e-01,  6.3245e-01,  7.0215e-01,  7.0012e-01,
            3.7645e-01, -2.5956e-02,  2.8645e-01],
          [ 5.6394e-01,  7.0584e-02,  3.5682e-01,  4.8021e-01,  5.7981e-01,
            2.6775e-01,  1.5042e-01, -3.0608e-01, -2.7179e-01, -2.4997e-01,
           -2.1494e-01,  3.5613e-02,  4.2503e-01],
          [ 3.9776e-01, -1.9292e-01,  2.0427e-01,  3.6452e-01,  4.3729e-01,
            2.9238e-01,  5.7594e-01,  1.5402e-02,  7.7335e-02, -1.6880e-01,
           -1.8509e-01, -4.3152e-02,  4.0582e-01],
          [ 3.0381e-01, -1.3487e-01,  2.9716e-01,  3.4191e-01,  6.3311e-01,
            5.0186e-01,  6.9028e-01,  4.4493e-01,  7.6514e-02,  2.2114e-01,
            1.8622e-01, -4.9653e-02,  4.6042e-01],
          [ 2.0966e-01, -1.7798e-02,  3.2977e-01,  3.1315e-01,  5.7368e-01,
            8.1969e-01,  9.5865e-01,  7.1568e-01,  1.9197e-01,  2.6184e-01,
            2.9633e-01,  1.2820e-01,  6.3142e-01],
          [-1.0611e-01, -1.7345e-01,  1.5982e-01,  3.6880e-01,  4.5088e-01,
            8.0143e-01,  1.1352e+00,  1.0108e+00,  6.3891e-01,  2.9328e-01,
            3.3781e-01, -6.4353e-02,  3.2444e-01],
          [-2.1515e-01, -1.4159e-01,  2.6289e-01,  4.3642e-01,  5.6927e-01,
            1.0241e+00,  1.3707e+00,  1.1859e+00,  8.3160e-01,  6.2061e-01,
            3.3043e-01, -1.3782e-01,  2.5394e-01],
          [ 1.4872e-01,  1.4135e-01,  3.6257e-01,  4.2625e-01,  7.3703e-01,
            1.0176e+00,  1.2681e+00,  1.1630e+00,  9.2762e-01,  8.3737e-01,
            4.6967e-01,  1.7021e-01,  5.4184e-01]],

         [[-2.2797e-01, -1.9094e-01,  8.3303e-02,  1.4083e-01,  1.4299e-01,
            9.3346e-02,  1.7741e-01,  1.3610e-01,  7.2439e-02,  7.3246e-02,
           -7.1897e-03, -1.4833e-01, -1.1919e-01],
          [-1.4506e-01, -9.0083e-02,  1.9163e-01,  2.6871e-01,  2.8365e-01,
            3.0829e-01,  4.5949e-01,  3.4641e-01,  4.0857e-01,  4.0751e-01,
            1.2879e-01, -7.1082e-02,  9.5419e-03],
          [-2.8589e-01, -2.9178e-01,  9.4741e-02,  1.9483e-01,  1.3904e-01,
            1.9222e-01,  3.3745e-01,  1.8713e-01,  2.1721e-01,  3.2691e-01,
            1.0515e-01, -1.9566e-01, -9.3376e-02],
          [-2.9627e-01, -3.2030e-01,  4.4000e-02,  1.4762e-01,  4.8520e-02,
            1.4974e-01,  2.7807e-01,  1.9545e-01,  2.5005e-01,  3.5113e-01,
            9.2098e-02, -2.6703e-01, -1.5981e-01],
          [-9.5990e-02, -4.8966e-02,  2.6696e-01,  3.0897e-01,  2.7457e-01,
            3.8607e-01,  4.1555e-01,  3.0602e-01,  4.0114e-01,  4.6755e-01,
            1.9244e-01, -2.1934e-01, -1.0945e-01],
          [-2.5824e-02, -4.2550e-02,  2.3376e-01,  2.5148e-01,  3.2379e-01,
            4.3296e-01,  5.0798e-01,  3.9156e-01,  4.4283e-01,  4.2175e-01,
            3.2741e-01, -1.6498e-01, -1.2751e-01],
          [ 8.0929e-02,  4.6293e-02,  2.9356e-01,  3.4667e-01,  4.6501e-01,
            4.4179e-01,  4.2899e-01,  3.1443e-01,  2.1734e-01, -2.2194e-01,
           -2.5496e-01, -1.0158e-01, -8.9497e-02],
          [ 3.2106e-02, -1.2940e-01,  2.2707e-01,  3.0381e-01,  5.2860e-01,
            4.1010e-01,  3.6536e-01,  2.5259e-01,  1.2680e-01, -4.0998e-01,
           -4.0063e-01, -5.3375e-02, -1.2151e-01],
          [-1.6450e-01, -2.5373e-01,  1.4063e-01,  3.1402e-01,  4.1960e-01,
            3.4829e-01,  4.8686e-01,  2.9665e-01,  3.4289e-01, -3.4647e-02,
            3.7666e-02,  1.4771e-01, -1.4863e-01],
          [-3.1214e-01, -3.5308e-01,  3.5568e-02,  2.3633e-01,  3.2124e-01,
            3.5594e-01,  5.5860e-01,  4.1653e-01,  3.2370e-01,  2.3738e-02,
            8.0001e-02,  1.1712e-01, -2.8282e-01],
          [-3.5003e-01, -4.1275e-01, -2.5036e-02,  1.1398e-01,  3.0453e-01,
            3.9839e-01,  6.4710e-01,  5.1437e-01,  3.1740e-01,  8.4971e-02,
            1.1729e-02, -1.6763e-01, -3.6535e-01],
          [-2.5391e-01, -2.4655e-01, -3.5528e-02,  7.0947e-02,  2.8086e-01,
            5.5674e-01,  7.4449e-01,  6.9603e-01,  4.7273e-01,  2.3968e-01,
            1.2891e-01, -2.0061e-01, -1.9109e-01],
          [-2.5901e-01, -2.2669e-01, -9.9866e-02, -4.9614e-02,  2.0495e-01,
            4.0886e-01,  5.4742e-01,  5.1572e-01,  3.8116e-01,  2.2129e-01,
            2.7439e-02, -1.4154e-01, -1.5313e-01]],

         [[-1.2131e-01, -1.0259e-01, -7.1409e-02, -5.9959e-02, -3.1769e-02,
            6.9569e-02,  7.7658e-02,  2.2463e-02, -1.0644e-01, -1.7496e-01,
           -1.9319e-01, -1.6435e-01, -1.0587e-01],
          [-1.4126e-01, -9.3869e-02, -1.2735e-01, -1.3677e-01, -8.1226e-02,
            4.5041e-02,  5.2125e-02,  4.1352e-02, -8.8967e-02, -2.0019e-01,
           -2.3412e-01, -2.5899e-01, -6.4725e-02],
          [-1.4088e-01, -1.2139e-01, -1.9803e-01, -1.8525e-01, -1.0953e-01,
            2.1632e-02,  2.9137e-02,  3.3432e-02, -1.3649e-01, -2.6769e-01,
           -2.4832e-01, -1.9386e-01, -4.6075e-02],
          [-2.3950e-01, -2.0374e-01, -3.1141e-01, -2.8283e-01, -1.3463e-01,
            4.2599e-03, -2.3309e-02,  2.6235e-02, -1.6881e-01, -2.9370e-01,
           -2.8020e-01, -2.3218e-01, -7.7133e-02],
          [-2.1627e-01, -1.9895e-01, -2.5633e-01, -2.2053e-01, -1.0185e-01,
            6.2928e-05, -1.7820e-02,  4.2465e-02, -1.0988e-01, -2.1755e-01,
           -2.1278e-01, -2.4148e-01, -9.1092e-02],
          [-1.7201e-01, -1.9835e-01, -2.0226e-01, -2.3780e-01, -8.8544e-02,
           -3.2471e-02, -2.0140e-02,  1.2555e-02, -2.6570e-03, -1.3970e-01,
           -1.5954e-01, -1.8849e-01, -1.0262e-01],
          [-5.9184e-02, -1.0508e-01, -1.3358e-01, -1.5701e-01, -1.0295e-01,
           -1.1161e-01, -1.3874e-01, -1.8170e-01, -1.4696e-01, -1.6999e-01,
           -1.0196e-01, -1.3632e-01, -6.7877e-02],
          [-5.9562e-02, -1.1250e-01, -1.2028e-01, -1.1338e-01, -1.4314e-01,
           -1.3127e-01, -1.0330e-01, -1.5743e-01, -8.0115e-02, -1.5834e-01,
           -1.7712e-01, -1.4566e-01, -1.2770e-02],
          [-9.8050e-02, -1.2306e-01, -1.0220e-01, -1.3511e-01, -1.0674e-01,
           -4.3254e-02, -7.3877e-02, -1.0025e-01, -1.2079e-01, -2.0012e-01,
           -1.2519e-01, -1.5542e-01, -5.7024e-02],
          [-1.0595e-01, -2.2489e-01, -2.1529e-01, -2.1099e-01, -1.7797e-01,
           -9.6825e-02, -4.1306e-02, -6.1459e-02, -6.8930e-02, -2.0163e-01,
           -1.4628e-01, -2.9975e-01, -5.1278e-02],
          [-1.0771e-01, -2.6063e-01, -2.2693e-01, -1.7685e-01, -1.5114e-01,
           -5.9612e-02,  4.7005e-02, -3.4285e-02, -1.3678e-01, -2.0451e-01,
           -1.3632e-01, -4.3298e-01, -2.2526e-02],
          [-7.0674e-02, -1.6465e-01, -1.5024e-01, -8.2602e-02, -9.3266e-02,
           -3.5551e-02,  6.1599e-02,  4.9070e-02, -4.8641e-02, -1.1750e-01,
           -1.0741e-01, -3.1756e-01,  5.6315e-02],
          [-1.6115e-01, -3.5550e-01, -2.2267e-01, -9.6150e-02, -1.5929e-01,
           -8.4945e-02,  5.1940e-02,  3.5945e-02, -9.6547e-02, -1.3925e-01,
           -1.7796e-01, -3.0728e-01, -5.7720e-02]]]], device='cuda:0')
w_size: torch.Size([1, 3, 13, 13])
h: tensor([[[[-0.4524, -0.4114, -0.4300, -0.4461, -0.5130, -0.5396, -0.5935,
           -0.6441, -0.6561, -0.6433, -0.6311, -0.5797, -0.5315],
          [-0.1479, -0.0032,  0.0075,  0.0157,  0.0170, -0.0319, -0.2028,
           -0.1452, -0.1332, -0.0992, -0.0081,  0.0810, -0.0697],
          [-0.1264,  0.0547, -0.1193, -0.1391, -0.1426, -0.2328, -0.3907,
           -0.3285, -0.2384, -0.2318, -0.0894,  0.0341, -0.1613],
          [-0.3530, -0.3142, -0.4585, -0.4180, -0.3674, -0.3609, -0.4324,
           -0.4405, -0.4961, -0.4958, -0.4197, -0.1885, -0.3605],
          [-0.3994, -0.2443, -0.4074, -0.4327, -0.5178, -0.5252, -0.4619,
           -0.3180, -0.3142, -0.3229, -0.2427, -0.0142, -0.2352],
          [-0.5277, -0.5204, -0.6067, -0.5160, -0.5128, -0.5043, -0.6191,
           -0.5358, -0.5338, -0.4956, -0.4547, -0.1230, -0.2350],
          [-0.3905, -0.1850, -0.2571, -0.2796, -0.2318, -0.1556, -0.2022,
           -0.1656, -0.2843,  0.0991,  0.1431, -0.1367, -0.2951],
          [-0.1107,  0.1478,  0.0945, -0.0074, -0.0544, -0.0188, -0.0557,
            0.1109,  0.1398,  0.4887,  0.4922, -0.0366, -0.2795],
          [-0.3508, -0.2447, -0.2709, -0.2190, -0.2054, -0.1562, -0.2242,
           -0.0807, -0.0935,  0.1015,  0.0820, -0.1236, -0.1806],
          [-0.1708, -0.1349, -0.2231, -0.2726, -0.3634, -0.4197, -0.4474,
           -0.3710, -0.3574, -0.2051, -0.1617, -0.2236, -0.2830],
          [-0.0224,  0.1353,  0.0215, -0.0623, -0.1642, -0.4163, -0.4698,
           -0.3614, -0.2642, -0.3387, -0.2421,  0.0211, -0.1159],
          [-0.0690, -0.0408, -0.1066, -0.1594, -0.1992, -0.4060, -0.4698,
           -0.4871, -0.4510, -0.3713, -0.1874, -0.0488, -0.2103],
          [-0.5687, -0.5986, -0.7090, -0.7416, -0.7785, -0.8778, -0.9158,
           -0.9834, -0.9400, -0.9261, -0.8711, -0.6265, -0.6223]],

         [[ 0.5876,  0.3390,  0.1549,  0.0522,  0.0790,  0.1225,  0.0829,
            0.1589,  0.2689,  0.2680,  0.2850,  0.3321,  0.4306],
          [ 0.4500,  0.0504, -0.1908, -0.3176, -0.2534, -0.1739, -0.2075,
           -0.1843, -0.1433, -0.2575, -0.3092, -0.2928,  0.0840],
          [ 0.4975,  0.1036, -0.0367, -0.0185,  0.0028,  0.0688,  0.0781,
            0.0352,  0.0210, -0.1115, -0.1690, -0.1985,  0.1759],
          [ 0.5590,  0.2482,  0.1899,  0.2371,  0.1459,  0.0911,  0.0429,
            0.0397,  0.0273, -0.0607, -0.0033,  0.0444,  0.3364],
          [ 0.4854, -0.0061, -0.1466, -0.1096, -0.1184, -0.1178, -0.1341,
           -0.1226, -0.2041, -0.2156, -0.0903, -0.0370,  0.2266],
          [ 0.4611,  0.0243, -0.1424, -0.1211, -0.2584, -0.3156, -0.2286,
           -0.2643, -0.3462, -0.2816, -0.2011, -0.0169,  0.2070],
          [ 0.1337, -0.3618, -0.4797, -0.4931, -0.5995, -0.6045, -0.5247,
           -0.3873, -0.4205, -0.3052, -0.3164, -0.1334,  0.2231],
          [ 0.0484, -0.3334, -0.3984, -0.4361, -0.4710, -0.3435, -0.2961,
           -0.2364, -0.3478, -0.2742, -0.2533, -0.3470,  0.2866],
          [ 0.3898,  0.0921, -0.0994, -0.1181, -0.1858, -0.1558, -0.1716,
           -0.1906, -0.3629, -0.4668, -0.4758, -0.2782,  0.2609],
          [ 0.3845,  0.1061,  0.0590,  0.0434, -0.0953, -0.2039, -0.2348,
           -0.2461, -0.2253, -0.4282, -0.3873, -0.0765,  0.3543],
          [ 0.3660, -0.0152, -0.0628, -0.0757, -0.1870, -0.3088, -0.4163,
           -0.3576, -0.2308, -0.0167, -0.0704,  0.0272,  0.4842],
          [ 0.3193, -0.1784, -0.1855, -0.2040, -0.2765, -0.4457, -0.5549,
           -0.4727, -0.3736, -0.2775, -0.2066,  0.0768,  0.2762],
          [ 0.5941,  0.3677,  0.2851,  0.1677,  0.0744, -0.1458, -0.2946,
           -0.2143, -0.0605,  0.0167,  0.2651,  0.3550,  0.5119]],

         [[ 0.1026,  0.0060, -0.0501, -0.0946, -0.1527, -0.1595, -0.1810,
           -0.1305, -0.0558,  0.0112,  0.0397,  0.0345,  0.0112],
          [-0.0078, -0.2263, -0.2355, -0.3280, -0.3900, -0.4077, -0.3938,
           -0.3760, -0.3858, -0.3976, -0.3236, -0.3252, -0.2414],
          [ 0.0538, -0.0832, -0.2343, -0.1985, -0.2435, -0.1671, -0.1856,
           -0.2006, -0.3223, -0.3557, -0.3685, -0.3028, -0.2168],
          [ 0.0061, -0.0926, -0.1980, -0.1246, -0.1742, -0.1379, -0.1695,
           -0.1657, -0.2915, -0.3037, -0.3552, -0.3128, -0.2008],
          [-0.0147, -0.1986, -0.4114, -0.4232, -0.5637, -0.5391, -0.5428,
           -0.4104, -0.4522, -0.3835, -0.4009, -0.2774, -0.2237],
          [-0.2746, -0.4347, -0.5940, -0.6081, -0.7962, -0.8212, -0.7997,
           -0.7023, -0.7755, -0.6892, -0.6581, -0.3812, -0.2661],
          [-0.5032, -0.7631, -0.8310, -0.7951, -1.0103, -0.9692, -0.9513,
           -0.7325, -0.7326, -0.7090, -0.7411, -0.3853, -0.3069],
          [-0.3531, -0.5777, -0.6452, -0.6468, -0.7832, -0.6736, -0.5849,
           -0.4934, -0.4803, -0.4680, -0.4860, -0.4884, -0.2275],
          [-0.1427, -0.2527, -0.4531, -0.4201, -0.4511, -0.3641, -0.4094,
           -0.4314, -0.3712, -0.3881, -0.4644, -0.3724, -0.2768],
          [-0.0791, -0.1648, -0.2914, -0.2327, -0.3292, -0.4365, -0.5561,
           -0.6249, -0.4815, -0.3097, -0.3361, -0.3235, -0.1994],
          [-0.0827, -0.0819, -0.2150, -0.2489, -0.3430, -0.5598, -0.6454,
           -0.7139, -0.4024, -0.2823, -0.3237, -0.1835, -0.0348],
          [-0.2036, -0.1761, -0.2940, -0.3761, -0.4328, -0.7945, -0.9828,
           -0.9894, -0.5818, -0.4294, -0.4053, -0.3488, -0.2517],
          [ 0.0438,  0.0744,  0.0855, -0.0282, -0.1333, -0.4444, -0.5935,
           -0.6146, -0.3834, -0.2646, -0.0021, -0.1098,  0.1156]]]],
       device='cuda:0')
h_size: torch.Size([1, 3, 13, 13])
conf: tensor([[[[6.1134e-09, 1.1090e-07, 3.5762e-07, 1.5550e-06, 2.3251e-06,
           2.5755e-06, 7.9206e-06, 2.3898e-06, 2.0910e-06, 1.0648e-06,
           2.0287e-06, 8.7532e-07, 2.0025e-08],
          [5.0063e-09, 9.6938e-07, 6.7985e-06, 2.2208e-05, 2.2194e-05,
           7.1137e-06, 7.7830e-06, 3.5442e-06, 4.5183e-06, 1.9156e-06,
           8.7330e-06, 7.6498e-06, 2.5309e-08],
          [8.6441e-09, 6.1924e-07, 1.7956e-06, 3.9309e-06, 2.0543e-06,
           5.9470e-07, 5.9120e-07, 6.5143e-07, 4.7200e-07, 8.3280e-07,
           1.8039e-06, 7.3200e-06, 2.3993e-08],
          [2.2756e-08, 9.9879e-07, 4.2530e-06, 5.6757e-06, 5.8074e-06,
           4.9023e-06, 5.8817e-06, 7.2240e-06, 7.8790e-06, 4.6959e-06,
           1.7562e-06, 3.1882e-06, 5.1268e-09],
          [3.6107e-08, 8.3911e-06, 4.0430e-05, 4.0982e-05, 4.2526e-05,
           1.3166e-05, 9.7424e-06, 1.2504e-05, 6.0583e-05, 4.6570e-05,
           2.1213e-05, 6.2273e-05, 8.4133e-08],
          [5.4236e-07, 2.5578e-04, 5.7262e-04, 4.9084e-04, 4.2239e-04,
           2.4356e-04, 3.9725e-04, 1.8155e-04, 2.2502e-04, 1.2726e-04,
           7.1919e-05, 7.8570e-05, 5.5464e-07],
          [4.0474e-06, 3.3137e-03, 8.6231e-03, 1.8788e-02, 7.2714e-03,
           4.0764e-03, 2.2451e-03, 9.9272e-01, 8.5318e-01, 1.1739e-02,
           2.6537e-02, 2.1459e-05, 1.0838e-07],
          [1.6247e-06, 6.5208e-02, 4.5359e-03, 3.2801e-03, 7.4849e-04,
           4.0648e-04, 5.0000e-05, 7.9433e-04, 4.6677e-04, 7.4120e-01,
           9.4194e-01, 2.2059e-05, 3.2419e-08],
          [3.5284e-07, 3.6371e-05, 3.4018e-05, 2.0747e-05, 4.9506e-06,
           6.8682e-06, 5.6083e-05, 3.3349e-05, 7.0896e-04, 9.9891e-01,
           9.7096e-01, 4.1620e-05, 8.2664e-08],
          [7.1053e-08, 1.5303e-06, 1.1370e-06, 1.3912e-06, 1.3655e-06,
           2.6558e-06, 1.6330e-05, 8.7046e-06, 1.9617e-05, 2.6921e-01,
           2.6415e-02, 1.6042e-06, 3.8075e-08],
          [6.0848e-08, 3.1515e-06, 5.5320e-07, 5.8980e-07, 9.0074e-07,
           5.5310e-06, 1.2238e-05, 7.8854e-06, 2.1121e-06, 2.9268e-06,
           1.4862e-06, 2.2634e-06, 2.6589e-08],
          [1.1346e-08, 1.6221e-06, 8.3098e-07, 1.4281e-06, 5.2733e-07,
           2.4437e-06, 1.3596e-05, 4.3318e-06, 1.8240e-06, 1.9574e-06,
           4.6612e-07, 9.2590e-07, 2.3997e-08],
          [1.4784e-08, 1.3843e-06, 2.0975e-05, 5.8043e-05, 2.9883e-05,
           7.4100e-05, 3.4118e-04, 9.8822e-05, 3.7515e-05, 3.6635e-05,
           3.8570e-06, 1.5251e-06, 1.4243e-07]],

         [[2.4423e-09, 3.0012e-09, 1.6232e-08, 3.8787e-08, 3.8851e-08,
           4.2156e-08, 4.4803e-08, 1.8734e-08, 3.1085e-08, 1.1753e-08,
           4.6886e-08, 8.9571e-09, 1.2018e-08],
          [8.4686e-09, 5.8499e-08, 1.1825e-06, 5.5898e-06, 4.5200e-06,
           3.4268e-06, 1.6894e-06, 7.1351e-07, 8.0513e-07, 8.6987e-07,
           2.7513e-06, 1.8302e-07, 4.7359e-08],
          [1.5079e-08, 3.4143e-07, 5.2079e-06, 8.5762e-06, 3.2098e-06,
           1.6077e-06, 1.7570e-06, 1.4615e-06, 2.7384e-06, 2.8835e-06,
           4.3900e-06, 9.6292e-07, 5.1342e-08],
          [1.7016e-07, 2.7349e-06, 1.3575e-05, 2.4353e-05, 1.0595e-05,
           3.8344e-06, 3.4110e-06, 3.2745e-06, 2.5106e-05, 1.1358e-05,
           7.3590e-06, 8.9657e-06, 1.3468e-07],
          [3.5115e-07, 5.4431e-06, 2.0063e-05, 3.7445e-05, 2.4054e-05,
           2.2622e-05, 2.0911e-05, 7.5041e-06, 2.2046e-05, 1.7690e-05,
           6.3918e-06, 1.1454e-05, 2.5116e-07],
          [4.6250e-07, 2.6911e-06, 2.1825e-05, 6.3091e-05, 2.0381e-05,
           1.2533e-05, 1.7343e-05, 1.1613e-05, 1.0763e-05, 4.0280e-06,
           5.7132e-07, 2.2437e-06, 9.0895e-08],
          [1.7375e-06, 8.5225e-05, 3.6796e-04, 1.3552e-03, 4.0486e-04,
           1.6468e-04, 3.1497e-04, 5.7458e-04, 7.7458e-05, 1.4144e-03,
           2.0561e-03, 1.5559e-06, 3.3984e-08],
          [3.7507e-06, 1.0382e-03, 8.3060e-03, 9.9151e-03, 2.5039e-03,
           1.6247e-03, 1.6011e-03, 3.1173e-04, 2.8350e-04, 6.5146e-01,
           7.0198e-01, 4.9025e-06, 5.9168e-08],
          [1.4325e-06, 6.8977e-05, 1.3156e-04, 2.4317e-04, 5.2129e-05,
           1.7752e-05, 3.4943e-05, 8.8215e-05, 1.0970e-04, 5.8796e-01,
           1.0817e-01, 2.4389e-06, 1.6049e-07],
          [1.1684e-07, 5.2997e-06, 9.9988e-06, 6.3284e-06, 3.0274e-06,
           1.5887e-06, 4.3759e-06, 1.4812e-05, 1.4041e-05, 2.3060e-03,
           2.4453e-04, 1.0311e-06, 6.3203e-08],
          [1.4275e-07, 1.5879e-06, 4.6379e-06, 2.3047e-06, 2.5342e-06,
           1.2044e-06, 7.4300e-07, 2.3473e-06, 1.8586e-06, 2.9783e-07,
           3.2765e-07, 6.0905e-07, 3.9340e-08],
          [2.3724e-09, 2.2802e-08, 3.1316e-07, 3.0553e-07, 6.3231e-07,
           8.3231e-07, 8.1255e-07, 9.5339e-07, 4.7506e-07, 6.1450e-07,
           1.7005e-07, 5.6671e-08, 6.1404e-09],
          [1.0954e-08, 6.2948e-08, 2.7116e-07, 8.7881e-08, 1.4926e-07,
           1.1168e-07, 9.2481e-08, 5.1922e-08, 1.3447e-07, 2.8271e-07,
           4.4553e-08, 4.0276e-08, 9.0077e-09]],

         [[1.5297e-08, 8.6240e-09, 4.6981e-08, 1.0974e-07, 1.3831e-07,
           4.8733e-07, 1.1030e-06, 5.7330e-07, 2.6232e-07, 9.2240e-08,
           8.1934e-08, 1.5343e-08, 1.9455e-08],
          [1.6616e-08, 2.0568e-08, 7.1484e-08, 5.3308e-07, 5.4613e-07,
           5.9778e-06, 1.2207e-05, 4.1014e-06, 7.0152e-07, 1.1138e-07,
           4.2500e-08, 4.7224e-09, 3.8677e-08],
          [2.0652e-08, 3.9095e-08, 2.5666e-07, 3.0490e-06, 2.1427e-06,
           1.7425e-05, 5.5229e-05, 1.6235e-05, 2.2221e-06, 3.0114e-07,
           6.2283e-08, 8.3433e-09, 3.4391e-08],
          [4.5190e-08, 9.3086e-08, 7.0757e-07, 9.5174e-06, 1.0591e-05,
           3.8391e-05, 6.5713e-05, 1.3507e-04, 1.7843e-05, 2.8552e-06,
           2.9203e-07, 5.3945e-08, 6.0183e-08],
          [3.2393e-07, 3.2212e-07, 1.8235e-06, 8.7348e-06, 6.6608e-06,
           5.4734e-05, 5.6926e-05, 1.3855e-04, 3.3740e-05, 7.1359e-06,
           7.5954e-07, 1.8549e-07, 9.7472e-08],
          [2.0023e-07, 1.4394e-07, 1.1861e-06, 1.4428e-06, 2.8693e-06,
           7.4499e-06, 1.5008e-05, 3.8020e-05, 1.9596e-05, 2.4150e-06,
           1.9793e-07, 5.6082e-08, 7.8031e-08],
          [2.5194e-06, 2.8687e-06, 2.2037e-05, 1.7165e-05, 2.6065e-05,
           5.9447e-05, 9.8825e-05, 5.7865e-05, 5.3573e-05, 7.3358e-06,
           1.6885e-06, 2.0272e-07, 9.8134e-08],
          [5.6857e-06, 5.4171e-06, 2.3540e-04, 7.9368e-05, 3.1935e-04,
           1.0026e-03, 1.1292e-03, 1.6898e-04, 3.2201e-05, 6.7898e-06,
           1.3081e-06, 9.7047e-08, 4.9416e-08],
          [1.7996e-06, 3.4925e-06, 2.1743e-05, 6.8914e-05, 5.3486e-05,
           1.1445e-04, 5.7720e-04, 2.2450e-04, 2.7441e-05, 1.0608e-05,
           8.1745e-07, 1.1640e-07, 9.7658e-08],
          [1.4812e-07, 1.2732e-07, 4.2827e-07, 1.1050e-06, 1.3707e-06,
           5.4172e-06, 4.8421e-05, 1.0947e-05, 1.5695e-06, 2.6830e-07,
           1.7426e-07, 9.6574e-09, 1.2251e-07],
          [3.5264e-08, 1.1732e-08, 5.8496e-08, 2.2245e-07, 5.0584e-07,
           2.2263e-06, 3.8451e-05, 1.2421e-06, 8.7532e-08, 1.6984e-08,
           3.8452e-09, 3.6725e-09, 7.1120e-08],
          [2.5846e-09, 4.7998e-09, 8.3922e-09, 9.2906e-08, 6.7032e-08,
           1.3849e-06, 2.9139e-05, 1.2713e-06, 1.1133e-07, 2.4127e-07,
           7.7394e-09, 2.2493e-08, 5.8847e-08],
          [9.5133e-09, 2.7056e-08, 5.0768e-08, 1.7561e-07, 1.9656e-07,
           6.5547e-07, 2.9649e-06, 4.5977e-07, 1.2133e-07, 2.5720e-07,
           1.5387e-08, 2.7295e-08, 1.3101e-08]]]], device='cuda:0')
conf_size: torch.Size([1, 3, 13, 13])
pred_cls: tensor([[[[[5.1257e-02, 8.5989e-03, 8.8658e-02,  ..., 3.0908e-03,
            4.1193e-03, 3.7631e-03],
           [8.0921e-02, 1.7520e-03, 2.9891e-02,  ..., 2.8145e-03,
            3.1190e-03, 1.5285e-03],
           [5.8159e-02, 1.7646e-03, 1.4585e-02,  ..., 3.4963e-03,
            3.1008e-03, 1.2002e-03],
           ...,
           [1.3854e-01, 2.3599e-03, 1.7594e-02,  ..., 1.2622e-03,
            1.1468e-03, 6.1634e-04],
           [7.3523e-02, 1.5419e-03, 3.9946e-02,  ..., 1.1686e-03,
            1.0999e-03, 9.9885e-04],
           [1.1680e-01, 7.8716e-03, 5.7153e-02,  ..., 2.1596e-02,
            2.9597e-03, 7.1699e-03]],

          [[1.1052e-01, 2.1518e-02, 5.3541e-02,  ..., 8.5978e-03,
            5.1960e-03, 5.6168e-03],
           [1.4229e-01, 5.3774e-03, 2.1137e-02,  ..., 4.5161e-03,
            3.8465e-03, 1.2773e-03],
           [1.0728e-01, 4.8425e-03, 1.3817e-02,  ..., 5.8785e-03,
            3.1808e-03, 1.0883e-03],
           ...,
           [9.4893e-02, 1.9522e-03, 1.7295e-02,  ..., 1.1383e-03,
            9.5408e-04, 1.5205e-04],
           [2.7421e-02, 1.3749e-03, 4.0551e-02,  ..., 4.4582e-04,
            7.4241e-04, 1.4837e-04],
           [7.7285e-02, 6.6028e-03, 7.9951e-02,  ..., 1.5249e-02,
            3.1594e-03, 3.6324e-03]],

          [[1.9860e-01, 4.4759e-02, 4.5683e-02,  ..., 3.0874e-02,
            9.0302e-03, 8.2865e-03],
           [2.6205e-01, 9.5857e-03, 2.3362e-02,  ..., 2.2037e-02,
            7.0484e-03, 2.5038e-03],
           [2.5798e-01, 7.4593e-03, 1.7963e-02,  ..., 2.9879e-02,
            5.4904e-03, 2.1990e-03],
           ...,
           [9.7945e-02, 6.3434e-03, 5.1573e-02,  ..., 1.7007e-03,
            1.1224e-03, 1.3666e-04],
           [4.0388e-03, 1.7144e-03, 3.4414e-02,  ..., 2.4461e-04,
            7.3881e-04, 7.8289e-05],
           [9.2596e-03, 1.2087e-02, 8.3841e-02,  ..., 8.5405e-03,
            3.4906e-03, 2.5974e-03]],

          ...,

          [[6.4891e-01, 4.8504e-03, 7.4176e-02,  ..., 9.5990e-03,
            8.9926e-04, 9.5609e-04],
           [8.6683e-01, 2.3724e-03, 3.9836e-02,  ..., 9.3075e-04,
            2.3877e-04, 1.7796e-04],
           [6.9511e-01, 2.2476e-03, 3.2764e-02,  ..., 8.1486e-04,
            3.2258e-04, 1.7468e-04],
           ...,
           [4.9478e-01, 7.5706e-02, 7.1038e-03,  ..., 8.4015e-05,
            1.5234e-05, 1.3021e-05],
           [1.6766e-01, 2.3389e-02, 3.1656e-02,  ..., 5.8008e-04,
            1.1194e-04, 5.9631e-05],
           [2.7358e-02, 1.3100e-02, 6.9361e-02,  ..., 1.6161e-02,
            1.7178e-03, 1.1744e-03]],

          [[2.7462e-01, 6.4342e-03, 1.3206e-01,  ..., 1.3197e-02,
            5.2032e-04, 6.5855e-04],
           [8.7501e-01, 1.8073e-03, 2.8967e-01,  ..., 8.1676e-04,
            1.0509e-04, 1.2058e-04],
           [7.5966e-01, 4.0440e-04, 4.5068e-01,  ..., 1.1899e-04,
            5.5250e-05, 6.6755e-05],
           ...,
           [5.4178e-01, 8.3625e-03, 8.1378e-02,  ..., 1.0916e-05,
            1.7533e-05, 3.1175e-05],
           [1.8713e-01, 6.7896e-03, 4.2021e-02,  ..., 1.1325e-04,
            1.6111e-04, 7.2782e-05],
           [3.3580e-02, 1.7074e-02, 8.0942e-02,  ..., 7.0166e-03,
            1.5263e-03, 9.5298e-04]],

          [[2.4428e-02, 2.2869e-02, 2.4798e-01,  ..., 1.1974e-02,
            6.8121e-04, 1.4986e-03],
           [5.7961e-02, 3.6652e-03, 6.1994e-01,  ..., 9.7090e-04,
            1.3952e-04, 2.6607e-04],
           [8.7040e-03, 2.3989e-04, 8.4805e-01,  ..., 4.2663e-05,
            4.5022e-05, 8.1536e-05],
           ...,
           [1.0859e-01, 6.8529e-03, 2.3364e-01,  ..., 1.3765e-04,
            7.7721e-05, 2.8521e-04],
           [1.4625e-01, 1.1640e-02, 1.7771e-01,  ..., 8.6452e-04,
            3.8819e-04, 4.4816e-04],
           [1.0530e-01, 3.0273e-02, 1.9554e-01,  ..., 1.4848e-02,
            1.8715e-03, 3.0139e-03]]],


         [[[3.6101e-01, 3.1269e-03, 3.1335e-02,  ..., 3.1456e-03,
            2.7928e-03, 8.6558e-03],
           [2.3442e-01, 9.6765e-04, 2.5748e-02,  ..., 3.0071e-03,
            2.0418e-03, 5.9364e-03],
           [1.3907e-01, 1.0044e-03, 1.9443e-02,  ..., 4.6225e-03,
            2.2823e-03, 3.6243e-03],
           ...,
           [4.2205e-01, 1.5206e-03, 3.9859e-02,  ..., 4.8338e-03,
            1.1964e-03, 2.0056e-03],
           [2.5613e-01, 1.1979e-03, 6.8381e-02,  ..., 4.5780e-03,
            1.2257e-03, 3.5404e-03],
           [2.1284e-01, 3.9245e-03, 3.9665e-02,  ..., 2.0210e-02,
            3.4183e-03, 1.5607e-02]],

          [[2.5066e-01, 6.1761e-03, 2.6431e-02,  ..., 4.3043e-03,
            2.4117e-03, 1.0096e-02],
           [1.0650e-01, 2.2961e-03, 3.3118e-02,  ..., 3.4140e-03,
            1.9784e-03, 4.4554e-03],
           [6.1217e-02, 1.2020e-03, 2.5011e-02,  ..., 7.1278e-03,
            2.0972e-03, 2.2876e-03],
           ...,
           [1.5044e-01, 8.5124e-04, 6.7882e-02,  ..., 2.0951e-03,
            7.6074e-04, 3.8150e-04],
           [6.3506e-02, 7.6212e-04, 1.3975e-01,  ..., 1.2380e-03,
            7.1420e-04, 4.6254e-04],
           [7.0608e-02, 2.9725e-03, 1.0057e-01,  ..., 1.2397e-02,
            3.3880e-03, 7.9159e-03]],

          [[7.1592e-01, 1.3762e-02, 4.0980e-02,  ..., 1.1951e-02,
            3.6157e-03, 1.4972e-02],
           [6.3983e-01, 2.9847e-03, 4.1486e-02,  ..., 1.2936e-02,
            2.7233e-03, 7.1645e-03],
           [7.5249e-01, 1.6973e-03, 3.9900e-02,  ..., 2.3373e-02,
            2.3939e-03, 2.5148e-03],
           ...,
           [4.9595e-01, 1.0068e-03, 1.4413e-01,  ..., 1.6157e-03,
            4.5632e-04, 2.2489e-04],
           [7.2079e-02, 6.8004e-04, 1.6838e-01,  ..., 4.3624e-04,
            4.3915e-04, 1.9966e-04],
           [1.0909e-01, 5.7774e-03, 1.9719e-01,  ..., 5.0845e-03,
            2.5611e-03, 6.4266e-03]],

          ...,

          [[8.6643e-01, 1.9205e-03, 1.4582e-02,  ..., 2.6981e-03,
            8.9505e-04, 1.2705e-03],
           [9.6556e-01, 4.3154e-04, 1.4855e-02,  ..., 4.3016e-04,
            2.3995e-04, 2.7225e-04],
           [9.1904e-01, 4.5849e-04, 1.8061e-02,  ..., 3.8071e-04,
            2.3360e-04, 2.0007e-04],
           ...,
           [4.3811e-01, 1.1224e-01, 6.0956e-03,  ..., 1.3861e-05,
            1.9838e-05, 1.5281e-05],
           [5.9902e-01, 3.3392e-02, 3.5794e-02,  ..., 1.3503e-04,
            9.2911e-05, 5.2818e-05],
           [3.2219e-01, 1.7904e-02, 1.7911e-02,  ..., 4.5078e-03,
            1.1153e-03, 1.7749e-03]],

          [[6.3942e-01, 2.7788e-03, 4.9973e-02,  ..., 1.9219e-03,
            8.5544e-04, 8.4268e-04],
           [9.0769e-01, 5.2951e-04, 1.6236e-01,  ..., 3.2314e-04,
            1.7670e-04, 1.6435e-04],
           [8.9699e-01, 1.6193e-04, 1.9277e-01,  ..., 8.1910e-05,
            7.9075e-05, 1.0910e-04],
           ...,
           [3.1180e-01, 3.9705e-03, 9.4177e-02,  ..., 9.6974e-06,
            3.1415e-05, 3.7493e-05],
           [8.2018e-02, 5.4690e-03, 1.2915e-01,  ..., 8.3814e-05,
            2.4065e-04, 1.1073e-04],
           [8.7505e-02, 1.8370e-02, 7.0125e-02,  ..., 3.0506e-03,
            1.7089e-03, 1.8807e-03]],

          [[4.2665e-01, 5.3146e-03, 5.4472e-02,  ..., 3.7958e-03,
            1.1578e-03, 1.5617e-03],
           [5.6745e-01, 1.1420e-03, 2.6905e-01,  ..., 8.1201e-04,
            2.5813e-04, 2.9930e-04],
           [7.7034e-01, 1.4219e-04, 2.9200e-01,  ..., 6.0479e-05,
            7.5581e-05, 1.2207e-04],
           ...,
           [2.1527e-01, 6.5780e-03, 2.7129e-01,  ..., 2.0020e-04,
            1.9698e-04, 2.5172e-04],
           [1.5708e-01, 1.6101e-02, 3.0208e-01,  ..., 1.5239e-03,
            8.8856e-04, 5.2742e-04],
           [2.4528e-01, 2.7966e-02, 1.2028e-01,  ..., 1.9322e-02,
            4.5083e-03, 5.7912e-03]]],


         [[[3.0474e-01, 6.1449e-03, 4.7162e-02,  ..., 1.0311e-02,
            5.9996e-03, 1.2001e-02],
           [2.3248e-01, 2.4624e-03, 5.5564e-02,  ..., 9.6597e-03,
            4.2081e-03, 7.7844e-03],
           [2.7394e-01, 2.7437e-03, 6.1495e-02,  ..., 1.3746e-02,
            3.7804e-03, 4.0072e-03],
           ...,
           [7.2691e-01, 1.4415e-03, 4.4322e-02,  ..., 6.0543e-03,
            1.4675e-03, 1.5561e-03],
           [3.0910e-01, 1.3213e-03, 6.3851e-02,  ..., 5.6977e-03,
            1.6224e-03, 2.0814e-03],
           [2.6453e-01, 5.3408e-03, 7.5461e-02,  ..., 2.5241e-02,
            4.8584e-03, 1.1425e-02]],

          [[9.5678e-02, 9.2070e-03, 6.8883e-02,  ..., 1.2406e-02,
            5.8687e-03, 1.0928e-02],
           [4.1639e-02, 3.8421e-03, 9.8446e-02,  ..., 9.4157e-03,
            3.6936e-03, 4.2586e-03],
           [8.4582e-02, 2.2736e-03, 1.2807e-01,  ..., 1.4347e-02,
            2.7706e-03, 1.9743e-03],
           ...,
           [6.4087e-01, 1.2024e-03, 1.4179e-01,  ..., 1.7463e-03,
            1.0228e-03, 4.0968e-04],
           [3.0345e-01, 1.0532e-03, 2.0265e-01,  ..., 1.5117e-03,
            1.1805e-03, 4.8921e-04],
           [2.6276e-01, 3.6919e-03, 1.3147e-01,  ..., 1.0662e-02,
            4.1373e-03, 4.8323e-03]],

          [[5.8782e-01, 2.0176e-02, 1.4385e-01,  ..., 1.6823e-02,
            3.9199e-03, 8.9130e-03],
           [7.9859e-01, 5.7153e-03, 1.4739e-01,  ..., 1.2402e-02,
            1.8168e-03, 2.8687e-03],
           [9.0181e-01, 2.9464e-03, 1.6524e-01,  ..., 1.3980e-02,
            1.2959e-03, 9.6359e-04],
           ...,
           [7.5084e-01, 1.3697e-03, 2.5216e-01,  ..., 6.3658e-04,
            5.2224e-04, 1.5603e-04],
           [3.3698e-01, 1.5711e-03, 3.2734e-01,  ..., 4.3483e-04,
            8.8831e-04, 2.7918e-04],
           [3.9825e-01, 7.4404e-03, 2.3956e-01,  ..., 5.7947e-03,
            3.9050e-03, 4.2218e-03]],

          ...,

          [[6.5922e-01, 1.0085e-02, 3.0035e-02,  ..., 8.8194e-03,
            3.4479e-03, 5.7670e-03],
           [9.3036e-01, 1.6327e-03, 4.6140e-02,  ..., 1.1284e-03,
            8.6417e-04, 8.4225e-04],
           [9.0997e-01, 1.1082e-03, 4.1216e-02,  ..., 4.8235e-04,
            4.8479e-04, 4.3268e-04],
           ...,
           [6.8943e-01, 5.6382e-02, 3.3045e-02,  ..., 3.2478e-06,
            3.2292e-05, 1.3447e-05],
           [5.0198e-01, 8.3047e-02, 1.4967e-01,  ..., 9.1089e-05,
            2.1894e-04, 9.1370e-05],
           [3.2294e-01, 6.2687e-02, 8.1757e-02,  ..., 2.9319e-03,
            1.6383e-03, 1.9438e-03]],

          [[5.0818e-01, 1.8016e-02, 1.8694e-01,  ..., 3.6087e-03,
            4.0438e-03, 4.3408e-03],
           [8.6743e-01, 2.0701e-03, 3.7775e-01,  ..., 5.1968e-04,
            5.1415e-04, 3.6227e-04],
           [8.8642e-01, 8.7165e-04, 3.5411e-01,  ..., 1.1742e-04,
            3.1165e-04, 1.8623e-04],
           ...,
           [3.4715e-01, 3.7916e-03, 1.2013e-01,  ..., 1.1700e-05,
            1.1003e-04, 3.8938e-05],
           [3.1263e-01, 6.8539e-03, 2.5432e-01,  ..., 9.8524e-05,
            6.2812e-04, 1.7408e-04],
           [2.0165e-01, 3.7679e-02, 1.2158e-01,  ..., 4.0355e-03,
            2.6446e-03, 2.3976e-03]],

          [[3.1054e-01, 1.7568e-02, 9.2022e-02,  ..., 4.4376e-03,
            5.7494e-03, 7.1585e-03],
           [6.9429e-01, 3.0518e-03, 1.9458e-01,  ..., 8.5680e-04,
            9.4597e-04, 7.1829e-04],
           [8.3350e-01, 9.9729e-04, 1.6863e-01,  ..., 9.1087e-05,
            4.7477e-04, 3.8992e-04],
           ...,
           [2.6458e-01, 1.1567e-02, 3.8199e-01,  ..., 2.2314e-04,
            6.8903e-04, 3.0381e-04],
           [3.3288e-01, 2.0625e-02, 4.7737e-01,  ..., 1.5585e-03,
            2.2613e-03, 8.6090e-04],
           [2.8852e-01, 6.0464e-02, 2.4781e-01,  ..., 2.7119e-02,
            8.3832e-03, 8.3005e-03]]]]], device='cuda:0')
pred_cls_size: torch.Size([1, 3, 13, 13, 80])
grid_x: tensor([[[[ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.]],

         [[ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.]],

         [[ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.]]]],
       device='cuda:0')
grid_x_size: torch.Size([1, 3, 13, 13])
grid_y: tensor([[[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
          [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],
          [ 2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.],
          [ 3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.],
          [ 4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.],
          [ 5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.],
          [ 6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.],
          [ 7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.],
          [ 8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.],
          [ 9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.],
          [10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.],
          [11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.],
          [12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12.]],

         [[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
          [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],
          [ 2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.],
          [ 3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.],
          [ 4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.],
          [ 5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.],
          [ 6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.],
          [ 7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.],
          [ 8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.],
          [ 9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.],
          [10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.],
          [11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.],
          [12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12.]],

         [[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
          [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],
          [ 2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.],
          [ 3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.],
          [ 4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.],
          [ 5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.],
          [ 6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.],
          [ 7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.],
          [ 8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.],
          [ 9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.],
          [10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.],
          [11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.],
          [12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12.]]]],
       device='cuda:0')
grid_y_size: torch.Size([1, 3, 13, 13])
anchor_w: tensor([[[[ 3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,
            3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250],
          [ 3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,
            3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250],
          [ 3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,
            3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250],
          [ 3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,
            3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250],
          [ 3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,
            3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250],
          [ 3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,
            3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250],
          [ 3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,
            3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250],
          [ 3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,
            3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250],
          [ 3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,
            3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250],
          [ 3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,
            3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250],
          [ 3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,
            3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250],
          [ 3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,
            3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250],
          [ 3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,
            3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250]],

         [[ 4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,
            4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750],
          [ 4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,
            4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750],
          [ 4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,
            4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750],
          [ 4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,
            4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750],
          [ 4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,
            4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750],
          [ 4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,
            4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750],
          [ 4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,
            4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750],
          [ 4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,
            4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750],
          [ 4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,
            4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750],
          [ 4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,
            4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750],
          [ 4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,
            4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750],
          [ 4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,
            4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750],
          [ 4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,
            4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750]],

         [[11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562,
           11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562],
          [11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562,
           11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562],
          [11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562,
           11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562],
          [11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562,
           11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562],
          [11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562,
           11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562],
          [11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562,
           11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562],
          [11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562,
           11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562],
          [11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562,
           11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562],
          [11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562,
           11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562],
          [11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562,
           11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562],
          [11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562,
           11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562],
          [11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562,
           11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562],
          [11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562,
           11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562]]]],
       device='cuda:0')
anchor_h: tensor([[[[ 2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,
            2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125],
          [ 2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,
            2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125],
          [ 2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,
            2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125],
          [ 2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,
            2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125],
          [ 2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,
            2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125],
          [ 2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,
            2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125],
          [ 2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,
            2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125],
          [ 2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,
            2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125],
          [ 2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,
            2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125],
          [ 2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,
            2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125],
          [ 2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,
            2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125],
          [ 2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,
            2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125],
          [ 2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,
            2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125]],

         [[ 6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,
            6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875],
          [ 6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,
            6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875],
          [ 6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,
            6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875],
          [ 6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,
            6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875],
          [ 6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,
            6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875],
          [ 6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,
            6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875],
          [ 6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,
            6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875],
          [ 6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,
            6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875],
          [ 6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,
            6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875],
          [ 6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,
            6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875],
          [ 6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,
            6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875],
          [ 6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,
            6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875],
          [ 6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,
            6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875]],

         [[10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875,
           10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875],
          [10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875,
           10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875],
          [10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875,
           10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875],
          [10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875,
           10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875],
          [10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875,
           10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875],
          [10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875,
           10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875],
          [10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875,
           10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875],
          [10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875,
           10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875],
          [10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875,
           10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875],
          [10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875,
           10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875],
          [10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875,
           10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875],
          [10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875,
           10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875],
          [10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875,
           10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875]]]],
       device='cuda:0')
pred_boxes: tensor([[[[[ 0.0000e+00,  2.1016e+00,  2.8125e+00,  2.8125e+00],
           [ 2.8125e+00,  2.8125e+00,  2.8125e+00,  2.8125e+00],
           [ 2.8125e+00,  2.8125e+00,  2.8125e+00,  2.8125e+00],
           ...,
           [ 2.8125e+00,  2.8125e+00,  2.8125e+00,  2.8125e+00],
           [ 2.8125e+00,  2.8125e+00,  2.8125e+00,  2.8125e+00],
           [ 2.8125e+00,  2.8125e+00,  2.8125e+00,  2.8125e+00]],

          [[ 2.8125e+00,  2.8125e+00,  2.8125e+00,  2.8125e+00],
           [ 2.8125e+00,  2.8125e+00,  2.8125e+00,  2.8125e+00],
           [ 2.8125e+00,  2.8125e+00,  2.8125e+00,  2.8125e+00],
           ...,
           [ 2.8125e+00,  2.8125e+00,  2.8125e+00,  2.8125e+00],
           [ 2.8125e+00,  2.8125e+00,  2.8125e+00,  2.8125e+00],
           [ 2.8125e+00,  2.8125e+00,  2.8125e+00,  2.8125e+00]],

          [[ 2.8125e+00,  2.8125e+00,  2.8125e+00,  2.8125e+00],
           [ 2.8125e+00,  2.8125e+00,  2.8125e+00,  2.8125e+00],
           [ 2.8125e+00,  2.8125e+00,  2.8125e+00,  2.8125e+00],
           ...,
           [ 2.8125e+00,  2.8125e+00,  2.8125e+00,  2.8125e+00],
           [ 2.8125e+00,  2.8125e+00,  2.8125e+00,  2.8125e+00],
           [ 2.8125e+00,  2.8125e+00,  2.8125e+00,  2.8125e+00]],

          ...,

          [[ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           ...,
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00]],

          [[ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           ...,
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00]],

          [[ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           ...,
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00]]],


         [[[ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           ...,
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00]],

          [[ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           ...,
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00]],

          [[ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           ...,
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00]],

          ...,

          [[ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           ...,
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00]],

          [[ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           ...,
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00]],

          [[ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           ...,
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00]]],


         [[[ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           ...,
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00]],

          [[ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           ...,
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00]],

          [[ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           ...,
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00]],

          ...,

          [[ 0.0000e+00,  1.5168e+00,  3.6893e+19,  8.6176e-01],
           [-2.0000e+00,  8.1546e-01,  2.0000e+00,  7.2988e-01],
           [ 1.0842e-19,  1.6517e+00, -1.0842e-19,  8.1741e-01],
           ...,
           [-0.0000e+00,  9.3772e-01, -0.0000e+00,  1.0176e+00],
           [ 2.0000e+00,  1.8246e+00,  1.0842e-19,  9.6644e-01],
           [-3.6893e+19,  1.5224e+00, -2.0000e+00,  1.0734e+00]],

          [[-3.6893e+19,  8.6628e-01, -1.0842e-19,  9.0430e-01],
           [-3.6893e+19,  1.8505e+00, -0.0000e+00,  9.0678e-01],
           [-0.0000e+00,  1.5402e+00,  0.0000e+00,  1.0987e+00],
           ...,
           [ 0.0000e+00,  1.6991e+00,  0.0000e+00,  9.9405e-01],
           [ 3.6893e+19,  1.6146e+00,  2.0000e+00,  9.6772e-01],
           [-2.0000e+00,  9.3746e-01,  3.6893e+19,  9.4255e-01]],

          [[-0.0000e+00,  1.7898e+00,  0.0000e+00,  1.0364e+00],
           [-0.0000e+00,  1.2403e+00,  2.0000e+00,  1.0161e+00],
           [-2.0000e+00,  9.2283e-01,  1.0842e-19,  9.6727e-01],
           ...,
           [-1.0842e-19,  1.2572e+00,  3.6893e+19,  3.9696e-01],
           [ 0.0000e+00,  5.0363e-01,  0.0000e+00,  4.6133e-01],
           [-3.6893e+19,  1.7505e+00, -0.0000e+00,  1.4161e+00]]]]],
       device='cuda:0')
pred_boxes: tensor([[[[[ 0.4212,  0.6324,  5.1674,  1.7890],
           [ 1.6280,  0.7359,  4.1574,  1.8639],
           [ 2.6086,  0.7436,  5.8741,  1.8296],
           ...,
           [10.6057,  0.6986,  5.2119,  1.4963],
           [11.3094,  0.7082,  4.0983,  1.5751],
           [12.4602,  0.4671,  6.2423,  1.6530]],

          [[ 0.4350,  1.4965,  3.9384,  2.4258],
           [ 1.6254,  1.4938,  3.0950,  2.8035],
           [ 2.6183,  1.5103,  4.5493,  2.8335],
           ...,
           [10.6605,  1.5197,  4.6802,  2.7899],
           [11.2862,  1.6906,  3.4707,  3.0497],
           [12.4018,  1.6478,  5.1846,  2.6232]],

          [[ 0.4031,  2.6192,  4.1621,  2.4786],
           [ 1.6352,  2.5503,  3.2013,  2.9706],
           [ 2.6027,  2.5474,  4.3434,  2.4962],
           ...,
           [10.7151,  2.3537,  4.3557,  2.5719],
           [11.4131,  2.3147,  3.2271,  2.9100],
           [12.3399,  2.4099,  4.5157,  2.3936]],

          ...,

          [[ 0.3681, 10.6122,  3.2601,  2.7503],
           [ 1.5346, 10.5398,  3.0478,  3.2199],
           [ 2.3642, 10.5032,  4.2532,  2.8736],
           ...,
           [10.3299, 10.4921,  5.0818,  2.2077],
           [11.3430, 10.6726,  3.3991,  2.8724],
           [12.4880, 10.5921,  5.0143,  2.5048]],

          [[ 0.3465, 11.5255,  2.9233,  2.6250],
           [ 1.5284, 11.4232,  3.1464,  2.7002],
           [ 2.5046, 11.6510,  4.7150,  2.5282],
           ...,
           [10.4271, 11.5650,  5.0444,  2.3320],
           [11.3137, 11.5872,  3.1583,  2.6785],
           [12.5884, 11.6904,  4.6730,  2.2791]],

          [[ 0.4381, 12.3223,  4.2062,  1.5926],
           [ 1.7521, 12.3151,  4.1754,  1.5457],
           [ 2.6319, 12.3944,  5.2092,  1.3841],
           ...,
           [10.4412, 12.4411,  5.7980,  1.1770],
           [11.3387, 12.2972,  4.2976,  1.5032],
           [12.5641, 12.3688,  6.2320,  1.5095]]],


         [[[ 0.5677,  0.4699,  3.8812, 11.1353],
           [ 1.6325,  0.4979,  4.0276,  8.6841],
           [ 2.6419,  0.5245,  5.2985,  7.2241],
           ...,
           [10.5674,  0.5787,  4.8401,  8.2280],
           [11.4127,  0.4817,  4.2029,  8.6243],
           [12.5685,  0.4550,  4.3272,  9.5173]],

          [[ 0.6469,  1.5991,  4.2167,  9.7042],
           [ 1.5933,  1.7160,  4.4550,  6.5072],
           [ 2.6475,  1.7265,  5.9047,  5.1129],
           ...,
           [10.5306,  1.8003,  5.5451,  4.5417],
           [11.2696,  1.8253,  4.5405,  4.6169],
           [12.5141,  1.6248,  4.9217,  6.7295]],

          [[ 0.6573,  2.6126,  3.6628, 10.1761],
           [ 1.6155,  2.6410,  3.6413,  6.8630],
           [ 2.6130,  2.5429,  5.3595,  5.9647],
           ...,
           [10.5040,  2.4985,  5.4155,  5.2252],
           [11.3059,  2.6278,  4.0087,  5.0735],
           [12.4181,  2.4661,  4.4404,  7.3772]],

          ...,

          [[ 0.6517, 10.5681,  3.4352,  8.9220],
           [ 1.5912, 10.4671,  3.2264,  6.0941],
           [ 2.4072, 10.6171,  4.7545,  5.8106],
           ...,
           [10.2319, 10.3381,  4.9325,  5.7671],
           [11.3726, 10.4793,  4.1226,  6.3580],
           [12.4538, 10.5292,  3.3830, 10.0420]],

          [[ 0.6463, 11.3948,  3.7818,  8.5150],
           [ 1.6782, 11.2232,  3.8098,  5.1763],
           [ 2.5240, 11.2490,  4.7048,  5.1399],
           ...,
           [10.2424, 11.3259,  5.5458,  5.0323],
           [11.3172, 11.3755,  3.9889,  6.6815],
           [12.5731, 11.3709,  4.0271,  8.1560]],

          [[ 0.6092, 12.5128,  3.7626, 11.2080],
           [ 1.6781, 12.5243,  3.8862,  8.9376],
           [ 2.6250, 12.4700,  4.4117,  8.2289],
           ...,
           [10.3856, 12.5356,  5.0106,  8.0660],
           [11.4715, 12.5608,  4.2316,  8.8241],
           [12.5259, 12.5399,  4.1828, 10.3240]]],


         [[[ 0.6742,  0.5711, 10.3247, 11.2882],
           [ 1.7192,  0.5940, 10.5197, 10.2492],
           [ 2.6882,  0.5645, 10.8529,  9.6894],
           ...,
           [10.5040,  0.5488,  9.6085, 10.5999],
           [11.5207,  0.4729,  9.8897, 10.5453],
           [12.6212,  0.5261, 10.4853, 10.3019]],

          [[ 0.6407,  1.5746, 10.1207, 10.1086],
           [ 1.6921,  1.6232, 10.6119,  8.1240],
           [ 2.7382,  1.6380, 10.2625,  8.0495],
           ...,
           [10.4725,  1.6983,  9.2232,  7.3711],
           [11.4526,  1.7047,  8.9967,  7.3595],
           [12.6522,  1.6084, 10.9257,  8.0026]],

          [[ 0.5413,  2.5813, 10.1246, 10.7505],
           [ 1.6982,  2.6032, 10.3238,  9.3743],
           [ 2.7378,  2.6246,  9.5621,  8.0598],
           ...,
           [10.4316,  2.5422,  9.0931,  7.0472],
           [11.4665,  2.5430,  9.6021,  7.5259],
           [12.6991,  2.4893, 11.1314,  8.2021]],

          ...,

          [[ 0.6250, 10.4939, 10.4660,  9.3785],
           [ 1.5468, 10.4929,  8.9819,  9.3860],
           [ 2.6983, 10.3824,  9.2898,  8.2165],
           ...,
           [10.3136, 10.3234, 10.1708,  7.3703],
           [11.5193, 10.4918,  7.5599,  8.4792],
           [12.5580, 10.5629, 11.3966,  9.8387]],

          [[ 0.5852, 11.4758, 10.8609,  8.3105],
           [ 1.6330, 11.4603,  9.8867,  8.5429],
           [ 2.7239, 11.3768, 10.0302,  7.5928],
           ...,
           [10.2539, 11.3111, 10.4692,  6.7929],
           [11.6578, 11.4129,  8.4849,  7.1878],
           [12.5708, 11.4176, 12.3315,  7.9202]],

          [[ 0.5808, 12.5080,  9.9214, 10.6440],
           [ 1.6758, 12.5258,  8.1690, 10.9744],
           [ 2.6982, 12.5831,  9.3294, 11.0971],
           ...,
           [10.4259, 12.5633,  9.7560, 10.1662],
           [11.6060, 12.5419,  8.5725,  9.1284],
           [12.5183, 12.4131, 11.0025, 11.4356]]]]], device='cuda:0')
pred_boxes_size: torch.Size([1, 3, 13, 13, 4])
pred_boxes.view(batch_size, -1, 4): tensor([[[ 0.4212,  0.6324,  5.1674,  1.7890],
         [ 1.6280,  0.7359,  4.1574,  1.8639],
         [ 2.6086,  0.7436,  5.8741,  1.8296],
         ...,
         [10.4259, 12.5633,  9.7560, 10.1662],
         [11.6060, 12.5419,  8.5725,  9.1284],
         [12.5183, 12.4131, 11.0025, 11.4356]]], device='cuda:0')
up_size: torch.Size([1, 507, 4])
conf.view(batch_size, -1, 1): tensor([[[6.1134e-09],
         [1.1090e-07],
         [3.5762e-07],
         [1.5550e-06],
         [2.3251e-06],
         [2.5755e-06],
         [7.9206e-06],
         [2.3898e-06],
         [2.0910e-06],
         [1.0648e-06],
         [2.0287e-06],
         [8.7532e-07],
         [2.0025e-08],
         [5.0063e-09],
         [9.6938e-07],
         [6.7985e-06],
         [2.2208e-05],
         [2.2194e-05],
         [7.1137e-06],
         [7.7830e-06],
         [3.5442e-06],
         [4.5183e-06],
         [1.9156e-06],
         [8.7330e-06],
         [7.6498e-06],
         [2.5309e-08],
         [8.6441e-09],
         [6.1924e-07],
         [1.7956e-06],
         [3.9309e-06],
         [2.0543e-06],
         [5.9470e-07],
         [5.9120e-07],
         [6.5143e-07],
         [4.7200e-07],
         [8.3280e-07],
         [1.8039e-06],
         [7.3200e-06],
         [2.3993e-08],
         [2.2756e-08],
         [9.9879e-07],
         [4.2530e-06],
         [5.6757e-06],
         [5.8074e-06],
         [4.9023e-06],
         [5.8817e-06],
         [7.2240e-06],
         [7.8790e-06],
         [4.6959e-06],
         [1.7562e-06],
         [3.1882e-06],
         [5.1268e-09],
         [3.6107e-08],
         [8.3911e-06],
         [4.0430e-05],
         [4.0982e-05],
         [4.2526e-05],
         [1.3166e-05],
         [9.7424e-06],
         [1.2504e-05],
         [6.0583e-05],
         [4.6570e-05],
         [2.1213e-05],
         [6.2273e-05],
         [8.4133e-08],
         [5.4236e-07],
         [2.5578e-04],
         [5.7262e-04],
         [4.9084e-04],
         [4.2239e-04],
         [2.4356e-04],
         [3.9725e-04],
         [1.8155e-04],
         [2.2502e-04],
         [1.2726e-04],
         [7.1919e-05],
         [7.8570e-05],
         [5.5464e-07],
         [4.0474e-06],
         [3.3137e-03],
         [8.6231e-03],
         [1.8788e-02],
         [7.2714e-03],
         [4.0764e-03],
         [2.2451e-03],
         [9.9272e-01],
         [8.5318e-01],
         [1.1739e-02],
         [2.6537e-02],
         [2.1459e-05],
         [1.0838e-07],
         [1.6247e-06],
         [6.5208e-02],
         [4.5359e-03],
         [3.2801e-03],
         [7.4849e-04],
         [4.0648e-04],
         [5.0000e-05],
         [7.9433e-04],
         [4.6677e-04],
         [7.4120e-01],
         [9.4194e-01],
         [2.2059e-05],
         [3.2419e-08],
         [3.5284e-07],
         [3.6371e-05],
         [3.4018e-05],
         [2.0747e-05],
         [4.9506e-06],
         [6.8682e-06],
         [5.6083e-05],
         [3.3349e-05],
         [7.0896e-04],
         [9.9891e-01],
         [9.7096e-01],
         [4.1620e-05],
         [8.2664e-08],
         [7.1053e-08],
         [1.5303e-06],
         [1.1370e-06],
         [1.3912e-06],
         [1.3655e-06],
         [2.6558e-06],
         [1.6330e-05],
         [8.7046e-06],
         [1.9617e-05],
         [2.6921e-01],
         [2.6415e-02],
         [1.6042e-06],
         [3.8075e-08],
         [6.0848e-08],
         [3.1515e-06],
         [5.5320e-07],
         [5.8980e-07],
         [9.0074e-07],
         [5.5310e-06],
         [1.2238e-05],
         [7.8854e-06],
         [2.1121e-06],
         [2.9268e-06],
         [1.4862e-06],
         [2.2634e-06],
         [2.6589e-08],
         [1.1346e-08],
         [1.6221e-06],
         [8.3098e-07],
         [1.4281e-06],
         [5.2733e-07],
         [2.4437e-06],
         [1.3596e-05],
         [4.3318e-06],
         [1.8240e-06],
         [1.9574e-06],
         [4.6612e-07],
         [9.2590e-07],
         [2.3997e-08],
         [1.4784e-08],
         [1.3843e-06],
         [2.0975e-05],
         [5.8043e-05],
         [2.9883e-05],
         [7.4100e-05],
         [3.4118e-04],
         [9.8822e-05],
         [3.7515e-05],
         [3.6635e-05],
         [3.8570e-06],
         [1.5251e-06],
         [1.4243e-07],
         [2.4423e-09],
         [3.0012e-09],
         [1.6232e-08],
         [3.8787e-08],
         [3.8851e-08],
         [4.2156e-08],
         [4.4803e-08],
         [1.8734e-08],
         [3.1085e-08],
         [1.1753e-08],
         [4.6886e-08],
         [8.9571e-09],
         [1.2018e-08],
         [8.4686e-09],
         [5.8499e-08],
         [1.1825e-06],
         [5.5898e-06],
         [4.5200e-06],
         [3.4268e-06],
         [1.6894e-06],
         [7.1351e-07],
         [8.0513e-07],
         [8.6987e-07],
         [2.7513e-06],
         [1.8302e-07],
         [4.7359e-08],
         [1.5079e-08],
         [3.4143e-07],
         [5.2079e-06],
         [8.5762e-06],
         [3.2098e-06],
         [1.6077e-06],
         [1.7570e-06],
         [1.4615e-06],
         [2.7384e-06],
         [2.8835e-06],
         [4.3900e-06],
         [9.6292e-07],
         [5.1342e-08],
         [1.7016e-07],
         [2.7349e-06],
         [1.3575e-05],
         [2.4353e-05],
         [1.0595e-05],
         [3.8344e-06],
         [3.4110e-06],
         [3.2745e-06],
         [2.5106e-05],
         [1.1358e-05],
         [7.3590e-06],
         [8.9657e-06],
         [1.3468e-07],
         [3.5115e-07],
         [5.4431e-06],
         [2.0063e-05],
         [3.7445e-05],
         [2.4054e-05],
         [2.2622e-05],
         [2.0911e-05],
         [7.5041e-06],
         [2.2046e-05],
         [1.7690e-05],
         [6.3918e-06],
         [1.1454e-05],
         [2.5116e-07],
         [4.6250e-07],
         [2.6911e-06],
         [2.1825e-05],
         [6.3091e-05],
         [2.0381e-05],
         [1.2533e-05],
         [1.7343e-05],
         [1.1613e-05],
         [1.0763e-05],
         [4.0280e-06],
         [5.7132e-07],
         [2.2437e-06],
         [9.0895e-08],
         [1.7375e-06],
         [8.5225e-05],
         [3.6796e-04],
         [1.3552e-03],
         [4.0486e-04],
         [1.6468e-04],
         [3.1497e-04],
         [5.7458e-04],
         [7.7458e-05],
         [1.4144e-03],
         [2.0561e-03],
         [1.5559e-06],
         [3.3984e-08],
         [3.7507e-06],
         [1.0382e-03],
         [8.3060e-03],
         [9.9151e-03],
         [2.5039e-03],
         [1.6247e-03],
         [1.6011e-03],
         [3.1173e-04],
         [2.8350e-04],
         [6.5146e-01],
         [7.0198e-01],
         [4.9025e-06],
         [5.9168e-08],
         [1.4325e-06],
         [6.8977e-05],
         [1.3156e-04],
         [2.4317e-04],
         [5.2129e-05],
         [1.7752e-05],
         [3.4943e-05],
         [8.8215e-05],
         [1.0970e-04],
         [5.8796e-01],
         [1.0817e-01],
         [2.4389e-06],
         [1.6049e-07],
         [1.1684e-07],
         [5.2997e-06],
         [9.9988e-06],
         [6.3284e-06],
         [3.0274e-06],
         [1.5887e-06],
         [4.3759e-06],
         [1.4812e-05],
         [1.4041e-05],
         [2.3060e-03],
         [2.4453e-04],
         [1.0311e-06],
         [6.3203e-08],
         [1.4275e-07],
         [1.5879e-06],
         [4.6379e-06],
         [2.3047e-06],
         [2.5342e-06],
         [1.2044e-06],
         [7.4300e-07],
         [2.3473e-06],
         [1.8586e-06],
         [2.9783e-07],
         [3.2765e-07],
         [6.0905e-07],
         [3.9340e-08],
         [2.3724e-09],
         [2.2802e-08],
         [3.1316e-07],
         [3.0553e-07],
         [6.3231e-07],
         [8.3231e-07],
         [8.1255e-07],
         [9.5339e-07],
         [4.7506e-07],
         [6.1450e-07],
         [1.7005e-07],
         [5.6671e-08],
         [6.1404e-09],
         [1.0954e-08],
         [6.2948e-08],
         [2.7116e-07],
         [8.7881e-08],
         [1.4926e-07],
         [1.1168e-07],
         [9.2481e-08],
         [5.1922e-08],
         [1.3447e-07],
         [2.8271e-07],
         [4.4553e-08],
         [4.0276e-08],
         [9.0077e-09],
         [1.5297e-08],
         [8.6240e-09],
         [4.6981e-08],
         [1.0974e-07],
         [1.3831e-07],
         [4.8733e-07],
         [1.1030e-06],
         [5.7330e-07],
         [2.6232e-07],
         [9.2240e-08],
         [8.1934e-08],
         [1.5343e-08],
         [1.9455e-08],
         [1.6616e-08],
         [2.0568e-08],
         [7.1484e-08],
         [5.3308e-07],
         [5.4613e-07],
         [5.9778e-06],
         [1.2207e-05],
         [4.1014e-06],
         [7.0152e-07],
         [1.1138e-07],
         [4.2500e-08],
         [4.7224e-09],
         [3.8677e-08],
         [2.0652e-08],
         [3.9095e-08],
         [2.5666e-07],
         [3.0490e-06],
         [2.1427e-06],
         [1.7425e-05],
         [5.5229e-05],
         [1.6235e-05],
         [2.2221e-06],
         [3.0114e-07],
         [6.2283e-08],
         [8.3433e-09],
         [3.4391e-08],
         [4.5190e-08],
         [9.3086e-08],
         [7.0757e-07],
         [9.5174e-06],
         [1.0591e-05],
         [3.8391e-05],
         [6.5713e-05],
         [1.3507e-04],
         [1.7843e-05],
         [2.8552e-06],
         [2.9203e-07],
         [5.3945e-08],
         [6.0183e-08],
         [3.2393e-07],
         [3.2212e-07],
         [1.8235e-06],
         [8.7348e-06],
         [6.6608e-06],
         [5.4734e-05],
         [5.6926e-05],
         [1.3855e-04],
         [3.3740e-05],
         [7.1359e-06],
         [7.5954e-07],
         [1.8549e-07],
         [9.7472e-08],
         [2.0023e-07],
         [1.4394e-07],
         [1.1861e-06],
         [1.4428e-06],
         [2.8693e-06],
         [7.4499e-06],
         [1.5008e-05],
         [3.8020e-05],
         [1.9596e-05],
         [2.4150e-06],
         [1.9793e-07],
         [5.6082e-08],
         [7.8031e-08],
         [2.5194e-06],
         [2.8687e-06],
         [2.2037e-05],
         [1.7165e-05],
         [2.6065e-05],
         [5.9447e-05],
         [9.8825e-05],
         [5.7865e-05],
         [5.3573e-05],
         [7.3358e-06],
         [1.6885e-06],
         [2.0272e-07],
         [9.8134e-08],
         [5.6857e-06],
         [5.4171e-06],
         [2.3540e-04],
         [7.9368e-05],
         [3.1935e-04],
         [1.0026e-03],
         [1.1292e-03],
         [1.6898e-04],
         [3.2201e-05],
         [6.7898e-06],
         [1.3081e-06],
         [9.7047e-08],
         [4.9416e-08],
         [1.7996e-06],
         [3.4925e-06],
         [2.1743e-05],
         [6.8914e-05],
         [5.3486e-05],
         [1.1445e-04],
         [5.7720e-04],
         [2.2450e-04],
         [2.7441e-05],
         [1.0608e-05],
         [8.1745e-07],
         [1.1640e-07],
         [9.7658e-08],
         [1.4812e-07],
         [1.2732e-07],
         [4.2827e-07],
         [1.1050e-06],
         [1.3707e-06],
         [5.4172e-06],
         [4.8421e-05],
         [1.0947e-05],
         [1.5695e-06],
         [2.6830e-07],
         [1.7426e-07],
         [9.6574e-09],
         [1.2251e-07],
         [3.5264e-08],
         [1.1732e-08],
         [5.8496e-08],
         [2.2245e-07],
         [5.0584e-07],
         [2.2263e-06],
         [3.8451e-05],
         [1.2421e-06],
         [8.7532e-08],
         [1.6984e-08],
         [3.8452e-09],
         [3.6725e-09],
         [7.1120e-08],
         [2.5846e-09],
         [4.7998e-09],
         [8.3922e-09],
         [9.2906e-08],
         [6.7032e-08],
         [1.3849e-06],
         [2.9139e-05],
         [1.2713e-06],
         [1.1133e-07],
         [2.4127e-07],
         [7.7394e-09],
         [2.2493e-08],
         [5.8847e-08],
         [9.5133e-09],
         [2.7056e-08],
         [5.0768e-08],
         [1.7561e-07],
         [1.9656e-07],
         [6.5547e-07],
         [2.9649e-06],
         [4.5977e-07],
         [1.2133e-07],
         [2.5720e-07],
         [1.5387e-08],
         [2.7295e-08],
         [1.3101e-08]]], device='cuda:0')
up_size: torch.Size([1, 507, 1])
pred_cls.view(batch_size, -1, self.num_classes): tensor([[[5.1257e-02, 8.5989e-03, 8.8658e-02,  ..., 3.0908e-03,
          4.1193e-03, 3.7631e-03],
         [8.0921e-02, 1.7520e-03, 2.9891e-02,  ..., 2.8145e-03,
          3.1190e-03, 1.5285e-03],
         [5.8159e-02, 1.7646e-03, 1.4585e-02,  ..., 3.4963e-03,
          3.1008e-03, 1.2002e-03],
         ...,
         [2.6458e-01, 1.1567e-02, 3.8199e-01,  ..., 2.2314e-04,
          6.8903e-04, 3.0381e-04],
         [3.3288e-01, 2.0625e-02, 4.7737e-01,  ..., 1.5585e-03,
          2.2613e-03, 8.6090e-04],
         [2.8852e-01, 6.0464e-02, 2.4781e-01,  ..., 2.7119e-02,
          8.3832e-03, 8.3005e-03]]], device='cuda:0')
up_size: torch.Size([1, 507, 80])
output: tensor([[[1.3478e+01, 2.0237e+01, 1.6536e+02,  ..., 3.0908e-03,
          4.1193e-03, 3.7631e-03],
         [5.2095e+01, 2.3547e+01, 1.3304e+02,  ..., 2.8145e-03,
          3.1190e-03, 1.5285e-03],
         [8.3474e+01, 2.3794e+01, 1.8797e+02,  ..., 3.4963e-03,
          3.1008e-03, 1.2002e-03],
         ...,
         [3.3363e+02, 4.0203e+02, 3.1219e+02,  ..., 2.2314e-04,
          6.8903e-04, 3.0381e-04],
         [3.7139e+02, 4.0134e+02, 2.7432e+02,  ..., 1.5585e-03,
          2.2613e-03, 8.6090e-04],
         [4.0059e+02, 3.9722e+02, 3.5208e+02,  ..., 2.7119e-02,
          8.3832e-03, 8.3005e-03]]], device='cuda:0')
up_size: torch.Size([1, 507, 85])
input: tensor([[[[ 1.7456e-01, -5.0865e-01, -7.2535e-01,  ...,  3.4713e-01,
            3.0944e-01,  2.1388e-01],
          [ 5.9051e-01, -3.8293e-01, -1.3658e+00,  ...,  6.0178e-01,
            8.5967e-01, -2.5893e-01],
          [ 5.9701e-01, -5.1714e-02, -9.9055e-01,  ...,  6.9959e-01,
            6.6510e-01,  4.1134e-03],
          ...,
          [ 2.4699e-01, -1.4543e+00, -9.9720e-01,  ...,  1.1781e+00,
            1.1586e+00, -3.1888e-01],
          [ 9.4017e-01, -1.2867e+00, -9.5000e-01,  ...,  4.4380e-01,
            1.2338e+00, -1.1236e+00],
          [-9.2820e-02, -5.6337e-01, -7.4308e-01,  ...,  4.8898e-01,
            7.4961e-01, -9.0234e-01]],

         [[ 8.4547e-01,  8.0839e-01,  4.9921e-01,  ...,  5.7710e-02,
            3.5005e-01,  8.2541e-02],
          [ 3.4459e-01,  4.2421e-01,  9.1398e-01,  ...,  3.4915e-01,
            4.1856e-01,  2.6408e-01],
          [ 1.6843e-02,  9.7663e-02,  9.5437e-02,  ...,  5.9548e-01,
            2.6093e-01, -1.4515e-01],
          ...,
          [-1.8261e-02,  3.6553e-02,  2.6186e-01,  ...,  5.7175e-02,
            3.5951e-01, -1.1386e-02],
          [-8.9965e-01, -5.0178e-01, -3.4230e-01,  ..., -2.6485e-01,
           -3.7191e-01, -6.9480e-01],
          [-2.9508e-01, -2.9572e-01,  7.2177e-02,  ...,  2.6253e-01,
           -1.3340e-01, -2.5788e-01]],

         [[-3.2805e-01, -1.7924e-01, -2.9214e-01,  ..., -1.4247e-01,
           -9.0359e-02, -7.0115e-01],
          [-2.1294e-01, -6.6390e-02, -4.2167e-02,  ..., -5.7922e-02,
            1.2491e-01, -6.9174e-01],
          [-3.4444e-01, -1.8827e-01, -1.5334e-01,  ..., -1.2880e-01,
            4.3016e-02, -7.9705e-01],
          ...,
          [-6.0267e-01,  1.3658e-01,  2.8537e-02,  ...,  1.7743e-01,
            2.9635e-01, -8.0203e-01],
          [-2.1854e-01,  1.0438e-01,  9.8805e-02,  ...,  1.8391e-01,
            2.2500e-01, -4.9221e-01],
          [-4.8502e-01,  3.2415e-02, -1.8253e-01,  ..., -1.5220e-01,
           -4.4695e-02, -5.4668e-01]],

         ...,

         [[-6.5973e+00, -6.4943e+00, -5.9757e+00,  ..., -5.9673e+00,
           -6.8816e+00, -6.8568e+00],
          [-7.0179e+00, -6.7793e+00, -6.3370e+00,  ..., -5.4675e+00,
           -6.4575e+00, -6.6347e+00],
          [-7.6809e+00, -7.8827e+00, -7.4753e+00,  ..., -6.4535e+00,
           -6.7058e+00, -6.3769e+00],
          ...,
          [-5.3987e+00, -7.5721e+00, -9.1797e+00,  ..., -8.6224e+00,
           -6.7245e+00, -5.4607e+00],
          [-4.4494e+00, -6.1310e+00, -9.2578e+00,  ..., -6.7358e+00,
           -5.3373e+00, -4.2818e+00],
          [-4.6733e+00, -5.7865e+00, -7.6644e+00,  ..., -6.4964e+00,
           -4.9618e+00, -3.9562e+00]],

         [[-5.9757e+00, -6.0883e+00, -6.2843e+00,  ..., -7.2192e+00,
           -7.0305e+00, -7.0844e+00],
          [-5.4401e+00, -5.7699e+00, -6.5405e+00,  ..., -5.9328e+00,
           -6.0836e+00, -6.6535e+00],
          [-5.5299e+00, -6.4686e+00, -7.1376e+00,  ..., -6.3750e+00,
           -6.8595e+00, -7.2013e+00],
          ...,
          [-7.1149e+00, -7.5080e+00, -8.1629e+00,  ..., -8.0371e+00,
           -7.3083e+00, -7.5556e+00],
          [-7.1043e+00, -7.1426e+00, -8.0753e+00,  ..., -7.3967e+00,
           -6.9238e+00, -7.1697e+00],
          [-7.7158e+00, -7.1821e+00, -7.1958e+00,  ..., -6.9121e+00,
           -6.6888e+00, -6.8633e+00]],

         [[-5.9303e+00, -6.4838e+00, -6.3635e+00,  ..., -6.6236e+00,
           -6.8523e+00, -6.4033e+00],
          [-5.5059e+00, -6.2644e+00, -6.9383e+00,  ..., -5.3060e+00,
           -5.8278e+00, -5.5921e+00],
          [-5.7314e+00, -6.8136e+00, -7.1035e+00,  ..., -5.3559e+00,
           -5.8039e+00, -5.3253e+00],
          ...,
          [-7.2087e+00, -8.1927e+00, -8.6066e+00,  ..., -9.7550e+00,
           -8.6882e+00, -8.2815e+00],
          [-6.7858e+00, -7.9675e+00, -8.8471e+00,  ..., -9.5084e+00,
           -8.1015e+00, -7.8775e+00],
          [-7.1242e+00, -7.3276e+00, -7.4342e+00,  ..., -8.1828e+00,
           -7.2250e+00, -7.2934e+00]]]], device='cuda:0')
input_size: torch.Size([1, 255, 26, 26])
scaled_anchors: [(1.875, 3.8125), (3.875, 2.8125), (3.6875, 7.4375)]
prediction: tensor([[[[[ 1.7456e-01,  8.4547e-01, -3.2805e-01,  ..., -6.2424e+00,
            -5.4730e+00, -6.4786e+00],
           [-5.0865e-01,  8.0839e-01, -1.7924e-01,  ..., -6.2795e+00,
            -5.2032e+00, -6.9719e+00],
           [-7.2535e-01,  4.9921e-01, -2.9214e-01,  ..., -5.3246e+00,
            -5.2595e+00, -6.1615e+00],
           ...,
           [ 3.4713e-01,  5.7710e-02, -1.4247e-01,  ..., -5.0049e+00,
            -6.9133e+00, -6.4106e+00],
           [ 3.0944e-01,  3.5005e-01, -9.0359e-02,  ..., -5.9000e+00,
            -6.4271e+00, -6.7465e+00],
           [ 2.1388e-01,  8.2541e-02, -7.0115e-01,  ..., -6.2036e+00,
            -6.4759e+00, -6.6140e+00]],

          [[ 5.9051e-01,  3.4459e-01, -2.1294e-01,  ..., -7.3549e+00,
            -5.2624e+00, -6.6962e+00],
           [-3.8293e-01,  4.2421e-01, -6.6390e-02,  ..., -7.3493e+00,
            -5.1921e+00, -7.5746e+00],
           [-1.3658e+00,  9.1398e-01, -4.2167e-02,  ..., -6.5209e+00,
            -6.1932e+00, -7.5678e+00],
           ...,
           [ 6.0178e-01,  3.4915e-01, -5.7922e-02,  ..., -5.4234e+00,
            -5.8941e+00, -5.8004e+00],
           [ 8.5967e-01,  4.1856e-01,  1.2491e-01,  ..., -6.4247e+00,
            -5.5302e+00, -6.5867e+00],
           [-2.5893e-01,  2.6408e-01, -6.9174e-01,  ..., -6.3719e+00,
            -6.2588e+00, -6.4558e+00]],

          [[ 5.9701e-01,  1.6843e-02, -3.4444e-01,  ..., -7.7706e+00,
            -5.1551e+00, -6.9375e+00],
           [-5.1714e-02,  9.7663e-02, -1.8827e-01,  ..., -8.2079e+00,
            -6.0132e+00, -8.1696e+00],
           [-9.9055e-01,  9.5437e-02, -1.5334e-01,  ..., -7.5304e+00,
            -7.1060e+00, -7.9805e+00],
           ...,
           [ 6.9959e-01,  5.9548e-01, -1.2880e-01,  ..., -6.3299e+00,
            -6.5921e+00, -6.2310e+00],
           [ 6.6510e-01,  2.6093e-01,  4.3016e-02,  ..., -6.9638e+00,
            -6.7193e+00, -7.0671e+00],
           [ 4.1134e-03, -1.4515e-01, -7.9705e-01,  ..., -6.3722e+00,
            -6.9570e+00, -6.2361e+00]],

          ...,

          [[ 2.4699e-01, -1.8261e-02, -6.0267e-01,  ..., -5.4909e+00,
            -7.4170e+00, -6.9401e+00],
           [-1.4543e+00,  3.6553e-02,  1.3658e-01,  ..., -8.0715e+00,
            -7.2813e+00, -7.9674e+00],
           [-9.9720e-01,  2.6186e-01,  2.8537e-02,  ..., -8.5695e+00,
            -8.0675e+00, -7.9047e+00],
           ...,
           [ 1.1781e+00,  5.7175e-02,  1.7743e-01,  ..., -9.0427e+00,
            -8.5389e+00, -1.0006e+01],
           [ 1.1586e+00,  3.5951e-01,  2.9635e-01,  ..., -6.5929e+00,
            -7.5173e+00, -8.6732e+00],
           [-3.1888e-01, -1.1386e-02, -8.0203e-01,  ..., -5.5321e+00,
            -7.3775e+00, -7.9895e+00]],

          [[ 9.4017e-01, -8.9965e-01, -2.1854e-01,  ..., -4.3001e+00,
            -7.7514e+00, -6.7320e+00],
           [-1.2867e+00, -5.0178e-01,  1.0438e-01,  ..., -6.5554e+00,
            -7.5704e+00, -8.2402e+00],
           [-9.5000e-01, -3.4230e-01,  9.8805e-02,  ..., -8.6223e+00,
            -8.6375e+00, -8.6378e+00],
           ...,
           [ 4.4380e-01, -2.6485e-01,  1.8391e-01,  ..., -7.6989e+00,
            -8.4637e+00, -9.7932e+00],
           [ 1.2338e+00, -3.7191e-01,  2.2500e-01,  ..., -5.4900e+00,
            -7.4602e+00, -8.0539e+00],
           [-1.1236e+00, -6.9480e-01, -4.9221e-01,  ..., -4.7898e+00,
            -7.1264e+00, -7.5872e+00]],

          [[-9.2820e-02, -2.9508e-01, -4.8502e-01,  ..., -3.7770e+00,
            -7.1915e+00, -6.8266e+00],
           [-5.6337e-01, -2.9572e-01,  3.2415e-02,  ..., -5.3096e+00,
            -6.6637e+00, -7.6155e+00],
           [-7.4308e-01,  7.2177e-02, -1.8253e-01,  ..., -7.0774e+00,
            -6.8700e+00, -7.1148e+00],
           ...,
           [ 4.8898e-01,  2.6253e-01, -1.5220e-01,  ..., -7.1583e+00,
            -7.0103e+00, -8.7012e+00],
           [ 7.4961e-01, -1.3340e-01, -4.4695e-02,  ..., -4.8602e+00,
            -6.3461e+00, -7.3440e+00],
           [-9.0234e-01, -2.5788e-01, -5.4668e-01,  ..., -4.0961e+00,
            -6.3212e+00, -7.2787e+00]]],


         [[[-9.8919e-02,  3.1968e-01,  8.5754e-01,  ..., -6.9054e+00,
            -5.5718e+00, -6.8354e+00],
           [ 3.4238e-01,  9.2255e-01,  6.3035e-01,  ..., -6.7974e+00,
            -5.7696e+00, -7.4209e+00],
           [ 5.2125e-02,  5.4832e-01,  6.7833e-01,  ..., -6.1226e+00,
            -6.3268e+00, -7.3336e+00],
           ...,
           [-1.3161e-01,  2.5491e-01,  8.3439e-01,  ..., -5.9924e+00,
            -8.0607e+00, -7.8060e+00],
           [-6.5215e-01,  2.2704e-01,  7.0620e-01,  ..., -6.9254e+00,
            -7.2402e+00, -7.8331e+00],
           [ 5.2466e-01, -3.6465e-01,  1.0662e+00,  ..., -6.7366e+00,
            -6.4582e+00, -7.0588e+00]],

          [[ 2.7119e-01,  2.3733e-02,  8.5929e-02,  ..., -7.5404e+00,
            -4.9439e+00, -6.5580e+00],
           [ 4.8872e-01,  3.1336e-02, -1.2699e-01,  ..., -7.0696e+00,
            -5.3175e+00, -7.5844e+00],
           [ 2.5472e-02, -9.8130e-02,  1.3140e-01,  ..., -6.5322e+00,
            -6.6649e+00, -8.3867e+00],
           ...,
           [-4.6852e-02, -5.9992e-01,  2.2652e-01,  ..., -5.6421e+00,
            -6.3903e+00, -6.5397e+00],
           [-6.4772e-01, -4.1173e-01, -1.3340e-01,  ..., -6.7359e+00,
            -5.7408e+00, -6.8778e+00],
           [ 4.9903e-01, -3.4809e-01,  5.5143e-01,  ..., -6.3863e+00,
            -5.8562e+00, -6.5169e+00]],

          [[ 5.8545e-01, -4.8831e-01,  1.4734e-01,  ..., -7.8132e+00,
            -4.8127e+00, -6.3806e+00],
           [ 5.1972e-01, -5.3673e-01, -8.5904e-02,  ..., -7.7987e+00,
            -5.7494e+00, -7.9506e+00],
           [-4.5215e-03, -7.0687e-01,  7.7819e-02,  ..., -7.6808e+00,
            -7.2643e+00, -8.6734e+00],
           ...,
           [-2.5613e-01,  2.5274e-01,  1.2440e-01,  ..., -7.0837e+00,
            -7.2783e+00, -6.8439e+00],
           [-6.6527e-01, -2.4512e-01, -9.1569e-02,  ..., -7.3921e+00,
            -6.9733e+00, -7.0242e+00],
           [ 5.0048e-01,  2.3054e-02,  5.2390e-01,  ..., -6.5748e+00,
            -6.7186e+00, -6.3760e+00]],

          ...,

          [[-4.6481e-01,  4.1397e-01,  2.6416e-01,  ..., -5.3667e+00,
            -6.1504e+00, -6.3962e+00],
           [ 6.6748e-01,  9.0636e-01, -2.3309e-01,  ..., -7.9700e+00,
            -6.9178e+00, -7.6761e+00],
           [-5.7152e-01,  7.0739e-01,  1.6466e-01,  ..., -8.8067e+00,
            -8.1074e+00, -8.5784e+00],
           ...,
           [ 3.3014e-01,  2.8771e-01,  1.3604e-01,  ..., -9.4286e+00,
            -8.1695e+00, -1.0488e+01],
           [-9.4008e-01,  3.6998e-01, -2.7416e-01,  ..., -7.0983e+00,
            -7.3199e+00, -8.7405e+00],
           [ 1.3950e-01,  3.7240e-01,  2.2985e-01,  ..., -5.3530e+00,
            -6.0633e+00, -7.3238e+00]],

          [[-4.7329e-01,  8.6322e-02,  2.5793e-01,  ..., -4.3163e+00,
            -7.2730e+00, -6.8119e+00],
           [ 5.2508e-01,  1.0056e-02, -3.1310e-01,  ..., -6.5302e+00,
            -7.7017e+00, -7.8651e+00],
           [-2.9854e-01,  1.5226e-01,  2.0051e-01,  ..., -9.0761e+00,
            -9.2095e+00, -9.3231e+00],
           ...,
           [ 2.6131e-01,  6.1160e-01,  1.4215e-01,  ..., -7.7541e+00,
            -8.7617e+00, -1.0048e+01],
           [-7.3403e-01,  3.9480e-02, -2.8790e-01,  ..., -5.6600e+00,
            -7.6150e+00, -8.1895e+00],
           [ 1.2205e-01,  1.5565e-01,  2.9747e-01,  ..., -4.6509e+00,
            -6.3242e+00, -7.0619e+00]],

          [[-4.7869e-01,  4.1833e-02,  7.5697e-01,  ..., -4.2771e+00,
            -7.6885e+00, -7.2921e+00],
           [ 7.5519e-01, -8.9600e-01,  2.9542e-01,  ..., -5.6785e+00,
            -7.3433e+00, -7.3650e+00],
           [ 1.3606e-01, -5.5979e-01,  4.4382e-01,  ..., -7.6784e+00,
            -7.9820e+00, -7.7989e+00],
           ...,
           [-3.4187e-01, -8.5757e-01,  6.3314e-01,  ..., -7.8439e+00,
            -8.3572e+00, -9.0319e+00],
           [-1.0328e+00, -1.2080e+00,  2.8778e-01,  ..., -5.4629e+00,
            -7.4668e+00, -7.8427e+00],
           [ 1.9664e-01, -2.3450e-01,  9.0052e-01,  ..., -4.5243e+00,
            -6.5470e+00, -7.0742e+00]]],


         [[[ 4.3669e-01, -2.8523e-01, -7.4845e-01,  ..., -6.5973e+00,
            -5.9757e+00, -5.9303e+00],
           [ 1.0142e-01, -4.7272e-01, -4.5158e-01,  ..., -6.4943e+00,
            -6.0883e+00, -6.4838e+00],
           [ 1.7348e-01, -6.5247e-01, -2.9855e-01,  ..., -5.9757e+00,
            -6.2843e+00, -6.3635e+00],
           ...,
           [ 2.3986e-01, -6.1195e-01, -2.0466e-01,  ..., -5.9673e+00,
            -7.2192e+00, -6.6236e+00],
           [-8.0535e-02, -4.0627e-01, -3.5905e-01,  ..., -6.8816e+00,
            -7.0305e+00, -6.8523e+00],
           [-7.0311e-02, -3.8267e-01, -7.3247e-01,  ..., -6.8568e+00,
            -7.0844e+00, -6.4033e+00]],

          [[ 1.0640e+00,  4.9094e-01, -7.0587e-01,  ..., -7.0179e+00,
            -5.4401e+00, -5.5059e+00],
           [ 6.4156e-01,  8.7871e-01, -1.8629e-01,  ..., -6.7793e+00,
            -5.7699e+00, -6.2644e+00],
           [ 1.4966e-01,  9.2904e-01,  4.7547e-02,  ..., -6.3370e+00,
            -6.5405e+00, -6.9383e+00],
           ...,
           [ 4.0634e-01,  8.4249e-01,  1.1017e-01,  ..., -5.4675e+00,
            -5.9328e+00, -5.3060e+00],
           [-7.1191e-04,  6.7361e-01, -1.0339e-01,  ..., -6.4575e+00,
            -6.0836e+00, -5.8278e+00],
           [ 7.8359e-02,  9.9307e-02, -7.5477e-01,  ..., -6.6347e+00,
            -6.6535e+00, -5.5921e+00]],

          [[ 1.0970e+00,  2.9416e-01, -8.2925e-01,  ..., -7.6809e+00,
            -5.5299e+00, -5.7314e+00],
           [ 5.3009e-01,  6.3940e-01, -3.5522e-01,  ..., -7.8827e+00,
            -6.4686e+00, -6.8136e+00],
           [-1.9142e-01,  4.6265e-01, -4.6877e-02,  ..., -7.4753e+00,
            -7.1376e+00, -7.1035e+00],
           ...,
           [ 2.3680e-01,  5.1613e-01,  1.8142e-01,  ..., -6.4535e+00,
            -6.3750e+00, -5.3559e+00],
           [-4.1231e-01,  2.8995e-01, -1.2470e-01,  ..., -6.7058e+00,
            -6.8595e+00, -5.8039e+00],
           [-1.3296e-01, -9.6669e-03, -8.1957e-01,  ..., -6.3769e+00,
            -7.2013e+00, -5.3253e+00]],

          ...,

          [[ 8.0462e-01, -6.3949e-01, -8.4443e-01,  ..., -5.3987e+00,
            -7.1149e+00, -7.2087e+00],
           [ 6.2272e-02, -5.2239e-01, -1.9760e-01,  ..., -7.5721e+00,
            -7.5080e+00, -8.1927e+00],
           [-1.5900e+00, -4.8235e-01,  1.0990e-01,  ..., -9.1797e+00,
            -8.1629e+00, -8.6066e+00],
           ...,
           [ 9.2983e-01, -4.7469e-01,  2.8421e-01,  ..., -8.6224e+00,
            -8.0371e+00, -9.7550e+00],
           [ 9.7405e-02, -9.5676e-01, -1.6640e-01,  ..., -6.7245e+00,
            -7.3083e+00, -8.6882e+00],
           [-5.9063e-01, -2.7035e-01, -9.7093e-01,  ..., -5.4607e+00,
            -7.5556e+00, -8.2815e+00]],

          [[ 3.4687e-01, -1.0678e-01, -7.1708e-01,  ..., -4.4494e+00,
            -7.1043e+00, -6.7858e+00],
           [ 7.5549e-02, -7.0197e-01, -4.0732e-02,  ..., -6.1310e+00,
            -7.1426e+00, -7.9675e+00],
           [-1.1892e+00, -3.4207e-01,  1.9606e-01,  ..., -9.2578e+00,
            -8.0753e+00, -8.8471e+00],
           ...,
           [ 9.4129e-01, -3.5396e-01,  2.5670e-01,  ..., -6.7358e+00,
            -7.3967e+00, -9.5084e+00],
           [ 3.6042e-02, -4.1513e-01, -5.6670e-02,  ..., -5.3373e+00,
            -6.9238e+00, -8.1015e+00],
           [-2.3517e-01, -2.1164e-01, -8.6310e-01,  ..., -4.2818e+00,
            -7.1697e+00, -7.8775e+00]],

          [[-1.1313e-01,  5.2101e-02, -5.3928e-01,  ..., -4.6733e+00,
            -7.7158e+00, -7.1242e+00],
           [-2.2842e-01,  6.6219e-01, -3.1985e-01,  ..., -5.7865e+00,
            -7.1821e+00, -7.3276e+00],
           [-5.9267e-01,  6.1023e-01, -2.8422e-01,  ..., -7.6644e+00,
            -7.1958e+00, -7.4342e+00],
           ...,
           [ 3.3688e-01,  6.2515e-01, -1.8091e-01,  ..., -6.4964e+00,
            -6.9121e+00, -8.1828e+00],
           [ 3.4012e-02,  2.6400e-01, -3.2872e-01,  ..., -4.9618e+00,
            -6.6888e+00, -7.2250e+00],
           [-2.6490e-01,  1.2724e-02, -8.1862e-01,  ..., -3.9562e+00,
            -6.8633e+00, -7.2934e+00]]]]], device='cuda:0')
prediction_size: torch.Size([1, 3, 26, 26, 85])
x: tensor([[[[0.5435, 0.3755, 0.3262,  ..., 0.5859, 0.5767, 0.5533],
          [0.6435, 0.4054, 0.2033,  ..., 0.6461, 0.7026, 0.4356],
          [0.6450, 0.4871, 0.2708,  ..., 0.6681, 0.6604, 0.5010],
          ...,
          [0.5614, 0.1893, 0.2695,  ..., 0.7646, 0.7611, 0.4209],
          [0.7191, 0.2164, 0.2789,  ..., 0.6092, 0.7745, 0.2453],
          [0.4768, 0.3628, 0.3223,  ..., 0.6199, 0.6791, 0.2886]],

         [[0.4753, 0.5848, 0.5130,  ..., 0.4671, 0.3425, 0.6282],
          [0.5674, 0.6198, 0.5064,  ..., 0.4883, 0.3435, 0.6222],
          [0.6423, 0.6271, 0.4989,  ..., 0.4363, 0.3396, 0.6226],
          ...,
          [0.3858, 0.6609, 0.3609,  ..., 0.5818, 0.2809, 0.5348],
          [0.3838, 0.6283, 0.4259,  ..., 0.5650, 0.3243, 0.5305],
          [0.3826, 0.6803, 0.5340,  ..., 0.4154, 0.2625, 0.5490]],

         [[0.6075, 0.5253, 0.5433,  ..., 0.5597, 0.4799, 0.4824],
          [0.7435, 0.6551, 0.5373,  ..., 0.6002, 0.4998, 0.5196],
          [0.7497, 0.6295, 0.4523,  ..., 0.5589, 0.3984, 0.4668],
          ...,
          [0.6910, 0.5156, 0.1694,  ..., 0.7170, 0.5243, 0.3565],
          [0.5859, 0.5189, 0.2334,  ..., 0.7194, 0.5090, 0.4415],
          [0.4717, 0.4431, 0.3560,  ..., 0.5834, 0.5085, 0.4342]]]],
       device='cuda:0')
x_size: torch.Size([1, 3, 26, 26])
y: tensor([[[[0.6996, 0.6918, 0.6223,  ..., 0.5144, 0.5866, 0.5206],
          [0.5853, 0.6045, 0.7138,  ..., 0.5864, 0.6031, 0.5656],
          [0.5042, 0.5244, 0.5238,  ..., 0.6446, 0.5649, 0.4638],
          ...,
          [0.4954, 0.5091, 0.5651,  ..., 0.5143, 0.5889, 0.4972],
          [0.2891, 0.3771, 0.4153,  ..., 0.4342, 0.4081, 0.3330],
          [0.4268, 0.4266, 0.5180,  ..., 0.5653, 0.4667, 0.4359]],

         [[0.5792, 0.7156, 0.6337,  ..., 0.5634, 0.5565, 0.4098],
          [0.5059, 0.5078, 0.4755,  ..., 0.3544, 0.3985, 0.4138],
          [0.3803, 0.3689, 0.3303,  ..., 0.5629, 0.4390, 0.5058],
          ...,
          [0.6020, 0.7123, 0.6698,  ..., 0.5714, 0.5915, 0.5920],
          [0.5216, 0.5025, 0.5380,  ..., 0.6483, 0.5099, 0.5388],
          [0.5105, 0.2899, 0.3636,  ..., 0.2978, 0.2301, 0.4416]],

         [[0.4292, 0.3840, 0.3424,  ..., 0.3516, 0.3998, 0.4055],
          [0.6203, 0.7066, 0.7169,  ..., 0.6990, 0.6623, 0.5248],
          [0.5730, 0.6546, 0.6136,  ..., 0.6262, 0.5720, 0.4976],
          ...,
          [0.3454, 0.3723, 0.3817,  ..., 0.3835, 0.2775, 0.4328],
          [0.4733, 0.3314, 0.4153,  ..., 0.4124, 0.3977, 0.4473],
          [0.5130, 0.6598, 0.6480,  ..., 0.6514, 0.5656, 0.5032]]]],
       device='cuda:0')
y_size: torch.Size([1, 3, 26, 26])
w: tensor([[[[-0.3281, -0.1792, -0.2921,  ..., -0.1425, -0.0904, -0.7011],
          [-0.2129, -0.0664, -0.0422,  ..., -0.0579,  0.1249, -0.6917],
          [-0.3444, -0.1883, -0.1533,  ..., -0.1288,  0.0430, -0.7970],
          ...,
          [-0.6027,  0.1366,  0.0285,  ...,  0.1774,  0.2964, -0.8020],
          [-0.2185,  0.1044,  0.0988,  ...,  0.1839,  0.2250, -0.4922],
          [-0.4850,  0.0324, -0.1825,  ..., -0.1522, -0.0447, -0.5467]],

         [[ 0.8575,  0.6304,  0.6783,  ...,  0.8344,  0.7062,  1.0662],
          [ 0.0859, -0.1270,  0.1314,  ...,  0.2265, -0.1334,  0.5514],
          [ 0.1473, -0.0859,  0.0778,  ...,  0.1244, -0.0916,  0.5239],
          ...,
          [ 0.2642, -0.2331,  0.1647,  ...,  0.1360, -0.2742,  0.2299],
          [ 0.2579, -0.3131,  0.2005,  ...,  0.1421, -0.2879,  0.2975],
          [ 0.7570,  0.2954,  0.4438,  ...,  0.6331,  0.2878,  0.9005]],

         [[-0.7485, -0.4516, -0.2985,  ..., -0.2047, -0.3591, -0.7325],
          [-0.7059, -0.1863,  0.0475,  ...,  0.1102, -0.1034, -0.7548],
          [-0.8292, -0.3552, -0.0469,  ...,  0.1814, -0.1247, -0.8196],
          ...,
          [-0.8444, -0.1976,  0.1099,  ...,  0.2842, -0.1664, -0.9709],
          [-0.7171, -0.0407,  0.1961,  ...,  0.2567, -0.0567, -0.8631],
          [-0.5393, -0.3199, -0.2842,  ..., -0.1809, -0.3287, -0.8186]]]],
       device='cuda:0')
w_size: torch.Size([1, 3, 26, 26])
h: tensor([[[[ 6.9325e-02, -1.4537e-02,  1.5601e-01,  ..., -2.3252e-01,
           -2.1888e-01,  4.0718e-01],
          [-1.1394e-01, -1.4088e-01, -5.9681e-02,  ..., -1.9547e-01,
           -2.0143e-01,  3.7157e-01],
          [ 1.6524e-01,  1.5316e-01,  1.3572e-01,  ..., -2.0101e-02,
           -5.7958e-03,  6.0105e-01],
          ...,
          [ 2.9084e-01,  1.3318e-01, -8.3440e-02,  ..., -2.5721e-01,
           -1.5005e-01,  5.0122e-01],
          [-9.4697e-02, -2.0895e-01, -2.6324e-01,  ..., -3.3277e-01,
           -4.0750e-01,  1.3314e-01],
          [ 4.1398e-01, -1.3928e-01, -1.2793e-01,  ..., -2.1076e-01,
           -3.0658e-01,  1.9261e-01]],

         [[-7.5880e-01, -6.8408e-01, -6.6282e-01,  ..., -9.5273e-01,
           -9.0798e-01, -8.2097e-01],
          [-2.9628e-01, -2.7987e-02, -6.5938e-03,  ..., -8.3899e-02,
           -1.1803e-01, -3.9963e-01],
          [-2.4775e-01,  6.7533e-02,  9.7405e-02,  ...,  1.1082e-01,
            1.2759e-01, -2.9219e-01],
          ...,
          [-3.8100e-02,  1.8085e-01, -1.7092e-02,  ..., -1.9326e-01,
           -9.2492e-03, -1.1573e-01],
          [-1.0694e-01, -6.9435e-02, -2.6538e-02,  ..., -3.6689e-01,
           -1.4454e-01, -3.2593e-01],
          [-4.2802e-01, -6.5023e-01, -7.7823e-01,  ..., -1.0419e+00,
           -7.1254e-01, -7.5006e-01]],

         [[ 5.9929e-01,  3.7502e-01,  3.7745e-01,  ...,  3.7971e-01,
            4.3097e-01,  7.0809e-01],
          [ 5.2427e-01,  5.9541e-02,  1.8108e-02,  ..., -5.0398e-02,
            1.6697e-01,  7.6368e-01],
          [ 4.4471e-01,  3.5378e-02, -1.0495e-03,  ...,  1.3205e-02,
            2.1758e-01,  7.6466e-01],
          ...,
          [ 3.3736e-01, -1.6543e-01, -8.8019e-02,  ..., -2.7938e-01,
           -1.0794e-01,  6.1863e-01],
          [ 5.0881e-01, -6.4178e-03, -2.0116e-01,  ..., -3.3541e-01,
           -1.8179e-05,  7.0675e-01],
          [ 6.6934e-01,  2.6717e-01,  2.5192e-01,  ...,  5.0423e-02,
            3.8060e-01,  8.6651e-01]]]], device='cuda:0')
h_size: torch.Size([1, 3, 26, 26])
conf: tensor([[[[6.7220e-08, 7.1782e-08, 2.5353e-09,  ..., 7.7213e-10,
           2.5119e-09, 3.2335e-08],
          [6.3883e-06, 3.3223e-06, 1.0300e-07,  ..., 1.9475e-08,
           1.0604e-07, 3.3738e-07],
          [6.1270e-06, 3.7819e-06, 5.7363e-08,  ..., 4.6227e-08,
           3.3917e-07, 5.0634e-07],
          ...,
          [2.6076e-05, 2.2833e-05, 1.1510e-08,  ..., 2.7849e-09,
           2.0090e-06, 1.2308e-05],
          [5.9978e-06, 1.0997e-05, 4.8898e-08,  ..., 5.5140e-09,
           1.5690e-06, 5.8303e-06],
          [1.2905e-07, 1.0179e-07, 6.9082e-09,  ..., 3.7937e-09,
           8.9225e-08, 1.8824e-07]],

         [[1.0128e-07, 2.2384e-07, 9.8222e-07,  ..., 2.0523e-06,
           8.3911e-07, 1.1081e-07],
          [1.0963e-07, 9.6936e-07, 1.1223e-06,  ..., 2.1315e-07,
           2.6005e-07, 1.7576e-08],
          [3.7392e-08, 2.3678e-07, 1.1588e-07,  ..., 1.4596e-07,
           6.3678e-08, 9.5604e-09],
          ...,
          [2.4064e-08, 6.3464e-06, 1.3871e-07,  ..., 5.3470e-07,
           8.1483e-06, 2.9664e-08],
          [1.2268e-07, 1.9899e-05, 3.1141e-06,  ..., 1.6765e-06,
           1.1443e-05, 2.1617e-07],
          [2.9358e-07, 1.6771e-06, 3.3705e-06,  ..., 5.1140e-06,
           3.2022e-06, 4.8632e-07]],

         [[1.3277e-07, 3.9859e-08, 3.9867e-08,  ..., 1.1633e-08,
           2.6481e-08, 9.3634e-08],
          [3.7758e-08, 1.4760e-08, 1.5964e-08,  ..., 3.9339e-09,
           7.1510e-09, 3.4258e-08],
          [1.7359e-07, 3.3203e-07, 1.8349e-07,  ..., 9.0122e-08,
           1.6438e-07, 8.9496e-08],
          ...,
          [1.6820e-07, 1.3722e-05, 5.0062e-07,  ..., 2.3716e-08,
           5.5104e-07, 2.9799e-07],
          [6.8140e-08, 8.7478e-08, 6.5009e-09,  ..., 2.9974e-10,
           4.0282e-08, 2.5986e-07],
          [4.4600e-07, 2.6026e-07, 4.7476e-08,  ..., 4.3750e-09,
           6.2142e-08, 2.2917e-07]]]], device='cuda:0')
conf_size: torch.Size([1, 3, 26, 26])
pred_cls: tensor([[[[[7.6471e-02, 1.1474e-02, 1.4119e-01,  ..., 1.9414e-03,
            4.1810e-03, 1.5336e-03],
           [3.7578e-02, 8.6508e-03, 1.1135e-01,  ..., 1.8708e-03,
            5.4690e-03, 9.3695e-04],
           [8.2906e-02, 1.1944e-02, 7.3967e-02,  ..., 4.8466e-03,
            5.1711e-03, 2.1046e-03],
           ...,
           [2.6072e-01, 3.0704e-03, 1.4099e-02,  ..., 6.6603e-03,
            9.9351e-04, 1.6414e-03],
           [1.9202e-01, 6.2136e-03, 3.5153e-02,  ..., 2.7319e-03,
            1.6146e-03, 1.1736e-03],
           [3.6861e-01, 1.1752e-02, 4.4647e-02,  ..., 2.0180e-03,
            1.5378e-03, 1.3396e-03]],

          [[1.9015e-02, 1.3553e-03, 2.5713e-02,  ..., 6.3904e-04,
            5.1562e-03, 1.2340e-03],
           [1.5009e-02, 6.1202e-04, 1.0187e-02,  ..., 6.4264e-04,
            5.5297e-03, 5.1306e-04],
           [1.7290e-02, 6.7097e-04, 5.9194e-03,  ..., 1.4702e-03,
            2.0392e-03, 5.1656e-04],
           ...,
           [2.1619e-01, 6.7751e-04, 7.3566e-03,  ..., 4.3927e-03,
            2.7480e-03, 3.0173e-03],
           [1.0615e-01, 1.1884e-03, 2.5641e-02,  ..., 1.6185e-03,
            3.9495e-03, 1.3767e-03],
           [4.0771e-01, 5.3476e-03, 3.5298e-02,  ..., 1.7059e-03,
            1.9100e-03, 1.5689e-03]],

          [[3.6478e-02, 1.3931e-03, 1.9803e-02,  ..., 4.2180e-04,
            5.7369e-03, 9.6978e-04],
           [6.8358e-03, 3.1550e-04, 5.9369e-03,  ..., 2.7242e-04,
            2.4404e-03, 2.8304e-04],
           [4.4762e-03, 4.3108e-04, 5.5206e-03,  ..., 5.3625e-04,
            8.1947e-04, 3.4196e-04],
           ...,
           [7.2961e-02, 3.7053e-04, 2.1076e-02,  ..., 1.7791e-03,
            1.3692e-03, 1.9637e-03],
           [8.9538e-02, 3.7965e-04, 4.1188e-02,  ..., 9.4463e-04,
            1.2059e-03, 8.5196e-04],
           [2.7274e-01, 2.1595e-03, 6.0108e-02,  ..., 1.7055e-03,
            9.5105e-04, 1.9536e-03]],

          ...,

          [[3.6931e-01, 6.8616e-03, 9.4902e-02,  ..., 4.1072e-03,
            6.0060e-04, 9.6724e-04],
           [2.5660e-01, 4.2341e-03, 1.7075e-01,  ..., 3.1223e-04,
            6.8781e-04, 3.4647e-04],
           [5.9638e-01, 3.4572e-03, 5.8356e-02,  ..., 1.8978e-04,
            3.1348e-04, 3.6886e-04],
           ...,
           [2.7128e-01, 4.1114e-04, 2.5024e-04,  ..., 1.1824e-04,
            1.9567e-04, 4.5142e-05],
           [1.6413e-01, 1.1297e-03, 1.1779e-02,  ..., 1.3682e-03,
            5.4331e-04, 1.7109e-04],
           [1.9792e-01, 3.4477e-03, 6.6594e-03,  ..., 3.9421e-03,
            6.2475e-04, 3.3889e-04]],

          [[4.2210e-01, 2.6609e-03, 5.0145e-02,  ..., 1.3386e-02,
            4.2995e-04, 1.1908e-03],
           [3.1716e-01, 4.6651e-03, 1.4964e-01,  ..., 1.4203e-03,
            5.1521e-04, 2.6377e-04],
           [7.6744e-01, 6.1104e-03, 4.9124e-02,  ..., 1.8001e-04,
            1.7730e-04, 1.7725e-04],
           ...,
           [4.2703e-01, 1.5668e-03, 1.9014e-03,  ..., 4.5312e-04,
            2.1094e-04, 5.5826e-05],
           [1.8076e-01, 3.0688e-03, 4.3867e-02,  ..., 4.1108e-03,
            5.7520e-04, 3.1777e-04],
           [2.0202e-01, 8.7015e-03, 2.2679e-02,  ..., 8.2457e-03,
            8.0295e-04, 5.0662e-04]],

          [[6.7666e-01, 9.4058e-03, 3.3437e-02,  ..., 2.2379e-02,
            7.5238e-04, 1.0834e-03],
           [4.6275e-01, 1.1367e-02, 8.9546e-02,  ..., 4.9194e-03,
            1.2748e-03, 4.9252e-04],
           [6.5256e-01, 1.3853e-02, 8.2238e-02,  ..., 8.4327e-04,
            1.0374e-03, 8.1232e-04],
           ...,
           [4.7734e-01, 7.9692e-03, 2.6015e-02,  ..., 7.7774e-04,
            9.0170e-04, 1.6636e-04],
           [2.8272e-01, 1.4362e-02, 9.4047e-02,  ..., 7.6897e-03,
            1.7506e-03, 6.4602e-04],
           [2.9785e-01, 2.3785e-02, 4.8340e-02,  ..., 1.6365e-02,
            1.7945e-03, 6.8960e-04]]],


         [[[2.9913e-02, 6.8787e-03, 9.9267e-02,  ..., 1.0013e-03,
            3.7890e-03, 1.0739e-03],
           [2.9273e-02, 6.1739e-03, 6.6347e-02,  ..., 1.1155e-03,
            3.1113e-03, 5.9825e-04],
           [1.9851e-02, 1.0762e-02, 6.3597e-02,  ..., 2.1880e-03,
            1.7845e-03, 6.5281e-04],
           ...,
           [1.4365e-01, 1.6190e-03, 1.2021e-02,  ..., 2.4914e-03,
            3.1562e-04, 4.0710e-04],
           [1.3883e-01, 4.0607e-03, 2.5496e-02,  ..., 9.8156e-04,
            7.1662e-04, 3.9622e-04],
           [2.6915e-01, 1.1836e-02, 7.1012e-02,  ..., 1.1853e-03,
            1.5651e-03, 8.5908e-04]],

          [[1.9747e-02, 1.0638e-03, 1.8198e-02,  ..., 5.3092e-04,
            7.0761e-03, 1.4168e-03],
           [1.7493e-02, 8.2983e-04, 1.8051e-02,  ..., 8.4988e-04,
            4.8812e-03, 5.0805e-04],
           [7.4042e-03, 1.1695e-03, 2.3058e-02,  ..., 1.4536e-03,
            1.2732e-03, 2.2782e-04],
           ...,
           [7.0012e-02, 4.9051e-04, 1.3347e-02,  ..., 3.5329e-03,
            1.6750e-03, 1.4428e-03],
           [6.3612e-02, 9.4927e-04, 2.6091e-02,  ..., 1.1860e-03,
            3.2018e-03, 1.0293e-03],
           [3.3946e-01, 6.9075e-03, 6.0555e-02,  ..., 1.6816e-03,
            2.8540e-03, 1.4760e-03]],

          [[4.0790e-02, 1.1831e-03, 1.6549e-02,  ..., 4.0421e-04,
            8.0600e-03, 1.6912e-03],
           [1.1786e-02, 3.9922e-04, 9.5233e-03,  ..., 4.1011e-04,
            3.1745e-03, 3.5233e-04],
           [3.4191e-03, 6.0946e-04, 1.1984e-02,  ..., 4.6138e-04,
            6.9959e-04, 1.7104e-04],
           ...,
           [1.1102e-02, 1.8107e-04, 2.2215e-02,  ..., 8.3796e-04,
            6.8987e-04, 1.0649e-03],
           [3.2872e-02, 2.7653e-04, 3.1206e-02,  ..., 6.1570e-04,
            9.3572e-04, 8.8930e-04],
           [1.8338e-01, 2.2146e-03, 7.7092e-02,  ..., 1.3931e-03,
            1.2067e-03, 1.6990e-03]],

          ...,

          [[2.0811e-01, 9.0817e-03, 1.2919e-01,  ..., 4.6477e-03,
            2.1281e-03, 1.6651e-03],
           [2.0464e-01, 4.0472e-03, 1.4561e-01,  ..., 3.4556e-04,
            9.8900e-04, 4.6357e-04],
           [4.1863e-01, 2.2979e-03, 1.2464e-01,  ..., 1.4970e-04,
            3.0121e-04, 1.8810e-04],
           ...,
           [4.8040e-02, 5.9135e-04, 5.2319e-04,  ..., 8.0385e-05,
            2.8308e-04, 2.7855e-05],
           [4.4710e-02, 1.0268e-03, 3.7950e-03,  ..., 8.2585e-04,
            6.6178e-04, 1.5995e-04],
           [1.6798e-01, 4.8884e-03, 5.1819e-03,  ..., 4.7118e-03,
            2.3214e-03, 6.5923e-04]],

          [[4.5989e-01, 3.3876e-03, 7.5589e-02,  ..., 1.3173e-02,
            6.9357e-04, 1.0994e-03],
           [4.4460e-01, 4.3464e-03, 9.6315e-02,  ..., 1.4566e-03,
            4.5185e-04, 3.8377e-04],
           [4.9160e-01, 5.6937e-03, 8.6202e-02,  ..., 1.1436e-04,
            1.0007e-04, 8.9329e-05],
           ...,
           [1.3419e-01, 1.3502e-03, 5.0583e-03,  ..., 4.2878e-04,
            1.5659e-04, 4.3280e-05],
           [9.9147e-02, 2.2075e-03, 2.1387e-02,  ..., 3.4705e-03,
            4.9277e-04, 2.7748e-04],
           [1.9529e-01, 8.9196e-03, 3.1657e-02,  ..., 9.4629e-03,
            1.7892e-03, 8.5640e-04]],

          [[2.8554e-01, 1.7369e-02, 1.0314e-01,  ..., 1.3692e-02,
            4.5787e-04, 6.8046e-04],
           [4.7986e-01, 1.2010e-02, 1.5123e-01,  ..., 3.4070e-03,
            6.4646e-04, 6.3262e-04],
           [2.1812e-01, 1.1481e-02, 1.5494e-01,  ..., 4.6250e-04,
            3.4144e-04, 4.1002e-04],
           ...,
           [1.8560e-01, 4.0357e-03, 7.2071e-02,  ..., 3.9196e-04,
            2.3464e-04, 1.1952e-04],
           [1.4660e-01, 7.2617e-03, 7.6896e-02,  ..., 4.2235e-03,
            5.7143e-04, 3.9244e-04],
           [2.0132e-01, 2.3860e-02, 9.9581e-02,  ..., 1.0726e-02,
            1.4324e-03, 8.4592e-04]]],


         [[[1.3130e-01, 8.5827e-03, 7.8332e-02,  ..., 1.3622e-03,
            2.5332e-03, 2.6505e-03],
           [8.4154e-02, 8.6181e-03, 8.1389e-02,  ..., 1.5098e-03,
            2.2642e-03, 1.5257e-03],
           [1.2912e-01, 7.5353e-03, 5.1756e-02,  ..., 2.5334e-03,
            1.8619e-03, 1.7203e-03],
           ...,
           [2.0658e-01, 5.5938e-03, 3.9813e-02,  ..., 2.5545e-03,
            7.3188e-04, 1.3268e-03],
           [3.4695e-01, 8.1073e-03, 3.8509e-02,  ..., 1.0255e-03,
            8.8369e-04, 1.0559e-03],
           [5.4298e-01, 1.0032e-02, 2.5651e-02,  ..., 1.0512e-03,
            8.3736e-04, 1.6533e-03]],

          [[8.1574e-02, 2.5501e-03, 1.9390e-02,  ..., 8.9494e-04,
            4.3203e-03, 4.0461e-03],
           [5.2028e-02, 1.5315e-03, 1.6365e-02,  ..., 1.1358e-03,
            3.1103e-03, 1.8992e-03],
           [3.5638e-02, 1.0288e-03, 1.1940e-02,  ..., 1.7665e-03,
            1.4417e-03, 9.6893e-04],
           ...,
           [5.7667e-02, 2.0963e-03, 3.5025e-02,  ..., 4.2040e-03,
            2.6441e-03, 4.9374e-03],
           [2.2340e-01, 2.3259e-03, 2.8118e-02,  ..., 1.5663e-03,
            2.2748e-03, 2.9360e-03],
           [6.0359e-01, 5.0738e-03, 2.2763e-02,  ..., 1.3123e-03,
            1.2878e-03, 3.7133e-03]],

          [[3.9362e-02, 1.8627e-03, 1.1043e-02,  ..., 4.6135e-04,
            3.9505e-03, 3.2320e-03],
           [1.1426e-02, 6.3875e-04, 7.6685e-03,  ..., 3.7708e-04,
            1.5490e-03, 1.0975e-03],
           [4.7545e-03, 5.7790e-04, 6.2186e-03,  ..., 5.6661e-04,
            7.9403e-04, 8.2155e-04],
           ...,
           [1.7419e-02, 5.2748e-04, 4.2447e-02,  ..., 1.5725e-03,
            1.7007e-03, 4.6980e-03],
           [9.4783e-02, 5.2554e-04, 3.0950e-02,  ..., 1.2223e-03,
            1.0483e-03, 3.0068e-03],
           [4.3224e-01, 2.1930e-03, 3.4594e-02,  ..., 1.6975e-03,
            7.4507e-04, 4.8435e-03]],

          ...,

          [[4.8662e-01, 7.7328e-03, 6.4357e-02,  ..., 4.5021e-03,
            8.1224e-04, 7.3956e-04],
           [2.8638e-01, 3.7105e-03, 1.3766e-01,  ..., 5.1434e-04,
            5.4835e-04, 2.7658e-04],
           [6.3660e-01, 2.0030e-03, 7.9788e-02,  ..., 1.0310e-04,
            2.8495e-04, 1.8286e-04],
           ...,
           [1.0288e-01, 2.2774e-03, 2.1454e-03,  ..., 1.8000e-04,
            3.2315e-04, 5.7999e-05],
           [1.7462e-01, 2.3120e-03, 8.3590e-03,  ..., 1.1997e-03,
            6.6948e-04, 1.6854e-04],
           [4.2651e-01, 1.6914e-03, 3.4899e-03,  ..., 4.2325e-03,
            5.2289e-04, 2.5308e-04]],

          [[3.8246e-01, 4.8731e-03, 5.5232e-02,  ..., 1.1551e-02,
            8.2086e-04, 1.1284e-03],
           [3.8384e-01, 6.0156e-03, 1.4550e-01,  ..., 2.1698e-03,
            7.9006e-04, 3.4642e-04],
           [7.1115e-01, 7.4407e-03, 1.2728e-01,  ..., 9.5356e-05,
            3.1104e-04, 1.4377e-04],
           ...,
           [2.1582e-01, 7.9269e-03, 1.6505e-02,  ..., 1.1862e-03,
            6.1290e-04, 7.4223e-05],
           [2.1144e-01, 5.7350e-03, 3.4782e-02,  ..., 4.7861e-03,
            9.8308e-04, 3.0299e-04],
           [4.9723e-01, 3.8032e-03, 1.1444e-02,  ..., 1.3629e-02,
            7.6898e-04, 3.7903e-04]],

          [[4.4148e-01, 7.3366e-03, 4.8209e-02,  ..., 9.2548e-03,
            4.4554e-04, 8.0472e-04],
           [4.1727e-01, 1.0793e-02, 1.0301e-01,  ..., 3.0593e-03,
            7.5947e-04, 6.5674e-04],
           [5.6206e-01, 1.5865e-02, 1.1304e-01,  ..., 4.6900e-04,
            7.4914e-04, 5.9037e-04],
           ...,
           [6.2720e-01, 1.4727e-02, 5.3624e-02,  ..., 1.5066e-03,
            9.9467e-04, 2.7934e-04],
           [4.2871e-01, 1.4371e-02, 5.8503e-02,  ..., 6.9517e-03,
            1.2432e-03, 7.2760e-04],
           [6.3671e-01, 8.6686e-03, 2.0069e-02,  ..., 1.8776e-02,
            1.0443e-03, 6.7953e-04]]]]], device='cuda:0')
pred_cls_size: torch.Size([1, 3, 26, 26, 80])
grid_x: tensor([[[[ 0.,  1.,  2.,  ..., 23., 24., 25.],
          [ 0.,  1.,  2.,  ..., 23., 24., 25.],
          [ 0.,  1.,  2.,  ..., 23., 24., 25.],
          ...,
          [ 0.,  1.,  2.,  ..., 23., 24., 25.],
          [ 0.,  1.,  2.,  ..., 23., 24., 25.],
          [ 0.,  1.,  2.,  ..., 23., 24., 25.]],

         [[ 0.,  1.,  2.,  ..., 23., 24., 25.],
          [ 0.,  1.,  2.,  ..., 23., 24., 25.],
          [ 0.,  1.,  2.,  ..., 23., 24., 25.],
          ...,
          [ 0.,  1.,  2.,  ..., 23., 24., 25.],
          [ 0.,  1.,  2.,  ..., 23., 24., 25.],
          [ 0.,  1.,  2.,  ..., 23., 24., 25.]],

         [[ 0.,  1.,  2.,  ..., 23., 24., 25.],
          [ 0.,  1.,  2.,  ..., 23., 24., 25.],
          [ 0.,  1.,  2.,  ..., 23., 24., 25.],
          ...,
          [ 0.,  1.,  2.,  ..., 23., 24., 25.],
          [ 0.,  1.,  2.,  ..., 23., 24., 25.],
          [ 0.,  1.,  2.,  ..., 23., 24., 25.]]]], device='cuda:0')
grid_x_size: torch.Size([1, 3, 26, 26])
grid_y: tensor([[[[ 0.,  0.,  0.,  ...,  0.,  0.,  0.],
          [ 1.,  1.,  1.,  ...,  1.,  1.,  1.],
          [ 2.,  2.,  2.,  ...,  2.,  2.,  2.],
          ...,
          [23., 23., 23.,  ..., 23., 23., 23.],
          [24., 24., 24.,  ..., 24., 24., 24.],
          [25., 25., 25.,  ..., 25., 25., 25.]],

         [[ 0.,  0.,  0.,  ...,  0.,  0.,  0.],
          [ 1.,  1.,  1.,  ...,  1.,  1.,  1.],
          [ 2.,  2.,  2.,  ...,  2.,  2.,  2.],
          ...,
          [23., 23., 23.,  ..., 23., 23., 23.],
          [24., 24., 24.,  ..., 24., 24., 24.],
          [25., 25., 25.,  ..., 25., 25., 25.]],

         [[ 0.,  0.,  0.,  ...,  0.,  0.,  0.],
          [ 1.,  1.,  1.,  ...,  1.,  1.,  1.],
          [ 2.,  2.,  2.,  ...,  2.,  2.,  2.],
          ...,
          [23., 23., 23.,  ..., 23., 23., 23.],
          [24., 24., 24.,  ..., 24., 24., 24.],
          [25., 25., 25.,  ..., 25., 25., 25.]]]], device='cuda:0')
grid_y_size: torch.Size([1, 3, 26, 26])
anchor_w: tensor([[[[1.8750, 1.8750, 1.8750,  ..., 1.8750, 1.8750, 1.8750],
          [1.8750, 1.8750, 1.8750,  ..., 1.8750, 1.8750, 1.8750],
          [1.8750, 1.8750, 1.8750,  ..., 1.8750, 1.8750, 1.8750],
          ...,
          [1.8750, 1.8750, 1.8750,  ..., 1.8750, 1.8750, 1.8750],
          [1.8750, 1.8750, 1.8750,  ..., 1.8750, 1.8750, 1.8750],
          [1.8750, 1.8750, 1.8750,  ..., 1.8750, 1.8750, 1.8750]],

         [[3.8750, 3.8750, 3.8750,  ..., 3.8750, 3.8750, 3.8750],
          [3.8750, 3.8750, 3.8750,  ..., 3.8750, 3.8750, 3.8750],
          [3.8750, 3.8750, 3.8750,  ..., 3.8750, 3.8750, 3.8750],
          ...,
          [3.8750, 3.8750, 3.8750,  ..., 3.8750, 3.8750, 3.8750],
          [3.8750, 3.8750, 3.8750,  ..., 3.8750, 3.8750, 3.8750],
          [3.8750, 3.8750, 3.8750,  ..., 3.8750, 3.8750, 3.8750]],

         [[3.6875, 3.6875, 3.6875,  ..., 3.6875, 3.6875, 3.6875],
          [3.6875, 3.6875, 3.6875,  ..., 3.6875, 3.6875, 3.6875],
          [3.6875, 3.6875, 3.6875,  ..., 3.6875, 3.6875, 3.6875],
          ...,
          [3.6875, 3.6875, 3.6875,  ..., 3.6875, 3.6875, 3.6875],
          [3.6875, 3.6875, 3.6875,  ..., 3.6875, 3.6875, 3.6875],
          [3.6875, 3.6875, 3.6875,  ..., 3.6875, 3.6875, 3.6875]]]],
       device='cuda:0')
anchor_h: tensor([[[[3.8125, 3.8125, 3.8125,  ..., 3.8125, 3.8125, 3.8125],
          [3.8125, 3.8125, 3.8125,  ..., 3.8125, 3.8125, 3.8125],
          [3.8125, 3.8125, 3.8125,  ..., 3.8125, 3.8125, 3.8125],
          ...,
          [3.8125, 3.8125, 3.8125,  ..., 3.8125, 3.8125, 3.8125],
          [3.8125, 3.8125, 3.8125,  ..., 3.8125, 3.8125, 3.8125],
          [3.8125, 3.8125, 3.8125,  ..., 3.8125, 3.8125, 3.8125]],

         [[2.8125, 2.8125, 2.8125,  ..., 2.8125, 2.8125, 2.8125],
          [2.8125, 2.8125, 2.8125,  ..., 2.8125, 2.8125, 2.8125],
          [2.8125, 2.8125, 2.8125,  ..., 2.8125, 2.8125, 2.8125],
          ...,
          [2.8125, 2.8125, 2.8125,  ..., 2.8125, 2.8125, 2.8125],
          [2.8125, 2.8125, 2.8125,  ..., 2.8125, 2.8125, 2.8125],
          [2.8125, 2.8125, 2.8125,  ..., 2.8125, 2.8125, 2.8125]],

         [[7.4375, 7.4375, 7.4375,  ..., 7.4375, 7.4375, 7.4375],
          [7.4375, 7.4375, 7.4375,  ..., 7.4375, 7.4375, 7.4375],
          [7.4375, 7.4375, 7.4375,  ..., 7.4375, 7.4375, 7.4375],
          ...,
          [7.4375, 7.4375, 7.4375,  ..., 7.4375, 7.4375, 7.4375],
          [7.4375, 7.4375, 7.4375,  ..., 7.4375, 7.4375, 7.4375],
          [7.4375, 7.4375, 7.4375,  ..., 7.4375, 7.4375, 7.4375]]]],
       device='cuda:0')
pred_boxes: tensor([[[[[0.0000e+00, 2.2266e+00, 0.0000e+00, 2.2266e+00],
           [0.0000e+00, 2.2266e+00, 0.0000e+00, 2.2266e+00],
           [0.0000e+00, 2.2266e+00, 0.0000e+00, 2.2266e+00],
           ...,
           [0.0000e+00, 2.1016e+00, 0.0000e+00, 2.1016e+00],
           [0.0000e+00, 2.1016e+00, 0.0000e+00, 2.1016e+00],
           [0.0000e+00, 2.1016e+00, 0.0000e+00, 2.1016e+00]],

          [[0.0000e+00, 2.1016e+00, 0.0000e+00, 2.1016e+00],
           [0.0000e+00, 2.1016e+00, 0.0000e+00, 2.1016e+00],
           [0.0000e+00, 2.1016e+00, 0.0000e+00, 2.1016e+00],
           ...,
           [0.0000e+00, 2.4648e+00, 0.0000e+00, 2.4648e+00],
           [0.0000e+00, 2.4648e+00, 0.0000e+00, 2.4648e+00],
           [0.0000e+00, 2.4648e+00, 0.0000e+00, 2.4648e+00]],

          [[0.0000e+00, 2.4648e+00, 0.0000e+00, 2.4648e+00],
           [0.0000e+00, 2.4648e+00, 0.0000e+00, 2.4648e+00],
           [3.0268e-43, 3.0408e-43, 3.0548e-43, 3.0688e-43],
           ...,
           [0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00],
           [0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00],
           [0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]],

          ...,

          [[3.3519e-42, 3.3533e-42, 3.3547e-42, 3.3561e-42],
           [3.3575e-42, 3.3589e-42, 3.3603e-42, 3.3617e-42],
           [3.3631e-42, 3.3645e-42, 3.3659e-42, 3.3673e-42],
           ...,
           [3.4808e-42, 3.4822e-42, 3.4836e-42, 3.4850e-42],
           [3.4864e-42, 3.4878e-42, 3.4892e-42, 3.4906e-42],
           [3.4920e-42, 3.4934e-42, 3.4948e-42, 3.4962e-42]],

          [[3.4976e-42, 3.4990e-42, 3.5004e-42, 3.5018e-42],
           [3.5032e-42, 3.5046e-42, 3.5060e-42, 3.5075e-42],
           [3.5089e-42, 3.5103e-42, 3.5117e-42, 3.5131e-42],
           ...,
           [3.6266e-42, 3.6280e-42, 3.6294e-42, 3.6308e-42],
           [3.6322e-42, 3.6336e-42, 3.6350e-42, 3.6364e-42],
           [3.6378e-42, 3.6392e-42, 3.6406e-42, 3.6420e-42]],

          [[3.6434e-42, 3.6448e-42, 3.6462e-42, 3.6476e-42],
           [3.6490e-42, 3.6504e-42, 3.6518e-42, 3.6532e-42],
           [3.6546e-42, 3.6560e-42, 3.6574e-42, 3.6588e-42],
           ...,
           [3.7723e-42, 3.7737e-42, 3.7751e-42, 3.7765e-42],
           [3.7779e-42, 3.7793e-42, 3.7807e-42, 3.7821e-42],
           [3.7835e-42, 3.7849e-42, 3.7863e-42, 3.7877e-42]]],


         [[[3.7891e-42, 3.7905e-42, 3.7919e-42, 3.7933e-42],
           [3.7947e-42, 3.7961e-42, 3.7975e-42, 3.7989e-42],
           [3.8003e-42, 3.8017e-42, 3.8031e-42, 3.8045e-42],
           ...,
           [3.9180e-42, 3.9194e-42, 3.9208e-42, 3.9222e-42],
           [3.9236e-42, 3.9250e-42, 3.9264e-42, 3.9278e-42],
           [3.9292e-42, 3.9306e-42, 3.9320e-42, 3.9334e-42]],

          [[3.9348e-42, 3.9362e-42, 3.9376e-42, 3.9390e-42],
           [3.9405e-42, 3.9419e-42, 3.9433e-42, 3.9447e-42],
           [3.9461e-42, 3.9475e-42, 3.9489e-42, 3.9503e-42],
           ...,
           [4.0638e-42, 4.0652e-42, 4.0666e-42, 4.0680e-42],
           [4.0694e-42, 4.0708e-42, 4.0722e-42, 4.0736e-42],
           [4.0750e-42, 4.0764e-42, 4.0778e-42, 4.0792e-42]],

          [[4.0806e-42, 4.0820e-42, 4.0834e-42, 4.0848e-42],
           [4.0862e-42, 4.0876e-42, 4.0890e-42, 4.0904e-42],
           [4.0918e-42, 4.0932e-42, 4.0946e-42, 4.0960e-42],
           ...,
           [4.2095e-42, 4.2109e-42, 4.2123e-42, 4.2137e-42],
           [4.2151e-42, 4.2165e-42, 4.2179e-42, 4.2193e-42],
           [4.2207e-42, 4.2221e-42, 4.2235e-42, 4.2249e-42]],

          ...,

          [[7.1410e-42, 7.1424e-42, 7.1438e-42, 7.1452e-42],
           [7.1466e-42, 7.1480e-42, 7.1494e-42, 7.1508e-42],
           [7.1522e-42, 7.1536e-42, 7.1550e-42, 7.1564e-42],
           ...,
           [7.2699e-42, 7.2713e-42, 7.2727e-42, 7.2741e-42],
           [7.2755e-42, 7.2769e-42, 7.2783e-42, 7.2797e-42],
           [7.2811e-42, 7.2825e-42, 7.2839e-42, 7.2854e-42]],

          [[7.2868e-42, 7.2882e-42, 7.2896e-42, 7.2910e-42],
           [7.2924e-42, 7.2938e-42, 7.2952e-42, 7.2966e-42],
           [7.2980e-42, 7.2994e-42, 7.3008e-42, 7.3022e-42],
           ...,
           [7.4157e-42, 7.4171e-42, 7.4185e-42, 7.4199e-42],
           [7.4213e-42, 7.4227e-42, 7.4241e-42, 7.4255e-42],
           [7.4269e-42, 7.4283e-42, 7.4297e-42, 7.4311e-42]],

          [[7.4325e-42, 7.4339e-42, 7.4353e-42, 7.4367e-42],
           [7.4381e-42, 7.4395e-42, 7.4409e-42, 7.4423e-42],
           [7.4437e-42, 7.4451e-42, 7.4465e-42, 7.4479e-42],
           ...,
           [7.5614e-42, 7.5628e-42, 7.5642e-42, 7.5656e-42],
           [7.5670e-42, 7.5684e-42, 7.5698e-42, 7.5712e-42],
           [7.5726e-42, 7.5740e-42, 7.5754e-42, 7.5768e-42]]],


         [[[7.5782e-42, 7.5796e-42, 7.5810e-42, 7.5824e-42],
           [7.5838e-42, 7.5852e-42, 7.5866e-42, 7.5880e-42],
           [7.5894e-42, 7.5908e-42, 7.5922e-42, 7.5936e-42],
           ...,
           [7.7071e-42, 7.7085e-42, 7.7099e-42, 7.7113e-42],
           [7.7127e-42, 7.7141e-42, 7.7155e-42, 7.7170e-42],
           [7.7184e-42, 7.7198e-42, 7.7212e-42, 7.7226e-42]],

          [[7.7240e-42, 7.7254e-42, 7.7268e-42, 7.7282e-42],
           [7.7296e-42, 7.7310e-42, 7.7324e-42, 7.7338e-42],
           [7.7352e-42, 7.7366e-42, 7.7380e-42, 7.7394e-42],
           ...,
           [7.8529e-42, 7.8543e-42, 7.8557e-42, 7.8571e-42],
           [7.8585e-42, 7.8599e-42, 7.8613e-42, 7.8627e-42],
           [7.8641e-42, 7.8655e-42, 7.8669e-42, 7.8683e-42]],

          [[7.8697e-42, 7.8711e-42, 7.8725e-42, 7.8739e-42],
           [7.8753e-42, 7.8767e-42, 7.8781e-42, 7.8795e-42],
           [7.8809e-42, 7.8823e-42, 7.8837e-42, 7.8851e-42],
           ...,
           [7.9986e-42, 8.0000e-42, 8.0014e-42, 8.0028e-42],
           [8.0042e-42, 8.0056e-42, 8.0070e-42, 8.0084e-42],
           [8.0098e-42, 8.0112e-42, 8.0126e-42, 8.0140e-42]],

          ...,

          [[1.0930e-41, 1.0932e-41, 1.0933e-41, 1.0934e-41],
           [1.0936e-41, 1.0937e-41, 1.0939e-41, 1.0940e-41],
           [1.0941e-41, 1.0943e-41, 1.0944e-41, 1.0946e-41],
           ...,
           [1.1059e-41, 1.1060e-41, 1.1062e-41, 1.1063e-41],
           [1.1065e-41, 1.1066e-41, 1.1067e-41, 1.1069e-41],
           [1.1070e-41, 1.1072e-41, 1.1073e-41, 1.1074e-41]],

          [[1.1076e-41, 1.1077e-41, 1.1079e-41, 1.1080e-41],
           [1.1081e-41, 1.1083e-41, 1.1084e-41, 1.1086e-41],
           [1.1087e-41, 1.1088e-41, 1.1090e-41, 1.1091e-41],
           ...,
           [1.1205e-41, 1.1206e-41, 1.1208e-41, 1.1209e-41],
           [1.1210e-41, 1.1212e-41, 1.1213e-41, 1.1215e-41],
           [1.1216e-41, 1.1217e-41, 1.1219e-41, 1.1220e-41]],

          [[1.1222e-41, 1.1223e-41, 1.1224e-41, 1.1226e-41],
           [1.1227e-41, 1.1229e-41, 1.1230e-41, 1.1231e-41],
           [1.1233e-41, 1.1234e-41, 1.1236e-41, 1.1237e-41],
           ...,
           [1.1351e-41, 1.1352e-41, 1.1353e-41, 1.1355e-41],
           [1.1356e-41, 1.1358e-41, 1.1359e-41, 1.1360e-41],
           [1.1362e-41, 1.1363e-41, 1.1365e-41, 1.1366e-41]]]]],
       device='cuda:0')
pred_boxes: tensor([[[[[ 0.5435,  0.6996,  1.3506,  4.0862],
           [ 1.3755,  0.6918,  1.5673,  3.7575],
           [ 2.3262,  0.6223,  1.4000,  4.4562],
           ...,
           [23.5859,  0.5144,  1.6260,  3.0215],
           [24.5767,  0.5866,  1.7130,  3.0630],
           [25.5533,  0.5206,  0.9300,  5.7286]],

          [[ 0.6435,  1.5853,  1.5154,  3.4019],
           [ 1.4054,  1.6045,  1.7546,  3.3115],
           [ 2.2033,  1.7138,  1.7976,  3.5916],
           ...,
           [23.6461,  1.5864,  1.7695,  3.1356],
           [24.7026,  1.6031,  2.1245,  3.1169],
           [25.4356,  1.5656,  0.9388,  5.5282]],

          [[ 0.6450,  2.5042,  1.3287,  4.4975],
           [ 1.4871,  2.5244,  1.5532,  4.4435],
           [ 2.2708,  2.5238,  1.6084,  4.3667],
           ...,
           [23.6681,  2.6446,  1.6484,  3.7366],
           [24.6604,  2.5649,  1.9574,  3.7905],
           [25.5010,  2.4638,  0.8450,  6.9542]],

          ...,

          [[ 0.5614, 23.4954,  1.0263,  5.0994],
           [ 1.1893, 23.5091,  2.1494,  4.3556],
           [ 2.2695, 23.5651,  1.9293,  3.5073],
           ...,
           [23.7646, 23.5143,  2.2390,  2.9478],
           [24.7611, 23.5889,  2.5218,  3.2813],
           [25.4209, 23.4972,  0.8408,  6.2934]],

          [[ 0.7191, 24.2891,  1.5069,  3.4680],
           [ 1.2164, 24.3771,  2.0813,  3.0936],
           [ 2.2789, 24.4153,  2.0697,  2.9301],
           ...,
           [23.6092, 24.4342,  2.2536,  2.7333],
           [24.7745, 24.4081,  2.3481,  2.5365],
           [25.2453, 24.3330,  1.1461,  4.3554]],

          [[ 0.4768, 25.4268,  1.1544,  5.7677],
           [ 1.3628, 25.4266,  1.9368,  3.3168],
           [ 2.3223, 25.5180,  1.5622,  3.3547],
           ...,
           [23.6199, 25.5653,  1.6103,  3.0880],
           [24.6791, 25.4667,  1.7930,  2.8058],
           [25.2886, 25.4359,  1.0854,  4.6223]]],


         [[[ 0.4753,  0.5792,  9.1347,  1.3169],
           [ 1.5848,  0.7156,  7.2783,  1.4191],
           [ 2.5130,  0.6337,  7.6360,  1.4496],
           ...,
           [23.4671,  0.5634,  8.9257,  1.0847],
           [24.3425,  0.5565,  7.8518,  1.1344],
           [25.6282,  0.4098, 11.2543,  1.2375]],

          [[ 0.5674,  1.5059,  4.2227,  2.0913],
           [ 1.6198,  1.5078,  3.4129,  2.7349],
           [ 2.5064,  1.4755,  4.4191,  2.7940],
           ...,
           [23.4883,  1.3544,  4.8602,  2.5862],
           [24.3435,  1.3985,  3.3911,  2.4994],
           [25.6222,  1.4138,  6.7259,  1.8860]],

          [[ 0.6423,  2.3803,  4.4902,  2.1953],
           [ 1.6271,  2.3689,  3.5560,  3.0090],
           [ 2.4989,  2.3303,  4.1886,  3.1002],
           ...,
           [23.4363,  2.5629,  4.3883,  3.1421],
           [24.3396,  2.4390,  3.5359,  3.1952],
           [25.6226,  2.5058,  6.5433,  2.0999]],

          ...,

          [[ 0.3858, 23.6020,  5.0466,  2.7074],
           [ 1.6609, 23.7123,  3.0693,  3.3700],
           [ 2.3609, 23.6698,  4.5686,  2.7648],
           ...,
           [23.5818, 23.5714,  4.4397,  2.3183],
           [24.2809, 23.5915,  2.9458,  2.7866],
           [25.5348, 23.5920,  4.8764,  2.5051]],

          [[ 0.3838, 24.5216,  5.0152,  2.5273],
           [ 1.6283, 24.5025,  2.8333,  2.6238],
           [ 2.4259, 24.5380,  4.7354,  2.7388],
           ...,
           [23.5650, 24.6483,  4.4669,  1.9487],
           [24.3243, 24.5099,  2.9056,  2.4340],
           [25.5305, 24.5388,  5.2175,  2.0302]],

          [[ 0.3826, 25.5105,  8.2608,  1.8332],
           [ 1.6803, 25.2899,  5.2068,  1.4679],
           [ 2.5340, 25.3636,  6.0398,  1.2916],
           ...,
           [23.4154, 25.2978,  7.2987,  0.9922],
           [24.2625, 25.2301,  5.1672,  1.3792],
           [25.5490, 25.4416,  9.5359,  1.3284]]],


         [[[ 0.6075,  0.4292,  1.7445, 13.5424],
           [ 1.5253,  0.3840,  2.3476, 10.8218],
           [ 2.5433,  0.3424,  2.7357, 10.8481],
           ...,
           [23.5597,  0.3516,  3.0050, 10.8726],
           [24.4799,  0.3998,  2.5751, 11.4444],
           [25.4824,  0.4055,  1.7727, 15.0990]],

          [[ 0.7435,  1.6203,  1.8204, 12.5636],
           [ 1.6551,  1.7066,  3.0608,  7.8938],
           [ 2.5373,  1.7169,  3.8671,  7.5734],
           ...,
           [23.6002,  1.6990,  4.1170,  7.0720],
           [24.4998,  1.6623,  3.3253,  8.7891],
           [25.5196,  1.5248,  1.7336, 15.9621]],

          [[ 0.7497,  2.5730,  1.6091, 11.6028],
           [ 1.6295,  2.6546,  2.5850,  7.7053],
           [ 2.4523,  2.6136,  3.5186,  7.4297],
           ...,
           [23.5589,  2.6262,  4.4210,  7.5364],
           [24.3984,  2.5720,  3.2552,  9.2453],
           [25.4668,  2.4976,  1.6248, 15.9777]],

          ...,

          [[ 0.6910, 23.3454,  1.5849, 10.4217],
           [ 1.5156, 23.3723,  3.0263,  6.3035],
           [ 2.1694, 23.3817,  4.1158,  6.8108],
           ...,
           [23.7170, 23.3835,  4.8996,  5.6246],
           [24.5243, 23.2775,  3.1222,  6.6765],
           [25.3565, 23.4328,  1.3966, 13.8069]],

          [[ 0.5859, 24.4733,  1.8002, 12.3709],
           [ 1.5189, 24.3314,  3.5403,  7.3899],
           [ 2.2334, 24.4153,  4.4862,  6.0823],
           ...,
           [23.7194, 24.4124,  4.7667,  5.3181],
           [24.5090, 24.3977,  3.4843,  7.4374],
           [25.4415, 24.4473,  1.5556, 15.0788]],

          [[ 0.4717, 25.5130,  2.1504, 14.5251],
           [ 1.4431, 25.6598,  2.6781,  9.7153],
           [ 2.3560, 25.6480,  2.7752,  9.5683],
           ...,
           [23.5834, 25.6514,  3.0773,  7.8221],
           [24.5085, 25.5656,  2.6544, 10.8823],
           [25.4342, 25.5032,  1.6263, 17.6908]]]]], device='cuda:0')
pred_boxes_size: torch.Size([1, 3, 26, 26, 4])
pred_boxes.view(batch_size, -1, 4): tensor([[[ 0.5435,  0.6996,  1.3506,  4.0862],
         [ 1.3755,  0.6918,  1.5673,  3.7575],
         [ 2.3262,  0.6223,  1.4000,  4.4562],
         ...,
         [23.5834, 25.6514,  3.0773,  7.8221],
         [24.5085, 25.5656,  2.6544, 10.8823],
         [25.4342, 25.5032,  1.6263, 17.6908]]], device='cuda:0')
up_size: torch.Size([1, 2028, 4])
conf.view(batch_size, -1, 1): tensor([[[6.7220e-08],
         [7.1782e-08],
         [2.5353e-09],
         ...,
         [4.3750e-09],
         [6.2142e-08],
         [2.2917e-07]]], device='cuda:0')
up_size: torch.Size([1, 2028, 1])
pred_cls.view(batch_size, -1, self.num_classes): tensor([[[7.6471e-02, 1.1474e-02, 1.4119e-01,  ..., 1.9414e-03,
          4.1810e-03, 1.5336e-03],
         [3.7578e-02, 8.6508e-03, 1.1135e-01,  ..., 1.8708e-03,
          5.4690e-03, 9.3695e-04],
         [8.2906e-02, 1.1944e-02, 7.3967e-02,  ..., 4.8466e-03,
          5.1711e-03, 2.1046e-03],
         ...,
         [6.2720e-01, 1.4727e-02, 5.3624e-02,  ..., 1.5066e-03,
          9.9467e-04, 2.7934e-04],
         [4.2871e-01, 1.4371e-02, 5.8503e-02,  ..., 6.9517e-03,
          1.2432e-03, 7.2760e-04],
         [6.3671e-01, 8.6686e-03, 2.0069e-02,  ..., 1.8776e-02,
          1.0443e-03, 6.7953e-04]]], device='cuda:0')
up_size: torch.Size([1, 2028, 80])
output: tensor([[[8.6965e+00, 1.1194e+01, 2.1610e+01,  ..., 1.9414e-03,
          4.1810e-03, 1.5336e-03],
         [2.2008e+01, 1.1068e+01, 2.5077e+01,  ..., 1.8708e-03,
          5.4690e-03, 9.3695e-04],
         [3.7219e+01, 9.9564e+00, 2.2400e+01,  ..., 4.8466e-03,
          5.1711e-03, 2.1046e-03],
         ...,
         [3.7733e+02, 4.1042e+02, 4.9236e+01,  ..., 1.5066e-03,
          9.9467e-04, 2.7934e-04],
         [3.9214e+02, 4.0905e+02, 4.2471e+01,  ..., 6.9517e-03,
          1.2432e-03, 7.2760e-04],
         [4.0695e+02, 4.0805e+02, 2.6021e+01,  ..., 1.8776e-02,
          1.0443e-03, 6.7953e-04]]], device='cuda:0')
up_size: torch.Size([1, 2028, 85])
input: tensor([[[[ 1.8275e-02, -1.2279e-01,  4.0532e-01,  ..., -2.7918e-02,
           -2.7237e-01,  9.8608e-01],
          [-5.0516e-01, -6.6735e-02,  2.4294e-01,  ..., -8.5104e-02,
           -1.1794e-01,  1.9468e+00],
          [-4.2893e-01, -2.1846e-01,  4.3079e-02,  ...,  1.6267e-01,
           -5.3496e-01,  2.0588e+00],
          ...,
          [-4.9065e-01, -1.0052e+00, -1.6964e-01,  ...,  4.6447e-01,
            3.3795e-01,  1.6263e+00],
          [-7.0134e-02, -8.3368e-01, -4.3153e-03,  ...,  2.7901e-01,
            1.0247e-01,  8.9559e-01],
          [ 4.9697e-01, -4.5370e-01,  1.0696e-01,  ...,  8.6112e-02,
            2.1561e-01, -3.3207e-01]],

         [[-8.7506e-01, -6.5591e-01,  1.1695e-01,  ..., -1.4886e+00,
           -1.5644e+00, -6.8006e-01],
          [-1.2419e-01,  1.0832e-01, -3.9503e-01,  ..., -3.2129e-01,
           -8.2920e-02, -4.3073e-01],
          [ 7.4726e-02, -2.9672e-01, -4.5211e-01,  ...,  2.6186e-01,
            3.4755e-01,  5.0577e-02],
          ...,
          [-2.4060e-03,  8.1871e-02,  5.2332e-01,  ...,  5.9040e-01,
            3.3677e-01,  1.4037e-01],
          [-1.4356e-01,  7.0871e-01,  6.8193e-01,  ...,  6.2053e-01,
            5.0239e-01, -8.6428e-02],
          [ 1.8021e-01,  5.3312e-01,  9.7686e-01,  ...,  1.5209e+00,
            6.8010e-01,  3.3287e-01]],

         [[-7.5408e-01,  2.8089e-01, -1.5594e-01,  ...,  9.0693e-01,
            8.9289e-01, -9.0721e-01],
          [-1.0582e+00, -6.5117e-01, -3.2702e-01,  ..., -4.0497e-01,
           -1.2877e-01, -1.8518e+00],
          [-1.1189e+00, -3.0122e-01, -5.6255e-01,  ..., -7.1694e-01,
           -3.5672e-01, -2.3133e+00],
          ...,
          [-1.2086e+00,  1.4792e-01, -9.8050e-02,  ...,  3.9883e-01,
            1.0263e-01, -1.8763e+00],
          [-8.5657e-01,  2.0378e-01, -2.0814e-02,  ..., -3.1722e-01,
           -2.0266e-01, -1.3130e+00],
          [-1.7489e-01,  9.2349e-01,  1.2425e+00,  ...,  1.0254e+00,
            6.7748e-01, -5.0320e-01]],

         ...,

         [[-4.6913e+00, -5.2362e+00, -4.7203e+00,  ..., -6.1895e+00,
           -6.4068e+00, -5.4626e+00],
          [-6.4058e+00, -7.0950e+00, -6.6477e+00,  ..., -6.7633e+00,
           -6.8296e+00, -6.0529e+00],
          [-7.1143e+00, -8.1983e+00, -8.2271e+00,  ..., -6.9133e+00,
           -6.3105e+00, -5.8911e+00],
          ...,
          [-6.2385e+00, -7.4166e+00, -7.1834e+00,  ..., -1.0723e+01,
           -9.8048e+00, -7.7755e+00],
          [-5.9360e+00, -7.2487e+00, -7.5312e+00,  ..., -9.9567e+00,
           -9.2681e+00, -8.2588e+00],
          [-5.1675e+00, -6.0167e+00, -6.5800e+00,  ..., -7.8492e+00,
           -7.4922e+00, -6.4911e+00]],

         [[-4.3171e+00, -4.6803e+00, -4.1339e+00,  ..., -6.6822e+00,
           -6.3444e+00, -5.2358e+00],
          [-4.3076e+00, -4.9531e+00, -4.9521e+00,  ..., -7.1251e+00,
           -6.7024e+00, -5.5864e+00],
          [-4.3986e+00, -5.3857e+00, -5.5872e+00,  ..., -7.2584e+00,
           -6.3028e+00, -5.6514e+00],
          ...,
          [-4.2479e+00, -5.9406e+00, -7.5714e+00,  ..., -9.6763e+00,
           -7.1613e+00, -5.2810e+00],
          [-4.2528e+00, -5.4051e+00, -6.7962e+00,  ..., -9.0518e+00,
           -7.0886e+00, -5.8590e+00],
          [-4.5045e+00, -5.2381e+00, -6.2031e+00,  ..., -7.9092e+00,
           -6.2841e+00, -5.1543e+00]],

         [[-4.9294e+00, -5.6940e+00, -5.7405e+00,  ..., -6.9393e+00,
           -6.7251e+00, -5.9426e+00],
          [-5.8259e+00, -6.8969e+00, -7.1109e+00,  ..., -7.5739e+00,
           -7.0890e+00, -6.0325e+00],
          [-6.2072e+00, -7.3811e+00, -7.4264e+00,  ..., -7.3384e+00,
           -6.6616e+00, -6.0924e+00],
          ...,
          [-5.1893e+00, -7.4205e+00, -9.8441e+00,  ..., -1.1496e+01,
           -8.2798e+00, -6.4103e+00],
          [-4.4650e+00, -5.6257e+00, -7.4339e+00,  ..., -1.0819e+01,
           -8.2170e+00, -6.6846e+00],
          [-3.9793e+00, -4.8924e+00, -6.0924e+00,  ..., -8.3123e+00,
           -6.2193e+00, -5.0261e+00]]]], device='cuda:0')
input_size: torch.Size([1, 255, 52, 52])
scaled_anchors: [(1.25, 1.625), (2.0, 3.75), (4.125, 2.875)]
prediction: tensor([[[[[ 1.8275e-02, -8.7506e-01, -7.5408e-01,  ..., -5.2933e+00,
            -5.3596e+00, -5.7325e+00],
           [-1.2279e-01, -6.5591e-01,  2.8089e-01,  ..., -5.8866e+00,
            -5.3160e+00, -6.5649e+00],
           [ 4.0532e-01,  1.1695e-01, -1.5594e-01,  ..., -6.1693e+00,
            -5.3557e+00, -6.8563e+00],
           ...,
           [-2.7918e-02, -1.4886e+00,  9.0693e-01,  ..., -6.4445e+00,
            -7.6316e+00, -8.1638e+00],
           [-2.7237e-01, -1.5644e+00,  8.9289e-01,  ..., -6.9287e+00,
            -7.4966e+00, -8.3299e+00],
           [ 9.8608e-01, -6.8006e-01, -9.0721e-01,  ..., -6.0440e+00,
            -6.9887e+00, -7.4506e+00]],

          [[-5.0516e-01, -1.2419e-01, -1.0582e+00,  ..., -6.7497e+00,
            -5.0896e+00, -7.2107e+00],
           [-6.6735e-02,  1.0832e-01, -6.5117e-01,  ..., -7.6065e+00,
            -5.8550e+00, -7.7099e+00],
           [ 2.4294e-01, -3.9503e-01, -3.2702e-01,  ..., -8.4263e+00,
            -6.7544e+00, -9.1774e+00],
           ...,
           [-8.5104e-02, -3.2129e-01, -4.0497e-01,  ..., -6.9708e+00,
            -8.1605e+00, -8.4603e+00],
           [-1.1794e-01, -8.2920e-02, -1.2877e-01,  ..., -7.0475e+00,
            -7.8270e+00, -8.7330e+00],
           [ 1.9468e+00, -4.3073e-01, -1.8518e+00,  ..., -6.8156e+00,
            -7.3710e+00, -8.0762e+00]],

          [[-4.2893e-01,  7.4726e-02, -1.1189e+00,  ..., -7.6355e+00,
            -5.6390e+00, -7.9462e+00],
           [-2.1846e-01, -2.9672e-01, -3.0122e-01,  ..., -9.1805e+00,
            -6.8540e+00, -9.1843e+00],
           [ 4.3079e-02, -4.5211e-01, -5.6255e-01,  ..., -1.0620e+01,
            -8.1630e+00, -1.0003e+01],
           ...,
           [ 1.6267e-01,  2.6186e-01, -7.1694e-01,  ..., -7.4818e+00,
            -8.4780e+00, -8.3308e+00],
           [-5.3496e-01,  3.4755e-01, -3.5672e-01,  ..., -6.8849e+00,
            -7.4733e+00, -8.2124e+00],
           [ 2.0588e+00,  5.0577e-02, -2.3133e+00,  ..., -6.7384e+00,
            -7.3838e+00, -7.9518e+00]],

          ...,

          [[-4.9065e-01, -2.4060e-03, -1.2086e+00,  ..., -6.5747e+00,
            -4.9723e+00, -5.5236e+00],
           [-1.0052e+00,  8.1871e-02,  1.4792e-01,  ..., -7.4328e+00,
            -5.8328e+00, -6.8222e+00],
           [-1.6964e-01,  5.2332e-01, -9.8050e-02,  ..., -7.0078e+00,
            -7.6644e+00, -8.5877e+00],
           ...,
           [ 4.6447e-01,  5.9040e-01,  3.9883e-01,  ..., -8.9800e+00,
            -7.8274e+00, -9.9995e+00],
           [ 3.3795e-01,  3.3677e-01,  1.0263e-01,  ..., -8.4043e+00,
            -5.7786e+00, -7.9322e+00],
           [ 1.6263e+00,  1.4037e-01, -1.8763e+00,  ..., -7.1594e+00,
            -5.0257e+00, -6.9688e+00]],

          [[-7.0134e-02, -1.4356e-01, -8.5657e-01,  ..., -6.4439e+00,
            -4.8324e+00, -5.0153e+00],
           [-8.3368e-01,  7.0871e-01,  2.0378e-01,  ..., -7.5014e+00,
            -5.2211e+00, -5.3099e+00],
           [-4.3153e-03,  6.8193e-01, -2.0814e-02,  ..., -7.5773e+00,
            -6.8897e+00, -6.9398e+00],
           ...,
           [ 2.7901e-01,  6.2053e-01, -3.1722e-01,  ..., -8.3473e+00,
            -7.7900e+00, -9.7128e+00],
           [ 1.0247e-01,  5.0239e-01, -2.0266e-01,  ..., -7.9412e+00,
            -5.9418e+00, -8.1134e+00],
           [ 8.9559e-01, -8.6428e-02, -1.3130e+00,  ..., -7.6568e+00,
            -5.5021e+00, -7.5937e+00]],

          [[ 4.9697e-01,  1.8021e-01, -1.7489e-01,  ..., -5.4704e+00,
            -4.9021e+00, -4.3279e+00],
           [-4.5370e-01,  5.3312e-01,  9.2349e-01,  ..., -6.3189e+00,
            -5.1685e+00, -5.1454e+00],
           [ 1.0696e-01,  9.7686e-01,  1.2425e+00,  ..., -6.8086e+00,
            -6.3506e+00, -6.2952e+00],
           ...,
           [ 8.6112e-02,  1.5209e+00,  1.0254e+00,  ..., -7.5535e+00,
            -7.8094e+00, -9.0270e+00],
           [ 2.1561e-01,  6.8010e-01,  6.7748e-01,  ..., -7.1677e+00,
            -5.9449e+00, -7.4941e+00],
           [-3.3207e-01,  3.3287e-01, -5.0320e-01,  ..., -6.7775e+00,
            -5.4218e+00, -6.4692e+00]]],


         [[[ 1.5805e-01,  4.9319e-01, -6.3092e-01,  ..., -4.4966e+00,
            -4.3064e+00, -5.2661e+00],
           [-1.7790e-01,  4.3059e-01, -4.7943e-02,  ..., -4.8997e+00,
            -3.9758e+00, -5.6767e+00],
           [ 4.1721e-01,  3.0150e-01, -2.9973e-01,  ..., -4.7085e+00,
            -3.5461e+00, -5.8110e+00],
           ...,
           [ 4.5531e-02, -1.3115e-01,  6.5546e-02,  ..., -5.5772e+00,
            -5.8951e+00, -6.4758e+00],
           [ 4.0722e-01, -1.1336e-02,  5.9845e-02,  ..., -5.9291e+00,
            -5.7621e+00, -6.6100e+00],
           [ 8.2871e-01,  1.8078e-01, -9.5594e-01,  ..., -5.2528e+00,
            -5.6893e+00, -6.2356e+00]],

          [[ 4.0187e-01,  3.5182e-01, -4.9045e-01,  ..., -6.5831e+00,
            -4.5645e+00, -6.3633e+00],
           [-8.4691e-01,  4.2800e-01,  2.0103e-01,  ..., -7.0074e+00,
            -4.6518e+00, -7.0816e+00],
           [ 2.3486e-01,  8.0829e-01, -2.3625e-01,  ..., -7.1607e+00,
            -5.2753e+00, -7.6280e+00],
           ...,
           [-3.6160e-02, -1.8013e-01,  1.4382e-01,  ..., -6.5391e+00,
            -7.0912e+00, -7.1681e+00],
           [ 4.9399e-01, -4.9437e-02,  1.8231e-01,  ..., -6.6767e+00,
            -6.8289e+00, -7.2530e+00],
           [ 1.0046e+00,  1.2790e-01, -1.2486e+00,  ..., -6.1678e+00,
            -6.6980e+00, -6.6069e+00]],

          [[ 6.9525e-01, -2.6369e-02, -6.9022e-01,  ..., -7.1142e+00,
            -4.9101e+00, -6.8781e+00],
           [-1.0680e+00, -1.3331e-01,  1.2410e-01,  ..., -8.2889e+00,
            -5.4613e+00, -7.8772e+00],
           [ 3.6801e-01,  7.3414e-02, -4.9443e-01,  ..., -9.2274e+00,
            -6.5335e+00, -8.3054e+00],
           ...,
           [ 8.8856e-02, -2.6615e-01,  1.0482e-01,  ..., -6.5967e+00,
            -7.3391e+00, -6.8969e+00],
           [ 6.4673e-01, -1.5552e-01,  1.7587e-01,  ..., -6.0689e+00,
            -6.2805e+00, -6.6721e+00],
           [ 1.3284e+00,  1.1060e-01, -1.6108e+00,  ..., -6.0632e+00,
            -7.0195e+00, -6.5009e+00]],

          ...,

          [[ 6.3826e-01, -2.1072e-02, -6.9962e-01,  ..., -6.7165e+00,
            -4.4005e+00, -5.8567e+00],
           [-1.4935e+00,  5.1589e-01,  2.4371e-01,  ..., -7.5191e+00,
            -5.2541e+00, -7.4542e+00],
           [-6.6576e-01,  7.1302e-01,  2.3806e-01,  ..., -7.1149e+00,
            -7.1887e+00, -9.1173e+00],
           ...,
           [ 4.5380e-01,  8.5228e-01,  3.2189e-01,  ..., -9.3501e+00,
            -7.7845e+00, -1.0599e+01],
           [ 4.4518e-01,  8.0150e-01,  2.6056e-01,  ..., -9.1391e+00,
            -5.9275e+00, -8.2732e+00],
           [ 2.1855e-01,  2.7223e-01, -1.0007e+00,  ..., -7.6797e+00,
            -5.3810e+00, -7.2825e+00]],

          [[ 8.8439e-01, -5.0027e-01, -5.1000e-01,  ..., -6.3526e+00,
            -4.0853e+00, -5.2621e+00],
           [-1.1538e+00, -2.9026e-01,  2.3168e-01,  ..., -7.3461e+00,
            -4.1410e+00, -5.8618e+00],
           [-5.5513e-01, -1.6929e-01,  2.1540e-01,  ..., -7.4369e+00,
            -5.6712e+00, -7.3151e+00],
           ...,
           [ 1.5330e-01, -6.9777e-01,  2.5593e-01,  ..., -8.7602e+00,
            -7.0937e+00, -9.9038e+00],
           [ 4.9779e-01, -6.5939e-01,  3.2357e-01,  ..., -8.6901e+00,
            -5.5693e+00, -8.0298e+00],
           [-1.9562e-01, -4.7828e-01, -7.3318e-01,  ..., -8.0563e+00,
            -5.6218e+00, -7.4705e+00]],

          [[ 5.1178e-01, -5.8423e-01, -7.0188e-01,  ..., -5.0808e+00,
            -3.8457e+00, -4.5367e+00],
           [-4.1476e-01, -5.8495e-01,  7.0644e-03,  ..., -5.7818e+00,
            -3.6729e+00, -5.1331e+00],
           [ 1.9728e-03, -3.4481e-01, -2.5267e-02,  ..., -6.2572e+00,
            -4.4892e+00, -5.9496e+00],
           ...,
           [ 3.4643e-01,  5.8834e-02,  6.2397e-02,  ..., -6.8346e+00,
            -5.9035e+00, -7.8535e+00],
           [ 2.3171e-01, -4.0201e-01,  6.2007e-02,  ..., -6.9574e+00,
            -4.5994e+00, -6.3259e+00],
           [ 9.9449e-02, -3.5573e-01, -8.1418e-01,  ..., -6.0936e+00,
            -4.3884e+00, -5.6886e+00]]],


         [[[ 2.2417e-02, -1.4917e-02,  7.8568e-01,  ..., -4.6913e+00,
            -4.3171e+00, -4.9294e+00],
           [ 6.3778e-01,  3.5120e-01,  1.9272e-01,  ..., -5.2362e+00,
            -4.6803e+00, -5.6940e+00],
           [-5.1552e-02,  1.6038e-01,  5.6259e-01,  ..., -4.7203e+00,
            -4.1339e+00, -5.7405e+00],
           ...,
           [-1.0227e-01, -1.2001e-01,  5.8120e-01,  ..., -6.1895e+00,
            -6.6822e+00, -6.9393e+00],
           [-8.5054e-01, -1.5697e-01,  5.0654e-01,  ..., -6.4068e+00,
            -6.3444e+00, -6.7251e+00],
           [-3.6133e-01, -3.3517e-01,  8.1953e-01,  ..., -5.4626e+00,
            -5.2358e+00, -5.9426e+00]],

          [[-1.1552e-01, -1.3055e-01,  6.6546e-02,  ..., -6.4058e+00,
            -4.3076e+00, -5.8259e+00],
           [ 7.5464e-01,  1.6014e-01, -1.5713e-01,  ..., -7.0950e+00,
            -4.9531e+00, -6.8969e+00],
           [-1.3102e-01, -8.0640e-02,  1.4219e-01,  ..., -6.6477e+00,
            -4.9521e+00, -7.1109e+00],
           ...,
           [-2.4287e-01, -6.5864e-01,  2.4964e-01,  ..., -6.7633e+00,
            -7.1251e+00, -7.5739e+00],
           [-1.2107e+00, -5.0151e-01,  9.8225e-02,  ..., -6.8296e+00,
            -6.7024e+00, -7.0890e+00],
           [-1.7682e-01, -3.7566e-01,  5.7016e-01,  ..., -6.0529e+00,
            -5.5864e+00, -6.0325e+00]],

          [[-3.3713e-01, -3.3908e-01,  1.0102e-01,  ..., -7.1143e+00,
            -4.3986e+00, -6.2072e+00],
           [ 6.7120e-01, -3.3641e-01, -2.3267e-01,  ..., -8.1983e+00,
            -5.3857e+00, -7.3811e+00],
           [-4.6272e-01, -6.4438e-01,  1.9708e-02,  ..., -8.2271e+00,
            -5.5872e+00, -7.4264e+00],
           ...,
           [-7.3048e-02, -7.0843e-01,  2.5953e-01,  ..., -6.9133e+00,
            -7.2584e+00, -7.3384e+00],
           [-7.8663e-01, -2.8610e-01,  9.5524e-02,  ..., -6.3105e+00,
            -6.3028e+00, -6.6616e+00],
           [ 5.9948e-02, -3.3833e-01,  5.4286e-01,  ..., -5.8911e+00,
            -5.6514e+00, -6.0924e+00]],

          ...,

          [[ 2.2625e-02, -6.1177e-02, -1.4530e-02,  ..., -6.2385e+00,
            -4.2479e+00, -5.1893e+00],
           [ 9.9324e-01,  6.0265e-01, -1.5587e-01,  ..., -7.4166e+00,
            -5.9406e+00, -7.4205e+00],
           [-1.9280e-01,  7.4908e-01,  2.1583e-01,  ..., -7.1834e+00,
            -7.5714e+00, -9.8441e+00],
           ...,
           [ 5.5766e-01,  1.2660e+00,  2.7223e-01,  ..., -1.0723e+01,
            -9.6763e+00, -1.1496e+01],
           [-1.7339e+00,  9.7403e-01, -1.3992e-01,  ..., -9.8048e+00,
            -7.1613e+00, -8.2798e+00],
           [-5.2156e-01,  3.9110e-01,  2.5501e-01,  ..., -7.7755e+00,
            -5.2810e+00, -6.4103e+00]],

          [[ 5.3952e-03, -8.5447e-02,  1.6359e-02,  ..., -5.9360e+00,
            -4.2528e+00, -4.4650e+00],
           [ 1.1058e+00,  1.3335e-01, -1.3710e-01,  ..., -7.2487e+00,
            -5.4051e+00, -5.6257e+00],
           [ 1.5937e-01,  4.2489e-01,  2.0534e-01,  ..., -7.5312e+00,
            -6.7962e+00, -7.4339e+00],
           ...,
           [ 3.3030e-01, -2.5743e-01,  2.3837e-01,  ..., -9.9567e+00,
            -9.0518e+00, -1.0819e+01],
           [-1.5423e+00, -2.1052e-01, -1.2682e-01,  ..., -9.2681e+00,
            -7.0886e+00, -8.2170e+00],
           [-7.3563e-01,  1.5632e-01,  1.6444e-01,  ..., -8.2588e+00,
            -5.8590e+00, -6.6846e+00]],

          [[ 2.7248e-02,  9.0111e-02,  7.0472e-01,  ..., -5.1675e+00,
            -4.5045e+00, -3.9793e+00],
           [ 7.8987e-01, -8.6671e-03,  2.8075e-01,  ..., -6.0167e+00,
            -5.2381e+00, -4.8924e+00],
           [ 1.5437e-01,  1.3248e-02,  6.9717e-01,  ..., -6.5800e+00,
            -6.2031e+00, -6.0924e+00],
           ...,
           [-9.7538e-02,  7.5100e-01,  6.9250e-01,  ..., -7.8492e+00,
            -7.9092e+00, -8.3123e+00],
           [-8.7754e-01,  2.5773e-01,  4.4014e-01,  ..., -7.4922e+00,
            -6.2841e+00, -6.2193e+00],
           [-5.8192e-01,  6.9322e-01,  8.4297e-01,  ..., -6.4911e+00,
            -5.1543e+00, -5.0261e+00]]]]], device='cuda:0')
prediction_size: torch.Size([1, 3, 52, 52, 85])
x: tensor([[[[0.5046, 0.4693, 0.6000,  ..., 0.4930, 0.4323, 0.7283],
          [0.3763, 0.4833, 0.5604,  ..., 0.4787, 0.4705, 0.8751],
          [0.3944, 0.4456, 0.5108,  ..., 0.5406, 0.3694, 0.8868],
          ...,
          [0.3797, 0.2679, 0.4577,  ..., 0.6141, 0.5837, 0.8357],
          [0.4825, 0.3029, 0.4989,  ..., 0.5693, 0.5256, 0.7100],
          [0.6217, 0.3885, 0.5267,  ..., 0.5215, 0.5537, 0.4177]],

         [[0.5394, 0.4556, 0.6028,  ..., 0.5114, 0.6004, 0.6961],
          [0.5991, 0.3001, 0.5584,  ..., 0.4910, 0.6210, 0.7320],
          [0.6671, 0.2558, 0.5910,  ..., 0.5222, 0.6563, 0.7906],
          ...,
          [0.6544, 0.1834, 0.3394,  ..., 0.6115, 0.6095, 0.5544],
          [0.7077, 0.2398, 0.3647,  ..., 0.5382, 0.6219, 0.4513],
          [0.6252, 0.3978, 0.5005,  ..., 0.5858, 0.5577, 0.5248]],

         [[0.5056, 0.6543, 0.4871,  ..., 0.4745, 0.2993, 0.4106],
          [0.4712, 0.6802, 0.4673,  ..., 0.4396, 0.2296, 0.4559],
          [0.4165, 0.6618, 0.3863,  ..., 0.4817, 0.3129, 0.5150],
          ...,
          [0.5057, 0.7297, 0.4519,  ..., 0.6359, 0.1501, 0.3725],
          [0.5013, 0.7513, 0.5398,  ..., 0.5818, 0.1762, 0.3240],
          [0.5068, 0.6878, 0.5385,  ..., 0.4756, 0.2937, 0.3585]]]],
       device='cuda:0')
x_size: torch.Size([1, 3, 52, 52])
y: tensor([[[[0.2942, 0.3417, 0.5292,  ..., 0.1841, 0.1730, 0.3362],
          [0.4690, 0.5271, 0.4025,  ..., 0.4204, 0.4793, 0.3940],
          [0.5187, 0.4264, 0.3889,  ..., 0.5651, 0.5860, 0.5126],
          ...,
          [0.4994, 0.5205, 0.6279,  ..., 0.6435, 0.5834, 0.5350],
          [0.4642, 0.6701, 0.6642,  ..., 0.6503, 0.6230, 0.4784],
          [0.5449, 0.6302, 0.7265,  ..., 0.8207, 0.6638, 0.5825]],

         [[0.6209, 0.6060, 0.5748,  ..., 0.4673, 0.4972, 0.5451],
          [0.5871, 0.6054, 0.6917,  ..., 0.4551, 0.4876, 0.5319],
          [0.4934, 0.4667, 0.5183,  ..., 0.4339, 0.4612, 0.5276],
          ...,
          [0.4947, 0.6262, 0.6711,  ..., 0.7010, 0.6903, 0.5676],
          [0.3775, 0.4279, 0.4578,  ..., 0.3323, 0.3409, 0.3827],
          [0.3580, 0.3578, 0.4146,  ..., 0.5147, 0.4008, 0.4120]],

         [[0.4963, 0.5869, 0.5400,  ..., 0.4700, 0.4608, 0.4170],
          [0.4674, 0.5400, 0.4799,  ..., 0.3410, 0.3772, 0.4072],
          [0.4160, 0.4167, 0.3443,  ..., 0.3299, 0.4290, 0.4162],
          ...,
          [0.4847, 0.6463, 0.6790,  ..., 0.7801, 0.7259, 0.5965],
          [0.4787, 0.5333, 0.6047,  ..., 0.4360, 0.4476, 0.5390],
          [0.5225, 0.4978, 0.5033,  ..., 0.6794, 0.5641, 0.6667]]]],
       device='cuda:0')
y_size: torch.Size([1, 3, 52, 52])
w: tensor([[[[-0.7541,  0.2809, -0.1559,  ...,  0.9069,  0.8929, -0.9072],
          [-1.0582, -0.6512, -0.3270,  ..., -0.4050, -0.1288, -1.8518],
          [-1.1189, -0.3012, -0.5626,  ..., -0.7169, -0.3567, -2.3133],
          ...,
          [-1.2086,  0.1479, -0.0981,  ...,  0.3988,  0.1026, -1.8763],
          [-0.8566,  0.2038, -0.0208,  ..., -0.3172, -0.2027, -1.3130],
          [-0.1749,  0.9235,  1.2425,  ...,  1.0254,  0.6775, -0.5032]],

         [[-0.6309, -0.0479, -0.2997,  ...,  0.0655,  0.0598, -0.9559],
          [-0.4904,  0.2010, -0.2363,  ...,  0.1438,  0.1823, -1.2486],
          [-0.6902,  0.1241, -0.4944,  ...,  0.1048,  0.1759, -1.6108],
          ...,
          [-0.6996,  0.2437,  0.2381,  ...,  0.3219,  0.2606, -1.0007],
          [-0.5100,  0.2317,  0.2154,  ...,  0.2559,  0.3236, -0.7332],
          [-0.7019,  0.0071, -0.0253,  ...,  0.0624,  0.0620, -0.8142]],

         [[ 0.7857,  0.1927,  0.5626,  ...,  0.5812,  0.5065,  0.8195],
          [ 0.0665, -0.1571,  0.1422,  ...,  0.2496,  0.0982,  0.5702],
          [ 0.1010, -0.2327,  0.0197,  ...,  0.2595,  0.0955,  0.5429],
          ...,
          [-0.0145, -0.1559,  0.2158,  ...,  0.2722, -0.1399,  0.2550],
          [ 0.0164, -0.1371,  0.2053,  ...,  0.2384, -0.1268,  0.1644],
          [ 0.7047,  0.2808,  0.6972,  ...,  0.6925,  0.4401,  0.8430]]]],
       device='cuda:0')
w_size: torch.Size([1, 3, 52, 52])
h: tensor([[[[-1.1538, -1.4507, -0.9346,  ..., -1.7866, -1.7783, -0.7139],
          [ 0.5772, -0.6493, -0.1177,  ..., -0.5048, -0.5900,  0.7493],
          [ 0.4189, -0.2495,  0.0248,  ..., -0.9474, -1.1047,  0.8037],
          ...,
          [ 0.7389, -0.1907, -0.4287,  ..., -0.7024, -0.4906,  0.5008],
          [ 0.3909, -0.4547, -0.6835,  ..., -0.8130, -0.5465,  0.3751],
          [-0.7258, -1.1093, -1.6865,  ..., -2.0005, -1.5175, -1.0856]],

         [[ 0.5069, -0.1921,  0.0022,  ..., -0.3200, -0.3464,  0.6644],
          [ 0.1798, -0.0858, -0.0772,  ..., -0.2754, -0.2361,  0.8858],
          [ 0.5468,  0.0566,  0.2471,  ..., -0.0455, -0.0877,  1.2662],
          ...,
          [ 0.3649,  0.0259, -0.0202,  ..., -0.2339, -0.0621,  0.4912],
          [ 0.0579, -0.1983, -0.2856,  ..., -0.4194, -0.2626,  0.1233],
          [ 0.2632, -0.3766, -0.3374,  ..., -0.4359, -0.4090,  0.3148]],

         [[-0.7734, -0.7303, -0.7386,  ..., -1.2266, -1.1093, -0.9089],
          [-0.1265,  0.0903, -0.0251,  ..., -0.1029, -0.0958, -0.2853],
          [-0.1851,  0.1145,  0.0313,  ..., -0.0742, -0.1593, -0.3305],
          ...,
          [-0.0791,  0.1597,  0.1535,  ..., -0.1704, -0.0525, -0.1825],
          [-0.2133, -0.0898, -0.2234,  ..., -0.1181, -0.0740, -0.1694],
          [-0.9450, -1.0711, -1.2426,  ..., -1.4536, -1.2045, -1.1795]]]],
       device='cuda:0')
h_size: torch.Size([1, 3, 52, 52])
conf: tensor([[[[1.4156e-05, 1.7501e-05, 2.8875e-05,  ..., 1.0805e-05,
           1.2690e-05, 2.3204e-05],
          [1.2305e-05, 3.0514e-06, 2.0275e-05,  ..., 5.5576e-08,
           6.4016e-08, 3.6502e-06],
          [8.8089e-06, 4.2823e-06, 1.1381e-05,  ..., 1.5371e-08,
           5.8833e-08, 1.4913e-06],
          ...,
          [3.4571e-05, 5.8830e-07, 5.3811e-08,  ..., 7.4041e-10,
           2.8439e-07, 1.7241e-06],
          [2.6063e-05, 2.0111e-06, 4.4077e-07,  ..., 2.6228e-08,
           7.0056e-07, 3.8068e-06],
          [6.5584e-05, 5.3835e-05, 1.7299e-05,  ..., 4.6859e-06,
           2.0311e-05, 2.2002e-05]],

         [[5.6794e-07, 2.0093e-07, 1.8803e-07,  ..., 1.0052e-08,
           2.1739e-08, 3.7220e-07],
          [1.0308e-05, 5.4290e-06, 1.0317e-05,  ..., 1.9231e-08,
           1.0054e-07, 9.0515e-07],
          [8.7346e-06, 8.3023e-06, 2.4798e-05,  ..., 1.5774e-09,
           2.1756e-08, 9.3459e-07],
          ...,
          [4.3968e-05, 1.3675e-05, 6.6624e-08,  ..., 1.2469e-10,
           1.0590e-06, 2.1591e-06],
          [2.3577e-05, 7.7296e-06, 1.1674e-07,  ..., 3.9141e-09,
           2.4854e-06, 1.8638e-06],
          [1.8347e-06, 5.7012e-07, 1.9049e-08,  ..., 1.3372e-09,
           4.8801e-08, 1.7252e-07]],

         [[1.8850e-07, 2.0038e-06, 1.6534e-06,  ..., 1.7877e-05,
           3.5408e-06, 2.6690e-07],
          [1.9276e-07, 4.8893e-06, 2.5305e-06,  ..., 2.2431e-06,
           2.4159e-07, 1.9263e-08],
          [6.8191e-08, 1.2715e-06, 6.5636e-07,  ..., 3.4554e-08,
           2.1097e-08, 3.2327e-09],
          ...,
          [6.8233e-08, 5.6209e-06, 3.8736e-06,  ..., 1.6212e-07,
           1.5902e-06, 2.6874e-09],
          [1.0908e-07, 6.0799e-06, 7.1102e-06,  ..., 8.6387e-07,
           3.9363e-06, 1.1174e-08],
          [7.6011e-07, 1.4205e-05, 4.1771e-05,  ..., 4.8843e-06,
           4.4310e-06, 2.5277e-07]]]], device='cuda:0')
conf_size: torch.Size([1, 3, 52, 52])
pred_cls: tensor([[[[[6.9899e-02, 3.3174e-03, 3.6174e-02,  ..., 4.9998e-03,
            4.6807e-03, 3.2286e-03],
           [6.2770e-02, 2.6142e-03, 1.6417e-02,  ..., 2.7686e-03,
            4.8884e-03, 1.4070e-03],
           [3.6946e-02, 1.1582e-03, 4.6947e-03,  ..., 2.0883e-03,
            4.6991e-03, 1.0517e-03],
           ...,
           [3.6902e-01, 6.1363e-03, 5.2151e-02,  ..., 1.5868e-03,
            4.8463e-04, 2.8471e-04],
           [1.6703e-01, 7.3527e-03, 1.0366e-01,  ..., 9.7830e-04,
            5.5466e-04, 2.4114e-04],
           [2.1681e-01, 7.1641e-03, 7.1441e-02,  ..., 2.3665e-03,
            9.2136e-04, 5.8076e-04]],

          [[1.6267e-01, 2.2779e-03, 1.8543e-02,  ..., 1.1699e-03,
            6.1226e-03, 7.3812e-04],
           [1.1786e-01, 1.1729e-03, 1.5111e-02,  ..., 4.9694e-04,
            2.8574e-03, 4.4814e-04],
           [4.2018e-02, 2.2101e-04, 3.5430e-03,  ..., 2.1898e-04,
            1.1644e-03, 1.0334e-04],
           ...,
           [2.8106e-01, 2.2511e-03, 2.4068e-02,  ..., 9.3806e-04,
            2.8563e-04, 2.1166e-04],
           [2.7920e-01, 3.2474e-03, 3.2519e-02,  ..., 8.6880e-04,
            3.9865e-04, 1.6115e-04],
           [2.2045e-01, 5.2198e-03, 4.5454e-02,  ..., 1.0954e-03,
            6.2882e-04, 3.1074e-04]],

          [[1.9486e-01, 7.4952e-03, 4.8377e-02,  ..., 4.8275e-04,
            3.5438e-03, 3.5387e-04],
           [9.9682e-02, 3.7120e-03, 2.9135e-02,  ..., 1.0301e-04,
            1.0542e-03, 1.0263e-04],
           [3.9630e-03, 2.9731e-04, 1.7717e-03,  ..., 2.4423e-05,
            2.8494e-04, 4.5252e-05],
           ...,
           [8.3829e-02, 3.1204e-03, 4.2028e-02,  ..., 5.6290e-04,
            2.0794e-04, 2.4091e-04],
           [1.0394e-01, 4.9348e-03, 6.7741e-02,  ..., 1.0221e-03,
            5.6776e-04, 2.7120e-04],
           [1.9966e-01, 8.4368e-03, 7.9145e-02,  ..., 1.1831e-03,
            6.2083e-04, 3.5189e-04]],

          ...,

          [[2.7348e-01, 1.1404e-02, 6.0038e-02,  ..., 1.3933e-03,
            6.8798e-03, 3.9756e-03],
           [1.8542e-01, 2.9545e-03, 1.9570e-02,  ..., 5.9120e-04,
            2.9213e-03, 1.0882e-03],
           [8.9813e-02, 2.8505e-04, 6.7067e-03,  ..., 9.0399e-04,
            4.6903e-04, 1.8635e-04],
           ...,
           [3.3797e-02, 2.5812e-04, 1.0609e-02,  ..., 1.2588e-04,
            3.9852e-04, 4.5420e-05],
           [5.0693e-02, 4.6766e-04, 2.6349e-02,  ..., 2.2385e-04,
            3.0834e-03, 3.5886e-04],
           [9.7842e-02, 2.3835e-03, 3.8504e-02,  ..., 7.7689e-04,
            6.5239e-03, 9.3991e-04]],

          [[2.2945e-01, 9.7390e-03, 5.6842e-02,  ..., 1.5877e-03,
            7.9048e-03, 6.5920e-03],
           [8.9814e-02, 4.7587e-03, 5.1537e-02,  ..., 5.5200e-04,
            5.3721e-03, 4.9181e-03],
           [1.0524e-01, 9.8047e-04, 1.2777e-02,  ..., 5.1168e-04,
            1.0172e-03, 9.6756e-04],
           ...,
           [1.1218e-02, 3.1986e-04, 3.1989e-03,  ..., 2.3699e-04,
            4.1369e-04, 6.0500e-05],
           [3.8397e-02, 8.5166e-04, 1.1600e-02,  ..., 3.5567e-04,
            2.6204e-03, 2.9942e-04],
           [7.1865e-02, 2.8384e-03, 2.0673e-02,  ..., 4.7260e-04,
            4.0616e-03, 5.0338e-04]],

          [[1.7710e-01, 1.1176e-02, 2.7062e-02,  ..., 4.1921e-03,
            7.3763e-03, 1.3023e-02],
           [1.9965e-01, 1.2313e-02, 3.0006e-02,  ..., 1.7987e-03,
            5.6610e-03, 5.7923e-03],
           [3.1727e-01, 1.0616e-02, 2.3186e-02,  ..., 1.1031e-03,
            1.7427e-03, 1.8418e-03],
           ...,
           [1.9881e-01, 5.6802e-03, 3.7108e-02,  ..., 5.2402e-04,
            4.0575e-04, 1.2011e-04],
           [1.7387e-01, 1.0706e-02, 7.0629e-02,  ..., 7.7052e-04,
            2.6122e-03, 5.5602e-04],
           [1.1673e-01, 1.6507e-02, 8.1020e-02,  ..., 1.1378e-03,
            4.3998e-03, 1.5481e-03]]],


         [[[3.1079e-01, 3.9024e-03, 1.3046e-02,  ..., 1.1024e-02,
            1.3303e-02, 5.1372e-03],
           [2.7288e-01, 5.7406e-03, 1.5420e-02,  ..., 7.3939e-03,
            1.8419e-02, 3.4133e-03],
           [1.9978e-01, 2.9471e-03, 5.5369e-03,  ..., 8.9380e-03,
            2.8030e-02, 2.9854e-03],
           ...,
           [5.9208e-01, 1.2923e-02, 5.7819e-02,  ..., 3.7688e-03,
            2.7453e-03, 1.5379e-03],
           [3.1568e-01, 1.2895e-02, 1.1988e-01,  ..., 2.6538e-03,
            3.1348e-03, 1.3450e-03],
           [3.3258e-01, 1.0604e-02, 5.7493e-02,  ..., 5.2055e-03,
            3.3705e-03, 1.9546e-03]],

          [[1.3869e-01, 3.5197e-03, 1.7341e-02,  ..., 1.3817e-03,
            1.0307e-02, 1.7207e-03],
           [9.7299e-02, 3.3088e-03, 1.7618e-02,  ..., 9.0431e-04,
            9.4544e-03, 8.3969e-04],
           [5.9221e-02, 7.8315e-04, 3.8055e-03,  ..., 7.7591e-04,
            5.0906e-03, 4.8638e-04],
           ...,
           [1.5747e-01, 5.4596e-03, 2.2117e-02,  ..., 1.4436e-03,
            8.3173e-04, 7.7023e-04],
           [1.4369e-01, 6.5164e-03, 5.8380e-02,  ..., 1.2584e-03,
            1.0808e-03, 7.0755e-04],
           [2.2371e-01, 8.7204e-03, 5.3729e-02,  ..., 2.0914e-03,
            1.2318e-03, 1.3492e-03]],

          [[1.8729e-01, 6.2304e-03, 2.9800e-02,  ..., 8.1283e-04,
            7.3180e-03, 1.0291e-03],
           [7.7152e-02, 3.7839e-03, 1.8802e-02,  ..., 2.5122e-04,
            4.2302e-03, 3.7913e-04],
           [2.4131e-02, 2.5615e-04, 1.1903e-03,  ..., 9.8300e-05,
            1.4518e-03, 2.4713e-04],
           ...,
           [8.5581e-02, 3.7086e-03, 1.8109e-02,  ..., 1.3630e-03,
            6.4923e-04, 1.0098e-03],
           [7.4754e-02, 8.2601e-03, 7.1079e-02,  ..., 2.3083e-03,
            1.8690e-03, 1.2642e-03],
           [2.4194e-01, 7.5642e-03, 5.1287e-02,  ..., 2.3216e-03,
            8.9347e-04, 1.4998e-03]],

          ...,

          [[3.8045e-01, 1.6437e-02, 9.4354e-02,  ..., 1.2092e-03,
            1.2122e-02, 2.8526e-03],
           [4.0004e-01, 5.8102e-03, 5.9208e-02,  ..., 5.4234e-04,
            5.1988e-03, 5.7868e-04],
           [5.0968e-01, 6.8991e-04, 5.6692e-03,  ..., 8.1225e-04,
            7.5453e-04, 1.0973e-04],
           ...,
           [4.7865e-01, 1.1556e-03, 6.1403e-03,  ..., 8.6947e-05,
            4.1596e-04, 2.4949e-05],
           [9.2487e-02, 2.0325e-03, 1.0654e-02,  ..., 1.0737e-04,
            2.6581e-03, 2.5520e-04],
           [1.8388e-01, 4.4795e-03, 1.1979e-02,  ..., 4.6188e-04,
            4.5823e-03, 6.8701e-04]],

          [[4.0018e-01, 1.2158e-02, 6.0194e-02,  ..., 1.7393e-03,
            1.6541e-02, 5.1577e-03],
           [4.2859e-01, 7.2478e-03, 8.7126e-02,  ..., 6.4469e-04,
            1.5659e-02, 2.8380e-03],
           [6.2312e-01, 1.4430e-03, 1.4193e-02,  ..., 5.8875e-04,
            3.4318e-03, 6.6497e-04],
           ...,
           [1.5042e-01, 1.5311e-03, 5.5079e-03,  ..., 1.5683e-04,
            8.2959e-04, 4.9982e-05],
           [5.7320e-02, 2.9986e-03, 9.4175e-03,  ..., 1.6822e-04,
            3.7986e-03, 3.2549e-04],
           [1.2892e-01, 6.6082e-03, 1.4634e-02,  ..., 3.1699e-04,
            3.6049e-03, 5.6929e-04]],

          [[3.9989e-01, 2.5227e-02, 2.6635e-02,  ..., 6.1766e-03,
            2.0924e-02, 1.0595e-02],
           [3.3792e-01, 3.5150e-02, 3.6978e-02,  ..., 3.0738e-03,
            2.4774e-02, 5.8635e-03],
           [6.0521e-01, 1.8771e-02, 1.6634e-02,  ..., 1.9129e-03,
            1.1105e-02, 2.6000e-03],
           ...,
           [2.0971e-01, 4.1618e-02, 2.0026e-02,  ..., 1.0747e-03,
            2.7225e-03, 3.8823e-04],
           [1.1308e-01, 5.4930e-02, 2.6861e-02,  ..., 9.5064e-04,
            9.9580e-03, 1.7862e-03],
           [1.7170e-01, 5.0359e-02, 4.3214e-02,  ..., 2.2523e-03,
            1.2268e-02, 3.3728e-03]]],


         [[[1.2048e-01, 4.4893e-03, 4.2984e-02,  ..., 9.0913e-03,
            1.3163e-02, 7.1789e-03],
           [9.0326e-02, 5.7315e-03, 2.8016e-02,  ..., 5.2923e-03,
            9.1914e-03, 3.3548e-03],
           [6.6233e-02, 3.4393e-03, 1.7169e-02,  ..., 8.8340e-03,
            1.5768e-02, 3.2029e-03],
           ...,
           [1.9157e-01, 6.6194e-03, 1.6600e-01,  ..., 2.0467e-03,
            1.2515e-03, 9.6800e-04],
           [1.1531e-01, 6.0908e-03, 2.1812e-01,  ..., 1.6476e-03,
            1.7534e-03, 1.1990e-03],
           [1.3731e-01, 7.6893e-03, 1.5062e-01,  ..., 4.2246e-03,
            5.2945e-03, 2.6184e-03]],

          [[8.0842e-02, 3.8618e-03, 3.4435e-02,  ..., 1.6493e-03,
            1.3287e-02, 2.9414e-03],
           [6.4796e-02, 3.8859e-03, 2.3689e-02,  ..., 8.2852e-04,
            7.0120e-03, 1.0099e-03],
           [3.8989e-02, 1.3693e-03, 1.9939e-02,  ..., 1.2954e-03,
            7.0187e-03, 8.1548e-04],
           ...,
           [7.5020e-02, 2.8271e-03, 5.8549e-02,  ..., 1.1540e-03,
            8.0399e-04, 5.1344e-04],
           [1.1260e-01, 4.8802e-03, 1.0928e-01,  ..., 1.0802e-03,
            1.2264e-03, 8.3353e-04],
           [1.1044e-01, 7.2923e-03, 1.2230e-01,  ..., 2.3455e-03,
            3.7344e-03, 2.3938e-03]],

          [[6.5002e-02, 5.6106e-03, 5.0227e-02,  ..., 8.1276e-04,
            1.2145e-02, 2.0107e-03],
           [3.1950e-02, 4.5705e-03, 2.2415e-02,  ..., 2.7504e-04,
            4.5609e-03, 6.2254e-04],
           [9.9544e-03, 9.3996e-04, 1.5504e-02,  ..., 2.6723e-04,
            3.7316e-03, 5.9497e-04],
           ...,
           [2.3236e-02, 4.0022e-03, 4.6256e-02,  ..., 9.9351e-04,
            7.0375e-04, 6.4965e-04],
           [5.5432e-02, 1.0632e-02, 9.5817e-02,  ..., 1.8139e-03,
            1.8278e-03, 1.2774e-03],
           [7.5813e-02, 7.8061e-03, 9.7888e-02,  ..., 2.7564e-03,
            3.5004e-03, 2.2549e-03]],

          ...,

          [[2.5899e-01, 1.9440e-02, 1.4931e-01,  ..., 1.9489e-03,
            1.4093e-02, 5.5449e-03],
           [3.1533e-01, 8.0575e-03, 6.2048e-02,  ..., 6.0084e-04,
            2.6236e-03, 5.9852e-04],
           [2.6983e-01, 1.1105e-03, 2.1523e-02,  ..., 7.5851e-04,
            5.1470e-04, 5.3055e-05],
           ...,
           [3.3412e-02, 2.2600e-04, 1.1295e-02,  ..., 2.2042e-05,
            6.2748e-05, 1.0167e-05],
           [3.8825e-02, 6.9868e-04, 9.6011e-03,  ..., 5.5185e-05,
            7.7546e-04, 2.5353e-04],
           [4.5212e-02, 2.6400e-03, 1.9363e-02,  ..., 4.1972e-04,
            5.0616e-03, 1.6418e-03]],

          [[2.7951e-01, 1.7005e-02, 1.2585e-01,  ..., 2.6355e-03,
            1.4025e-02, 1.1374e-02],
           [2.5363e-01, 1.0426e-02, 1.1704e-01,  ..., 7.1061e-04,
            4.4734e-03, 3.5911e-03],
           [2.9567e-01, 2.7446e-03, 4.8735e-02,  ..., 5.3578e-04,
            1.1168e-03, 5.9053e-04],
           ...,
           [1.9746e-02, 6.6229e-04, 6.5465e-03,  ..., 4.7405e-05,
            1.1716e-04, 2.0015e-05],
           [5.0388e-02, 1.7640e-03, 7.5508e-03,  ..., 9.4376e-05,
            8.3383e-04, 2.6995e-04],
           [6.3203e-02, 4.2114e-03, 1.7318e-02,  ..., 2.5889e-04,
            2.8459e-03, 1.2484e-03]],

          [[2.9262e-01, 1.9639e-02, 4.1824e-02,  ..., 5.6663e-03,
            1.0938e-02, 1.8356e-02],
           [1.8556e-01, 2.3986e-02, 5.7973e-02,  ..., 2.4318e-03,
            5.2823e-03, 7.4472e-03],
           [2.7931e-01, 1.1663e-02, 3.7706e-02,  ..., 1.3859e-03,
            2.0192e-03, 2.2548e-03],
           ...,
           [8.1081e-02, 1.0510e-02, 3.7148e-02,  ..., 3.8989e-04,
            3.6722e-04, 2.4541e-04],
           [1.0089e-01, 2.1606e-02, 4.8575e-02,  ..., 5.5713e-04,
            1.8623e-03, 1.9866e-03],
           [1.1258e-01, 2.4415e-02, 5.9118e-02,  ..., 1.5146e-03,
            5.7411e-03, 6.5217e-03]]]]], device='cuda:0')
pred_cls_size: torch.Size([1, 3, 52, 52, 80])
grid_x: tensor([[[[ 0.,  1.,  2.,  ..., 49., 50., 51.],
          [ 0.,  1.,  2.,  ..., 49., 50., 51.],
          [ 0.,  1.,  2.,  ..., 49., 50., 51.],
          ...,
          [ 0.,  1.,  2.,  ..., 49., 50., 51.],
          [ 0.,  1.,  2.,  ..., 49., 50., 51.],
          [ 0.,  1.,  2.,  ..., 49., 50., 51.]],

         [[ 0.,  1.,  2.,  ..., 49., 50., 51.],
          [ 0.,  1.,  2.,  ..., 49., 50., 51.],
          [ 0.,  1.,  2.,  ..., 49., 50., 51.],
          ...,
          [ 0.,  1.,  2.,  ..., 49., 50., 51.],
          [ 0.,  1.,  2.,  ..., 49., 50., 51.],
          [ 0.,  1.,  2.,  ..., 49., 50., 51.]],

         [[ 0.,  1.,  2.,  ..., 49., 50., 51.],
          [ 0.,  1.,  2.,  ..., 49., 50., 51.],
          [ 0.,  1.,  2.,  ..., 49., 50., 51.],
          ...,
          [ 0.,  1.,  2.,  ..., 49., 50., 51.],
          [ 0.,  1.,  2.,  ..., 49., 50., 51.],
          [ 0.,  1.,  2.,  ..., 49., 50., 51.]]]], device='cuda:0')
grid_x_size: torch.Size([1, 3, 52, 52])
grid_y: tensor([[[[ 0.,  0.,  0.,  ...,  0.,  0.,  0.],
          [ 1.,  1.,  1.,  ...,  1.,  1.,  1.],
          [ 2.,  2.,  2.,  ...,  2.,  2.,  2.],
          ...,
          [49., 49., 49.,  ..., 49., 49., 49.],
          [50., 50., 50.,  ..., 50., 50., 50.],
          [51., 51., 51.,  ..., 51., 51., 51.]],

         [[ 0.,  0.,  0.,  ...,  0.,  0.,  0.],
          [ 1.,  1.,  1.,  ...,  1.,  1.,  1.],
          [ 2.,  2.,  2.,  ...,  2.,  2.,  2.],
          ...,
          [49., 49., 49.,  ..., 49., 49., 49.],
          [50., 50., 50.,  ..., 50., 50., 50.],
          [51., 51., 51.,  ..., 51., 51., 51.]],

         [[ 0.,  0.,  0.,  ...,  0.,  0.,  0.],
          [ 1.,  1.,  1.,  ...,  1.,  1.,  1.],
          [ 2.,  2.,  2.,  ...,  2.,  2.,  2.],
          ...,
          [49., 49., 49.,  ..., 49., 49., 49.],
          [50., 50., 50.,  ..., 50., 50., 50.],
          [51., 51., 51.,  ..., 51., 51., 51.]]]], device='cuda:0')
grid_y_size: torch.Size([1, 3, 52, 52])
anchor_w: tensor([[[[1.2500, 1.2500, 1.2500,  ..., 1.2500, 1.2500, 1.2500],
          [1.2500, 1.2500, 1.2500,  ..., 1.2500, 1.2500, 1.2500],
          [1.2500, 1.2500, 1.2500,  ..., 1.2500, 1.2500, 1.2500],
          ...,
          [1.2500, 1.2500, 1.2500,  ..., 1.2500, 1.2500, 1.2500],
          [1.2500, 1.2500, 1.2500,  ..., 1.2500, 1.2500, 1.2500],
          [1.2500, 1.2500, 1.2500,  ..., 1.2500, 1.2500, 1.2500]],

         [[2.0000, 2.0000, 2.0000,  ..., 2.0000, 2.0000, 2.0000],
          [2.0000, 2.0000, 2.0000,  ..., 2.0000, 2.0000, 2.0000],
          [2.0000, 2.0000, 2.0000,  ..., 2.0000, 2.0000, 2.0000],
          ...,
          [2.0000, 2.0000, 2.0000,  ..., 2.0000, 2.0000, 2.0000],
          [2.0000, 2.0000, 2.0000,  ..., 2.0000, 2.0000, 2.0000],
          [2.0000, 2.0000, 2.0000,  ..., 2.0000, 2.0000, 2.0000]],

         [[4.1250, 4.1250, 4.1250,  ..., 4.1250, 4.1250, 4.1250],
          [4.1250, 4.1250, 4.1250,  ..., 4.1250, 4.1250, 4.1250],
          [4.1250, 4.1250, 4.1250,  ..., 4.1250, 4.1250, 4.1250],
          ...,
          [4.1250, 4.1250, 4.1250,  ..., 4.1250, 4.1250, 4.1250],
          [4.1250, 4.1250, 4.1250,  ..., 4.1250, 4.1250, 4.1250],
          [4.1250, 4.1250, 4.1250,  ..., 4.1250, 4.1250, 4.1250]]]],
       device='cuda:0')
anchor_h: tensor([[[[1.6250, 1.6250, 1.6250,  ..., 1.6250, 1.6250, 1.6250],
          [1.6250, 1.6250, 1.6250,  ..., 1.6250, 1.6250, 1.6250],
          [1.6250, 1.6250, 1.6250,  ..., 1.6250, 1.6250, 1.6250],
          ...,
          [1.6250, 1.6250, 1.6250,  ..., 1.6250, 1.6250, 1.6250],
          [1.6250, 1.6250, 1.6250,  ..., 1.6250, 1.6250, 1.6250],
          [1.6250, 1.6250, 1.6250,  ..., 1.6250, 1.6250, 1.6250]],

         [[3.7500, 3.7500, 3.7500,  ..., 3.7500, 3.7500, 3.7500],
          [3.7500, 3.7500, 3.7500,  ..., 3.7500, 3.7500, 3.7500],
          [3.7500, 3.7500, 3.7500,  ..., 3.7500, 3.7500, 3.7500],
          ...,
          [3.7500, 3.7500, 3.7500,  ..., 3.7500, 3.7500, 3.7500],
          [3.7500, 3.7500, 3.7500,  ..., 3.7500, 3.7500, 3.7500],
          [3.7500, 3.7500, 3.7500,  ..., 3.7500, 3.7500, 3.7500]],

         [[2.8750, 2.8750, 2.8750,  ..., 2.8750, 2.8750, 2.8750],
          [2.8750, 2.8750, 2.8750,  ..., 2.8750, 2.8750, 2.8750],
          [2.8750, 2.8750, 2.8750,  ..., 2.8750, 2.8750, 2.8750],
          ...,
          [2.8750, 2.8750, 2.8750,  ..., 2.8750, 2.8750, 2.8750],
          [2.8750, 2.8750, 2.8750,  ..., 2.8750, 2.8750, 2.8750],
          [2.8750, 2.8750, 2.8750,  ..., 2.8750, 2.8750, 2.8750]]]],
       device='cuda:0')
pred_boxes: tensor([[[[[-3.1796e-01,  5.4260e-01,  3.5451e-01, -4.5240e-01],
           [-1.8913e+01, -2.9183e+00, -4.7475e+00, -2.3301e+00],
           [-5.9606e+00, -3.8765e+00, -2.7145e+00, -1.2861e+00],
           ...,
           [-2.7198e+00, -6.1345e+00, -6.2785e+00, -5.8889e+00],
           [-5.2214e+00, -5.6942e+00, -6.3891e+00, -4.5200e+00],
           [-5.5901e+00, -6.5862e+00, -5.6870e+00, -5.0818e+00]],

          [[-5.0626e+00, -5.4007e+00, -6.4869e+00, -6.3145e+00],
           [-5.5276e+00, -5.9262e+00, -5.3659e+00, -6.2370e+00],
           [-4.1579e+00, -7.4449e+00, -5.7464e+00, -6.5279e+00],
           ...,
           [-7.8556e+00, -5.8322e+00, -5.9522e+00, -2.2003e+00],
           [-4.4548e+00, -5.9507e+00, -6.1110e+00, -5.7130e+00],
           [-4.6976e+00, -4.3154e+00, -6.9558e+00, -6.1878e+00]],

          [[-5.7027e+00, -5.6362e+00, -4.9218e+00, -2.5336e+00],
           [-5.8399e+00, -6.1175e+00, -5.4265e+00, -5.9023e+00],
           [-7.0541e+00, -6.5316e-02,  6.6139e-01,  6.6395e-01],
           ...,
           [-6.2843e+00, -3.3051e+00, -3.8520e+00, -5.6908e+00],
           [-5.9467e+00, -6.7291e+00, -6.7967e+00, -7.2151e+00],
           [-5.8768e+00, -4.8843e+00, -7.8072e+00, -6.3854e+00]],

          ...,

          [[-5.9756e+00, -6.0083e+00, -7.2786e+00, -9.2797e+00],
           [-8.0106e+00, -6.8684e+00, -7.5537e+00, -7.2947e+00],
           [-2.7449e-01, -4.2514e-01,  3.1315e-01, -2.7261e-01],
           ...,
           [-3.6314e+00, -6.8804e+00, -7.0804e+00, -7.0882e+00],
           [-9.5325e+00, -9.9735e+00, -8.7738e+00, -8.3013e+00],
           [-9.4900e+00, -5.8323e+00, -1.0669e+01, -3.4920e+00]],

          [[-4.9014e+00, -4.8571e+00, -8.0963e+00, -6.0306e+00],
           [-6.8446e+00, -7.3845e+00, -5.7650e+00, -6.6087e+00],
           [-7.8693e+00, -7.0199e+00, -7.4457e+00, -6.9512e+00],
           ...,
           [-8.3572e+00, -7.9539e+00, -6.1745e+00, -7.4908e+00],
           [-7.2560e+00, -5.9724e+00, -6.9794e+00, -3.4475e+00],
           [-7.0446e+00, -4.2599e+00, -8.3867e+00, -8.7326e+00]],

          [[-4.9563e+00, -8.1432e+00, -8.0964e+00, -8.0140e+00],
           [-7.8797e+00, -8.7117e+00, -7.5813e+00, -9.8093e+00],
           [-7.1784e+00, -8.2053e+00, -6.8845e+00, -7.1738e+00],
           ...,
           [-1.2627e+01, -1.2035e+01, -9.8355e+00, -1.1114e+01],
           [-1.0081e+01, -1.3994e+01, -8.4503e+00, -1.1727e+01],
           [-1.2699e+01, -7.9063e+00, -1.2260e+01, -9.8632e+00]]],


         [[[-5.5528e+00, -1.0747e+01, -9.9268e+00, -1.3347e+01],
           [-1.2563e+01, -1.3810e+01, -1.2123e+01, -1.3031e+01],
           [-1.0034e+01, -1.1847e+01, -9.7323e+00, -1.3869e+01],
           ...,
           [-4.8247e+00, -4.7229e+00, -4.7641e+00, -4.8811e+00],
           [-2.7132e+00, -2.2260e+00, -4.6279e+00, -2.5984e+00],
           [-3.3910e+00, -3.3236e+00, -4.6711e+00, -4.0939e+00]],

          [[-3.3504e+00, -2.9686e+00, -3.2175e+00, -3.8692e+00],
           [-3.2004e+00, -4.0638e+00, -2.9425e+00, -3.9030e+00],
           [-5.2759e+00, -3.9163e+00, -5.5479e+00, -4.1005e+00],
           ...,
           [-5.5731e-01,  1.2657e-02,  1.5982e-01,  2.1483e-02],
           [-1.4408e+01,  8.2414e-01, -6.0956e+00, -3.3851e+00],
           [-7.9496e+00, -8.6783e+00, -5.8909e+00, -6.0595e+00]],

          [[-7.0619e+00, -7.5424e+00, -5.7354e+00, -6.1850e+00],
           [-6.0321e+00, -6.1125e+00, -3.2041e+00, -6.3164e+00],
           [-5.7293e+00, -5.0254e+00, -8.5966e+00, -7.3583e+00],
           ...,
           [-8.0743e+00, -7.2351e+00, -7.4671e+00, -7.6282e+00],
           [-5.6449e+00, -7.1502e+00, -6.7350e+00, -7.3390e+00],
           [-7.7053e+00, -6.8986e+00, -7.5052e+00, -6.4522e+00]],

          ...,

          [[-6.5391e+00, -5.2372e+00, -6.7053e+00, -7.0261e+00],
           [-6.1143e+00, -5.5719e+00, -5.5954e+00, -5.9315e+00],
           [-5.1356e+00, -5.0673e+00, -5.0232e+00, -6.0395e+00],
           ...,
           [-7.9451e+00, -8.4635e+00, -8.1366e+00, -9.1637e+00],
           [-9.6321e+00, -7.0729e+00, -1.0145e+01, -7.6537e+00],
           [-9.1770e+00, -9.0545e+00, -7.9699e+00, -8.2449e+00]],

          [[-8.3112e+00, -7.5457e+00, -9.5015e+00, -8.9456e+00],
           [-8.5834e+00, -8.5202e+00, -8.4829e+00, -1.0615e+01],
           [-8.5447e+00, -8.5895e+00, -6.4086e+00, -8.8100e+00],
           ...,
           [-1.0288e+01, -7.5523e+00, -1.0435e+01, -9.4645e+00],
           [-9.1211e+00, -6.4351e+00, -8.6273e+00, -8.6502e+00],
           [-3.7048e-01,  9.4718e-01,  4.4179e-01, -6.0446e-01]],

          [[-8.7114e+00,  3.5467e+00, -8.2203e+00, -4.9685e+00],
           [-6.7461e+00, -9.7272e+00, -8.9212e+00, -9.0492e+00],
           [-7.4084e+00, -1.0780e+01, -7.8956e+00, -9.6997e+00],
           ...,
           [-1.0097e+01, -9.4828e+00, -1.2600e+01, -1.0626e+01],
           [-1.1298e+01, -1.1017e+01, -1.1306e+01, -9.7838e+00],
           [-1.0958e+01, -1.2369e+01, -1.1545e+01, -1.1774e+01]]],


         [[[-1.2736e+01, -1.3379e+01, -9.2145e+00, -1.2308e+01],
           [-9.8504e+00, -1.0236e+01, -1.1050e+01, -9.8119e+00],
           [-9.4442e+00, -1.1893e+01, -8.2523e+00, -1.1652e+01],
           ...,
           [-1.1690e+01, -1.0195e+01, -1.1946e+01, -1.2416e+01],
           [-1.0939e+01, -1.2493e+01, -1.1642e+01, -1.1554e+01],
           [-1.1738e+01, -9.7422e+00, -8.4546e+00, -1.1745e+01]],

          [[-1.0064e+01, -1.0985e+01, -8.6191e+00, -1.1325e+01],
           [-9.8841e+00, -1.6712e+00,  1.9084e+00, -2.5496e-01],
           [-3.1644e-01, -6.1849e+00,  3.7462e+00, -6.1815e+00],
           ...,
           [-4.7211e+00, -5.3220e+00, -5.6145e+00, -5.3647e+00],
           [-5.4663e+00, -5.5680e+00, -5.7812e+00, -5.4898e+00],
           [-5.0437e+00, -1.7754e+00, -3.8587e+00, -4.9571e+00]],

          [[-5.2361e+00, -5.3622e+00, -5.3574e+00, -5.3508e+00],
           [-4.8111e+00, -5.7218e+00, -5.4590e+00, -6.4093e+00],
           [-5.0951e+00, -4.4338e+00, -5.6705e+00, -2.6397e+00],
           ...,
           [-7.9075e+00, -1.0254e+01, -9.0163e+00, -1.0668e+01],
           [-9.6564e+00, -1.0388e+01, -9.9811e+00, -8.0174e+00],
           [-1.0315e+01, -1.0998e+01, -7.5927e+00, -8.7030e+00]],

          ...,

          [[-8.4611e+00, -7.4106e+00, -7.6588e+00, -5.6261e+00],
           [-6.1297e+00, -6.8509e+00, -8.2194e+00, -7.1840e+00],
           [-8.1699e+00, -7.7217e+00, -6.4453e+00, -7.8553e+00],
           ...,
           [-6.7517e+00, -4.8016e+00, -4.4188e+00, -4.3398e+00],
           [-5.3328e+00, -6.5873e+00, -6.0003e+00, -4.5368e+00],
           [-5.4994e+00, -6.1108e+00, -5.5826e+00, -5.1714e+00]],

          [[-4.6624e+00, -4.9184e+00, -5.2588e+00, -6.0870e+00],
           [-5.6435e+00, -5.2456e+00, -4.4185e+00, -4.5631e+00],
           [-7.3197e+00, -4.9122e+00, -5.1450e+00, -5.5416e+00],
           ...,
           [-7.0494e+00, -2.9188e+00, -7.9652e+00, -8.5612e+00],
           [-6.7509e+00, -7.2160e+00, -6.0819e+00, -8.4026e+00],
           [-7.3886e+00, -7.4517e+00, -8.4952e+00, -7.4060e+00]],

          [[-8.6836e+00, -6.7774e+00, -1.0869e+01, -7.7690e+00],
           [-7.0506e+00, -4.0175e+00, -5.6256e+00, -8.3347e+00],
           [-7.2904e+00, -8.7954e+00, -7.5387e+00, -8.1637e+00],
           ...,
           [-1.0028e+01, -5.1700e+00, -1.0793e+01, -5.4952e+00],
           [-8.2538e+00, -7.7386e+00, -1.0791e+01, -1.1209e+01],
           [-8.5775e+00, -8.4317e+00, -6.2536e+00, -7.0824e+00]]]]],
       device='cuda:0')
pred_boxes: tensor([[[[[ 0.5046,  0.2942,  0.5881,  0.5126],
           [ 1.4693,  0.3417,  1.6554,  0.3809],
           [ 2.6000,  0.5292,  1.0695,  0.6382],
           ...,
           [49.4930,  0.1841,  3.0959,  0.2722],
           [50.4323,  0.1730,  3.0527,  0.2745],
           [51.7283,  0.3362,  0.5046,  0.7958]],

          [[ 0.3763,  1.4690,  0.4338,  2.8942],
           [ 1.4833,  1.5271,  0.6518,  0.8490],
           [ 2.5604,  1.4025,  0.9013,  1.4445],
           ...,
           [49.4787,  1.4204,  0.8337,  0.9809],
           [50.4706,  1.4793,  1.0990,  0.9008],
           [51.8751,  1.3940,  0.1962,  3.4378]],

          [[ 0.3944,  2.5187,  0.4083,  2.4704],
           [ 1.4456,  2.4264,  0.9249,  1.2662],
           [ 2.5108,  2.3889,  0.7122,  1.6658],
           ...,
           [49.5406,  2.5651,  0.6103,  0.6301],
           [50.3694,  2.5860,  0.8750,  0.5384],
           [51.8868,  2.5126,  0.1237,  3.6299]],

          ...,

          [[ 0.3797, 49.4994,  0.3733,  3.4020],
           [ 1.2679, 49.5205,  1.4493,  1.3429],
           [ 2.4577, 49.6279,  1.1333,  1.0585],
           ...,
           [49.6141, 49.6435,  1.8626,  0.8050],
           [50.5837, 49.5834,  1.3851,  0.9949],
           [51.8357, 49.5350,  0.1914,  2.6813]],

          [[ 0.4825, 50.4642,  0.5308,  2.4023],
           [ 1.3029, 50.6701,  1.5325,  1.0313],
           [ 2.4989, 50.6642,  1.2243,  0.8204],
           ...,
           [49.5693, 50.6503,  0.9102,  0.7208],
           [50.5256, 50.6230,  1.0207,  0.9409],
           [51.7100, 50.4784,  0.3363,  2.3646]],

          [[ 0.6217, 51.5449,  1.0494,  0.7864],
           [ 1.3885, 51.6302,  3.1476,  0.5359],
           [ 2.5267, 51.7265,  4.3305,  0.3009],
           ...,
           [49.5215, 51.8207,  3.4853,  0.2198],
           [50.5537, 51.6638,  2.4611,  0.3563],
           [51.4177, 51.5825,  0.7557,  0.5488]]],


         [[[ 0.5394,  0.6209,  1.0642,  6.2256],
           [ 1.4556,  0.6060,  1.9064,  3.0947],
           [ 2.6028,  0.5748,  1.4820,  3.7582],
           ...,
           [49.5114,  0.4673,  2.1355,  2.7231],
           [50.6004,  0.4972,  2.1233,  2.6521],
           [51.6961,  0.5451,  0.7689,  7.2872]],

          [[ 0.5991,  1.5871,  1.2247,  4.4888],
           [ 1.3001,  1.6054,  2.4453,  3.4416],
           [ 2.5584,  1.6917,  1.5792,  3.4714],
           ...,
           [49.4910,  1.4551,  2.3093,  2.8473],
           [50.6210,  1.4876,  2.4000,  2.9614],
           [51.7320,  1.5319,  0.5738,  9.0937]],

          [[ 0.6671,  2.4934,  1.0029,  6.4792],
           [ 1.2558,  2.4667,  2.2642,  3.9685],
           [ 2.5910,  2.5183,  1.2198,  4.8013],
           ...,
           [49.5222,  2.4339,  2.2210,  3.5832],
           [50.6563,  2.4612,  2.3846,  3.4350],
           [51.7906,  2.5276,  0.3995, 13.3025]],

          ...,

          [[ 0.6544, 49.4947,  0.9935,  5.4014],
           [ 1.1834, 49.6262,  2.5519,  3.8486],
           [ 2.3394, 49.6711,  2.5376,  3.6752],
           ...,
           [49.6115, 49.7010,  2.7595,  2.9678],
           [50.6095, 49.6903,  2.5953,  3.5240],
           [51.5544, 49.5676,  0.7352,  6.1286]],

          [[ 0.7077, 50.3775,  1.2010,  3.9735],
           [ 1.2398, 50.4279,  2.5214,  3.0755],
           [ 2.3647, 50.4578,  2.4807,  2.8184],
           ...,
           [49.5382, 50.3323,  2.5833,  2.4655],
           [50.6219, 50.3409,  2.7641,  2.8839],
           [51.4513, 50.3827,  0.9608,  4.2419]],

          [[ 0.6252, 51.3580,  0.9913,  4.8790],
           [ 1.3978, 51.3578,  2.0142,  2.5732],
           [ 2.5005, 51.4146,  1.9501,  2.6760],
           ...,
           [49.5858, 51.5147,  2.1288,  2.4252],
           [50.5577, 51.4008,  2.1279,  2.4912],
           [51.5248, 51.4120,  0.8860,  5.1373]]],


         [[[ 0.5056,  0.4963,  9.0498,  1.3266],
           [ 1.6543,  0.5869,  5.0017,  1.3851],
           [ 2.4871,  0.5400,  7.2403,  1.3736],
           ...,
           [49.4745,  0.4700,  7.3763,  0.8432],
           [50.2993,  0.4608,  6.8456,  0.9481],
           [51.4106,  0.4170,  9.3615,  1.1586]],

          [[ 0.4712,  1.4674,  4.4088,  2.5333],
           [ 1.6802,  1.5400,  3.5252,  3.1468],
           [ 2.4673,  1.4799,  4.7553,  2.8038],
           ...,
           [49.4396,  1.3410,  5.2947,  2.5940],
           [50.2296,  1.3772,  4.5507,  2.6124],
           [51.4559,  1.4072,  7.2953,  2.1614]],

          [[ 0.4165,  2.4160,  4.5635,  2.3891],
           [ 1.6618,  2.4167,  3.2687,  3.2237],
           [ 2.3863,  2.3443,  4.2071,  2.9664],
           ...,
           [49.4817,  2.3299,  5.3473,  2.6695],
           [50.3129,  2.4290,  4.5385,  2.4517],
           [51.5150,  2.4162,  7.0988,  2.0658]],

          ...,

          [[ 0.5057, 49.4847,  4.0655,  2.6562],
           [ 1.7297, 49.6463,  3.5296,  3.3730],
           [ 2.4519, 49.6790,  5.1187,  3.3520],
           ...,
           [49.6359, 49.7801,  5.4157,  2.4247],
           [50.1501, 49.7259,  3.5864,  2.7279],
           [51.3725, 49.5965,  5.3232,  2.3954]],

          [[ 0.5013, 50.4787,  4.1930,  2.3226],
           [ 1.7513, 50.5333,  3.5965,  2.6282],
           [ 2.5398, 50.6047,  5.0653,  2.2994],
           ...,
           [49.5818, 50.4360,  5.2354,  2.5548],
           [50.1762, 50.4476,  3.6337,  2.6699],
           [51.3240, 50.5390,  4.8623,  2.4271]],

          [[ 0.5068, 51.5225,  8.3461,  1.1174],
           [ 1.6878, 51.4978,  5.4620,  0.9851],
           [ 2.5385, 51.5033,  8.2833,  0.8298],
           ...,
           [49.4756, 51.6794,  8.2446,  0.6719],
           [50.2937, 51.5641,  6.4058,  0.8620],
           [51.3585, 51.6667,  9.5834,  0.8839]]]]], device='cuda:0')
pred_boxes_size: torch.Size([1, 3, 52, 52, 4])
pred_boxes.view(batch_size, -1, 4): tensor([[[ 0.5046,  0.2942,  0.5881,  0.5126],
         [ 1.4693,  0.3417,  1.6554,  0.3809],
         [ 2.6000,  0.5292,  1.0695,  0.6382],
         ...,
         [49.4756, 51.6794,  8.2446,  0.6719],
         [50.2937, 51.5641,  6.4058,  0.8620],
         [51.3585, 51.6667,  9.5834,  0.8839]]], device='cuda:0')
up_size: torch.Size([1, 8112, 4])
conf.view(batch_size, -1, 1): tensor([[[1.4156e-05],
         [1.7501e-05],
         [2.8875e-05],
         ...,
         [4.8843e-06],
         [4.4310e-06],
         [2.5277e-07]]], device='cuda:0')
up_size: torch.Size([1, 8112, 1])
pred_cls.view(batch_size, -1, self.num_classes): tensor([[[0.0699, 0.0033, 0.0362,  ..., 0.0050, 0.0047, 0.0032],
         [0.0628, 0.0026, 0.0164,  ..., 0.0028, 0.0049, 0.0014],
         [0.0369, 0.0012, 0.0047,  ..., 0.0021, 0.0047, 0.0011],
         ...,
         [0.0811, 0.0105, 0.0371,  ..., 0.0004, 0.0004, 0.0002],
         [0.1009, 0.0216, 0.0486,  ..., 0.0006, 0.0019, 0.0020],
         [0.1126, 0.0244, 0.0591,  ..., 0.0015, 0.0057, 0.0065]]],
       device='cuda:0')
up_size: torch.Size([1, 8112, 80])
output: tensor([[[4.0365e+00, 2.3536e+00, 4.7044e+00,  ..., 4.9998e-03,
          4.6807e-03, 3.2286e-03],
         [1.1755e+01, 2.7333e+00, 1.3243e+01,  ..., 2.7686e-03,
          4.8884e-03, 1.4070e-03],
         [2.0800e+01, 4.2336e+00, 8.5561e+00,  ..., 2.0883e-03,
          4.6991e-03, 1.0517e-03],
         ...,
         [3.9581e+02, 4.1344e+02, 6.5957e+01,  ..., 3.8989e-04,
          3.6722e-04, 2.4541e-04],
         [4.0235e+02, 4.1251e+02, 5.1247e+01,  ..., 5.5713e-04,
          1.8623e-03, 1.9866e-03],
         [4.1087e+02, 4.1333e+02, 7.6667e+01,  ..., 1.5146e-03,
          5.7411e-03, 6.5217e-03]]], device='cuda:0')
up_size: torch.Size([1, 8112, 85])
output_list: [tensor([[[1.3478e+01, 2.0237e+01, 1.6536e+02,  ..., 3.0908e-03,
          4.1193e-03, 3.7631e-03],
         [5.2095e+01, 2.3547e+01, 1.3304e+02,  ..., 2.8145e-03,
          3.1190e-03, 1.5285e-03],
         [8.3474e+01, 2.3794e+01, 1.8797e+02,  ..., 3.4963e-03,
          3.1008e-03, 1.2002e-03],
         ...,
         [3.3363e+02, 4.0203e+02, 3.1219e+02,  ..., 2.2314e-04,
          6.8903e-04, 3.0381e-04],
         [3.7139e+02, 4.0134e+02, 2.7432e+02,  ..., 1.5585e-03,
          2.2613e-03, 8.6090e-04],
         [4.0059e+02, 3.9722e+02, 3.5208e+02,  ..., 2.7119e-02,
          8.3832e-03, 8.3005e-03]]], device='cuda:0'), tensor([[[8.6965e+00, 1.1194e+01, 2.1610e+01,  ..., 1.9414e-03,
          4.1810e-03, 1.5336e-03],
         [2.2008e+01, 1.1068e+01, 2.5077e+01,  ..., 1.8708e-03,
          5.4690e-03, 9.3695e-04],
         [3.7219e+01, 9.9564e+00, 2.2400e+01,  ..., 4.8466e-03,
          5.1711e-03, 2.1046e-03],
         ...,
         [3.7733e+02, 4.1042e+02, 4.9236e+01,  ..., 1.5066e-03,
          9.9467e-04, 2.7934e-04],
         [3.9214e+02, 4.0905e+02, 4.2471e+01,  ..., 6.9517e-03,
          1.2432e-03, 7.2760e-04],
         [4.0695e+02, 4.0805e+02, 2.6021e+01,  ..., 1.8776e-02,
          1.0443e-03, 6.7953e-04]]], device='cuda:0'), tensor([[[4.0365e+00, 2.3536e+00, 4.7044e+00,  ..., 4.9998e-03,
          4.6807e-03, 3.2286e-03],
         [1.1755e+01, 2.7333e+00, 1.3243e+01,  ..., 2.7686e-03,
          4.8884e-03, 1.4070e-03],
         [2.0800e+01, 4.2336e+00, 8.5561e+00,  ..., 2.0883e-03,
          4.6991e-03, 1.0517e-03],
         ...,
         [3.9581e+02, 4.1344e+02, 6.5957e+01,  ..., 3.8989e-04,
          3.6722e-04, 2.4541e-04],
         [4.0235e+02, 4.1251e+02, 5.1247e+01,  ..., 5.5713e-04,
          1.8623e-03, 1.9866e-03],
         [4.1087e+02, 4.1333e+02, 7.6667e+01,  ..., 1.5146e-03,
          5.7411e-03, 6.5217e-03]]], device='cuda:0')]
outputall: tensor([[[1.3478e+01, 2.0237e+01, 1.6536e+02,  ..., 3.0908e-03,
          4.1193e-03, 3.7631e-03],
         [5.2095e+01, 2.3547e+01, 1.3304e+02,  ..., 2.8145e-03,
          3.1190e-03, 1.5285e-03],
         [8.3474e+01, 2.3794e+01, 1.8797e+02,  ..., 3.4963e-03,
          3.1008e-03, 1.2002e-03],
         ...,
         [3.9581e+02, 4.1344e+02, 6.5957e+01,  ..., 3.8989e-04,
          3.6722e-04, 2.4541e-04],
         [4.0235e+02, 4.1251e+02, 5.1247e+01,  ..., 5.5713e-04,
          1.8623e-03, 1.9866e-03],
         [4.1087e+02, 4.1333e+02, 7.6667e+01,  ..., 1.5146e-03,
          5.7411e-03, 6.5217e-03]]], device='cuda:0')
output_size: torch.Size([1, 10647, 85])
batch_detections: [tensor([[2.4368e+01, 1.6797e+02, 8.4563e+01, 2.9811e+02, 9.9966e-01, 9.9998e-01,
         0.0000e+00],
        [2.8477e+02, 1.5642e+02, 3.6046e+02, 3.1049e+02, 9.9960e-01, 9.9999e-01,
         0.0000e+00],
        [1.5713e+02, 1.6347e+02, 2.0733e+02, 2.7020e+02, 9.9225e-01, 9.9995e-01,
         0.0000e+00],
        [1.3654e+02, 1.6564e+02, 1.7356e+02, 2.7249e+02, 9.8432e-01, 9.9991e-01,
         0.0000e+00],
        [1.1945e+02, 1.7913e+02, 1.3158e+02, 2.1723e+02, 9.7268e-01, 9.9993e-01,
         0.0000e+00],
        [1.0390e+02, 1.7771e+02, 1.1477e+02, 2.1709e+02, 9.4489e-01, 9.9978e-01,
         0.0000e+00],
        [1.1085e+02, 1.7795e+02, 1.2062e+02, 2.1561e+02, 8.9083e-01, 9.9990e-01,
         0.0000e+00],
        [6.8493e+01, 1.8071e+02, 8.2606e+01, 2.1603e+02, 7.6416e-01, 9.9741e-01,
         0.0000e+00],
        [2.4441e+02, 2.2482e+02, 3.8912e+02, 3.2443e+02, 9.9891e-01, 9.9981e-01,
         1.0000e+00],
        [2.0537e+02, 1.8278e+02, 3.0059e+02, 2.4081e+02, 9.8974e-01, 9.9549e-01,
         2.0000e+00],
        [1.8214e+02, 1.6956e+02, 2.4430e+02, 2.2714e+02, 9.3306e-01, 9.8885e-01,
         2.0000e+00],
        [1.0942e-01, 1.8847e+02, 1.4550e+01, 2.1490e+02, 8.3737e-01, 9.8151e-01,
         2.0000e+00]], device='cuda:0')]
batch_detections[0]_size: torch.Size([12, 7])
batch_detections[:, 4]: [0.99966156 0.9995964  0.9922506  0.98432237 0.97268254 0.9448944
 0.89083326 0.76416326 0.99891233 0.9897372  0.93305784 0.837368  ]
[:, 4]_size: (12,)
batch_detections[:, 5]: [0.99997544 0.9999932  0.99994576 0.99991274 0.9999294  0.99978286
 0.9999043  0.9974111  0.9998116  0.99549025 0.9888509  0.98151267]
[:, 5]_size: (12,)
self.confidence: 0.5
Traceback (most recent call last):
  File "D:\yolo3-pytorch-master\predict.py", line 53, in <module>
    r_image = yolo.detect_image(image)
  File "D:\yolo3-pytorch-master\yolo.py", line 198, in detect_image
    print('self.confidence_size:',self.confidence.shape)
AttributeError: 'float' object has no attribute 'shape'
>>> 
================ RESTART: D:\yolo3-pytorch-master\predict.py ================
DarkNet(
  (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu1): LeakyReLU(negative_slope=0.1)
  (layer1): Sequential(
    (ds_conv): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (ds_bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (ds_relu): LeakyReLU(negative_slope=0.1)
    (residual_0): BasicBlock(
      (conv1): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
  )
  (layer2): Sequential(
    (ds_conv): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (ds_bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (ds_relu): LeakyReLU(negative_slope=0.1)
    (residual_0): BasicBlock(
      (conv1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
    (residual_1): BasicBlock(
      (conv1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
  )
  (layer3): Sequential(
    (ds_conv): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (ds_bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (ds_relu): LeakyReLU(negative_slope=0.1)
    (residual_0): BasicBlock(
      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
    (residual_1): BasicBlock(
      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
    (residual_2): BasicBlock(
      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
    (residual_3): BasicBlock(
      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
    (residual_4): BasicBlock(
      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
    (residual_5): BasicBlock(
      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
    (residual_6): BasicBlock(
      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
    (residual_7): BasicBlock(
      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
  )
  (layer4): Sequential(
    (ds_conv): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (ds_bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (ds_relu): LeakyReLU(negative_slope=0.1)
    (residual_0): BasicBlock(
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
    (residual_1): BasicBlock(
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
    (residual_2): BasicBlock(
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
    (residual_3): BasicBlock(
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
    (residual_4): BasicBlock(
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
    (residual_5): BasicBlock(
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
    (residual_6): BasicBlock(
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
    (residual_7): BasicBlock(
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
  )
  (layer5): Sequential(
    (ds_conv): Conv2d(512, 1024, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (ds_bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (ds_relu): LeakyReLU(negative_slope=0.1)
    (residual_0): BasicBlock(
      (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
    (residual_1): BasicBlock(
      (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
    (residual_2): BasicBlock(
      (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
    (residual_3): BasicBlock(
      (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): LeakyReLU(negative_slope=0.1)
      (conv2): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): LeakyReLU(negative_slope=0.1)
    )
  )
)
YoloBody(
  (backbone): DarkNet(
    (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu1): LeakyReLU(negative_slope=0.1)
    (layer1): Sequential(
      (ds_conv): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (ds_bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (ds_relu): LeakyReLU(negative_slope=0.1)
      (residual_0): BasicBlock(
        (conv1): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
    )
    (layer2): Sequential(
      (ds_conv): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (ds_bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (ds_relu): LeakyReLU(negative_slope=0.1)
      (residual_0): BasicBlock(
        (conv1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
      (residual_1): BasicBlock(
        (conv1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
    )
    (layer3): Sequential(
      (ds_conv): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (ds_bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (ds_relu): LeakyReLU(negative_slope=0.1)
      (residual_0): BasicBlock(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
      (residual_1): BasicBlock(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
      (residual_2): BasicBlock(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
      (residual_3): BasicBlock(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
      (residual_4): BasicBlock(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
      (residual_5): BasicBlock(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
      (residual_6): BasicBlock(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
      (residual_7): BasicBlock(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
    )
    (layer4): Sequential(
      (ds_conv): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (ds_bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (ds_relu): LeakyReLU(negative_slope=0.1)
      (residual_0): BasicBlock(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
      (residual_1): BasicBlock(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
      (residual_2): BasicBlock(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
      (residual_3): BasicBlock(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
      (residual_4): BasicBlock(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
      (residual_5): BasicBlock(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
      (residual_6): BasicBlock(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
      (residual_7): BasicBlock(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
    )
    (layer5): Sequential(
      (ds_conv): Conv2d(512, 1024, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (ds_bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (ds_relu): LeakyReLU(negative_slope=0.1)
      (residual_0): BasicBlock(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
      (residual_1): BasicBlock(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
      (residual_2): BasicBlock(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
      (residual_3): BasicBlock(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): LeakyReLU(negative_slope=0.1)
        (conv2): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): LeakyReLU(negative_slope=0.1)
      )
    )
  )
  (last_layer0): ModuleList(
    (0): Sequential(
      (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.1)
    )
    (1): Sequential(
      (conv): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.1)
    )
    (2): Sequential(
      (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.1)
    )
    (3): Sequential(
      (conv): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.1)
    )
    (4): Sequential(
      (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.1)
    )
    (5): Sequential(
      (conv): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.1)
    )
    (6): Conv2d(1024, 50, kernel_size=(1, 1), stride=(1, 1))
  )
  (last_layer1_conv): Sequential(
    (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): LeakyReLU(negative_slope=0.1)
  )
  (last_layer1_upsample): Upsample(scale_factor=2.0, mode=nearest)
  (last_layer1): ModuleList(
    (0): Sequential(
      (conv): Conv2d(768, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.1)
    )
    (1): Sequential(
      (conv): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.1)
    )
    (2): Sequential(
      (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.1)
    )
    (3): Sequential(
      (conv): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.1)
    )
    (4): Sequential(
      (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.1)
    )
    (5): Sequential(
      (conv): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.1)
    )
    (6): Conv2d(512, 50, kernel_size=(1, 1), stride=(1, 1))
  )
  (last_layer2_conv): Sequential(
    (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): LeakyReLU(negative_slope=0.1)
  )
  (last_layer2_upsample): Upsample(scale_factor=2.0, mode=nearest)
  (last_layer2): ModuleList(
    (0): Sequential(
      (conv): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.1)
    )
    (1): Sequential(
      (conv): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.1)
    )
    (2): Sequential(
      (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.1)
    )
    (3): Sequential(
      (conv): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.1)
    )
    (4): Sequential(
      (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.1)
    )
    (5): Sequential(
      (conv): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): LeakyReLU(negative_slope=0.1)
    )
    (6): Conv2d(256, 50, kernel_size=(1, 1), stride=(1, 1))
  )
)
use the get_dafaults
use the get_dafaults
use the get_dafaults
Loading weights into state dict...
self.anchors[i]: [[116.  90.]
 [156. 198.]
 [373. 326.]]
self.anchors[i]: [[ 30.  61.]
 [ 62.  45.]
 [ 59. 119.]]
self.anchors[i]: [[10. 13.]
 [16. 30.]
 [33. 23.]]
model_data/yolo_weights.pth model, anchors, and classes loaded.
Input image filename:C:\Users\不羡仙\Desktop\street.jpg
image: <PIL.Image.Image image mode=RGB size=1330x1330 at 0x1A3AB02A320>
image_shape: [1330 1330]
crop_img: <PIL.Image.Image image mode=RGB size=416x416 at 0x1A3AB02A0F0>
photonorm: [[[1.         1.         1.        ]
  [1.         1.         1.        ]
  [1.         1.         1.        ]
  ...
  [0.14901961 0.18431373 0.21176471]
  [0.16470589 0.2        0.22745098]
  [0.17254902 0.21568628 0.23921569]]

 [[1.         1.         1.        ]
  [1.         1.         1.        ]
  [1.         1.         1.        ]
  ...
  [0.18039216 0.21568628 0.24313726]
  [0.18431373 0.21960784 0.2509804 ]
  [0.19215687 0.22745098 0.25882354]]

 [[1.         1.         1.        ]
  [1.         1.         1.        ]
  [1.         1.         1.        ]
  ...
  [0.2        0.23529412 0.27058825]
  [0.2        0.23529412 0.27058825]
  [0.2        0.23529412 0.27058825]]

 ...

 [[0.5764706  0.5764706  0.57254905]
  [0.5921569  0.5921569  0.5882353 ]
  [0.6        0.6        0.59607846]
  ...
  [0.47843137 0.47843137 0.4862745 ]
  [0.4862745  0.4862745  0.49411765]
  [0.46666667 0.46666667 0.4745098 ]]

 [[0.5882353  0.5882353  0.58431375]
  [0.58431375 0.58431375 0.5803922 ]
  [0.6117647  0.6117647  0.6117647 ]
  ...
  [0.4862745  0.4862745  0.49411765]
  [0.4862745  0.4862745  0.49411765]
  [0.52156866 0.52156866 0.5294118 ]]

 [[0.58431375 0.58431375 0.58431375]
  [0.5882353  0.5882353  0.59607846]
  [0.59607846 0.59607846 0.6039216 ]
  ...
  [0.4862745  0.4862745  0.49411765]
  [0.49803922 0.49803922 0.5058824 ]
  [0.49803922 0.49803922 0.5058824 ]]]
phototrans: [[[1.         1.         1.         ... 0.14901961 0.16470589 0.17254902]
  [1.         1.         1.         ... 0.18039216 0.18431373 0.19215687]
  [1.         1.         1.         ... 0.2        0.2        0.2       ]
  ...
  [0.5764706  0.5921569  0.6        ... 0.47843137 0.4862745  0.46666667]
  [0.5882353  0.58431375 0.6117647  ... 0.4862745  0.4862745  0.52156866]
  [0.58431375 0.5882353  0.59607846 ... 0.4862745  0.49803922 0.49803922]]

 [[1.         1.         1.         ... 0.18431373 0.2        0.21568628]
  [1.         1.         1.         ... 0.21568628 0.21960784 0.22745098]
  [1.         1.         1.         ... 0.23529412 0.23529412 0.23529412]
  ...
  [0.5764706  0.5921569  0.6        ... 0.47843137 0.4862745  0.46666667]
  [0.5882353  0.58431375 0.6117647  ... 0.4862745  0.4862745  0.52156866]
  [0.58431375 0.5882353  0.59607846 ... 0.4862745  0.49803922 0.49803922]]

 [[1.         1.         1.         ... 0.21176471 0.22745098 0.23921569]
  [1.         1.         1.         ... 0.24313726 0.2509804  0.25882354]
  [1.         1.         1.         ... 0.27058825 0.27058825 0.27058825]
  ...
  [0.57254905 0.5882353  0.59607846 ... 0.4862745  0.49411765 0.4745098 ]
  [0.58431375 0.5803922  0.6117647  ... 0.49411765 0.49411765 0.5294118 ]
  [0.58431375 0.59607846 0.6039216  ... 0.49411765 0.5058824  0.5058824 ]]]
images_batch: [array([[[1.        , 1.        , 1.        , ..., 0.14901961,
         0.16470589, 0.17254902],
        [1.        , 1.        , 1.        , ..., 0.18039216,
         0.18431373, 0.19215687],
        [1.        , 1.        , 1.        , ..., 0.2       ,
         0.2       , 0.2       ],
        ...,
        [0.5764706 , 0.5921569 , 0.6       , ..., 0.47843137,
         0.4862745 , 0.46666667],
        [0.5882353 , 0.58431375, 0.6117647 , ..., 0.4862745 ,
         0.4862745 , 0.52156866],
        [0.58431375, 0.5882353 , 0.59607846, ..., 0.4862745 ,
         0.49803922, 0.49803922]],

       [[1.        , 1.        , 1.        , ..., 0.18431373,
         0.2       , 0.21568628],
        [1.        , 1.        , 1.        , ..., 0.21568628,
         0.21960784, 0.22745098],
        [1.        , 1.        , 1.        , ..., 0.23529412,
         0.23529412, 0.23529412],
        ...,
        [0.5764706 , 0.5921569 , 0.6       , ..., 0.47843137,
         0.4862745 , 0.46666667],
        [0.5882353 , 0.58431375, 0.6117647 , ..., 0.4862745 ,
         0.4862745 , 0.52156866],
        [0.58431375, 0.5882353 , 0.59607846, ..., 0.4862745 ,
         0.49803922, 0.49803922]],

       [[1.        , 1.        , 1.        , ..., 0.21176471,
         0.22745098, 0.23921569],
        [1.        , 1.        , 1.        , ..., 0.24313726,
         0.2509804 , 0.25882354],
        [1.        , 1.        , 1.        , ..., 0.27058825,
         0.27058825, 0.27058825],
        ...,
        [0.57254905, 0.5882353 , 0.59607846, ..., 0.4862745 ,
         0.49411765, 0.4745098 ],
        [0.58431375, 0.5803922 , 0.6117647 , ..., 0.49411765,
         0.49411765, 0.5294118 ],
        [0.58431375, 0.59607846, 0.6039216 , ..., 0.49411765,
         0.5058824 , 0.5058824 ]]], dtype=float32)]
imagestorch: tensor([[[[1.0000, 1.0000, 1.0000,  ..., 0.1490, 0.1647, 0.1725],
          [1.0000, 1.0000, 1.0000,  ..., 0.1804, 0.1843, 0.1922],
          [1.0000, 1.0000, 1.0000,  ..., 0.2000, 0.2000, 0.2000],
          ...,
          [0.5765, 0.5922, 0.6000,  ..., 0.4784, 0.4863, 0.4667],
          [0.5882, 0.5843, 0.6118,  ..., 0.4863, 0.4863, 0.5216],
          [0.5843, 0.5882, 0.5961,  ..., 0.4863, 0.4980, 0.4980]],

         [[1.0000, 1.0000, 1.0000,  ..., 0.1843, 0.2000, 0.2157],
          [1.0000, 1.0000, 1.0000,  ..., 0.2157, 0.2196, 0.2275],
          [1.0000, 1.0000, 1.0000,  ..., 0.2353, 0.2353, 0.2353],
          ...,
          [0.5765, 0.5922, 0.6000,  ..., 0.4784, 0.4863, 0.4667],
          [0.5882, 0.5843, 0.6118,  ..., 0.4863, 0.4863, 0.5216],
          [0.5843, 0.5882, 0.5961,  ..., 0.4863, 0.4980, 0.4980]],

         [[1.0000, 1.0000, 1.0000,  ..., 0.2118, 0.2275, 0.2392],
          [1.0000, 1.0000, 1.0000,  ..., 0.2431, 0.2510, 0.2588],
          [1.0000, 1.0000, 1.0000,  ..., 0.2706, 0.2706, 0.2706],
          ...,
          [0.5725, 0.5882, 0.5961,  ..., 0.4863, 0.4941, 0.4745],
          [0.5843, 0.5804, 0.6118,  ..., 0.4941, 0.4941, 0.5294],
          [0.5843, 0.5961, 0.6039,  ..., 0.4941, 0.5059, 0.5059]]]])
imagescuda: tensor([[[[1.0000, 1.0000, 1.0000,  ..., 0.1490, 0.1647, 0.1725],
          [1.0000, 1.0000, 1.0000,  ..., 0.1804, 0.1843, 0.1922],
          [1.0000, 1.0000, 1.0000,  ..., 0.2000, 0.2000, 0.2000],
          ...,
          [0.5765, 0.5922, 0.6000,  ..., 0.4784, 0.4863, 0.4667],
          [0.5882, 0.5843, 0.6118,  ..., 0.4863, 0.4863, 0.5216],
          [0.5843, 0.5882, 0.5961,  ..., 0.4863, 0.4980, 0.4980]],

         [[1.0000, 1.0000, 1.0000,  ..., 0.1843, 0.2000, 0.2157],
          [1.0000, 1.0000, 1.0000,  ..., 0.2157, 0.2196, 0.2275],
          [1.0000, 1.0000, 1.0000,  ..., 0.2353, 0.2353, 0.2353],
          ...,
          [0.5765, 0.5922, 0.6000,  ..., 0.4784, 0.4863, 0.4667],
          [0.5882, 0.5843, 0.6118,  ..., 0.4863, 0.4863, 0.5216],
          [0.5843, 0.5882, 0.5961,  ..., 0.4863, 0.4980, 0.4980]],

         [[1.0000, 1.0000, 1.0000,  ..., 0.2118, 0.2275, 0.2392],
          [1.0000, 1.0000, 1.0000,  ..., 0.2431, 0.2510, 0.2588],
          [1.0000, 1.0000, 1.0000,  ..., 0.2706, 0.2706, 0.2706],
          ...,
          [0.5725, 0.5882, 0.5961,  ..., 0.4863, 0.4941, 0.4745],
          [0.5843, 0.5804, 0.6118,  ..., 0.4941, 0.4941, 0.5294],
          [0.5843, 0.5961, 0.6039,  ..., 0.4941, 0.5059, 0.5059]]]],
       device='cuda:0')
input: tensor([[[[ -0.3180,   0.5235,   0.4413,  ...,   0.4291,  -0.8028,  -0.1594],
          [ -0.2616,   0.5125,   0.4825,  ...,   0.6654,  -0.9139,  -0.3982],
          [ -0.3928,   0.5546,   0.4167,  ...,   0.9203,  -0.3512,  -0.6636],
          ...,
          [ -0.5403,   0.1387,  -0.5573,  ...,  -0.7086,  -0.6497,  -0.0481],
          [ -0.6344,   0.1138,   0.0183,  ...,  -0.2939,  -0.7829,   0.3575],
          [ -0.2489,   1.1099,   0.5403,  ...,  -0.2362,  -0.6690,   0.2580]],

         [[  0.5426,   1.0245,   1.0645,  ...,   0.8405,   0.8867,  -0.1318],
          [ -0.0141,  -0.0246,   0.0410,  ...,   0.0790,   0.8027,   0.6092],
          [  0.4862,   0.2018,   0.1902,  ...,  -0.6030,  -0.7783,  -0.3642],
          ...,
          [  0.4564,   0.1596,   0.0127,  ...,  -0.0316,   0.7198,   0.3725],
          [  0.1022,  -0.3097,   0.6234,  ...,   0.2616,   0.3523,   0.8018],
          [ -0.7432,  -0.7764,  -0.4287,  ...,  -0.2368,  -0.8605,  -0.5373]],

         [[  0.3545,   0.1370,   0.4827,  ...,   0.3631,   0.1227,   0.5435],
          [  0.0829,  -0.1581,   0.2271,  ...,   0.2555,  -0.0435,   0.3578],
          [  0.1382,  -0.1243,   0.1808,  ...,   0.1836,  -0.1163,   0.2197],
          ...,
          [ -0.1061,  -0.1734,   0.1598,  ...,   0.3378,  -0.0644,   0.3244],
          [ -0.2151,  -0.1416,   0.2629,  ...,   0.3304,  -0.1378,   0.2539],
          [  0.1487,   0.1414,   0.3626,  ...,   0.4697,   0.1702,   0.5418]],

         ...,

         [[ -4.5642,  -4.6301,  -4.2732,  ...,  -5.1009,  -5.1620,  -3.6537],
          [ -4.3771,  -4.6559,  -4.2298,  ...,  -6.3485,  -6.4930,  -4.5303],
          [ -4.0680,  -4.3774,  -4.2560,  ...,  -7.3588,  -7.7401,  -5.1450],
          ...,
          [ -4.7219,  -6.7858,  -7.6364,  ..., -12.6375,  -9.3036,  -5.8292],
          [ -5.6208,  -7.5618,  -9.0496,  ..., -11.3560,  -9.2251,  -5.5086],
          [ -5.4132,  -7.0614,  -9.3036,  ...,  -8.4075,  -6.4625,  -3.5800]],

         [[ -5.1100,  -5.4665,  -5.5741,  ...,  -6.5227,  -6.4222,  -5.3222],
          [ -5.1322,  -5.5975,  -5.8859,  ...,  -6.8842,  -6.7407,  -5.4836],
          [ -5.5378,  -6.3089,  -6.6473,  ...,  -7.5569,  -7.0253,  -5.5416],
          ...,
          [ -5.6665,  -7.0529,  -7.6313,  ..., -10.3407,  -8.4265,  -6.4124],
          [ -5.5065,  -7.5725,  -8.0733,  ...,  -9.1147,  -7.3722,  -5.9326],
          [ -5.1529,  -6.9624,  -7.6522,  ...,  -7.2795,  -6.0896,  -4.7731]],

         [[ -4.4107,  -4.8478,  -5.5157,  ...,  -6.4640,  -6.1726,  -4.4605],
          [ -4.5054,  -5.4545,  -6.2256,  ...,  -7.7997,  -7.6222,  -5.3276],
          [ -4.7113,  -5.8510,  -6.9439,  ...,  -8.7653,  -8.1834,  -5.4633],
          ...,
          [ -5.1498,  -7.0786,  -7.7451,  ..., -11.2167,  -9.3005,  -6.2412],
          [ -5.4353,  -7.9227,  -8.5884,  ..., -10.1535,  -8.6558,  -6.0309],
          [ -4.9323,  -7.2379,  -7.8492,  ...,  -8.0988,  -7.0567,  -4.7831]]]],
       device='cuda:0')
input_size: torch.Size([1, 255, 13, 13])
scaled_anchors: [(3.625, 2.8125), (4.875, 6.1875), (11.65625, 10.1875)]
prediction: tensor([[[[[-3.1796e-01,  5.4260e-01,  3.5451e-01,  ..., -5.7762e+00,
            -5.4879e+00, -5.5787e+00],
           [ 5.2352e-01,  1.0245e+00,  1.3704e-01,  ..., -5.8701e+00,
            -5.7671e+00, -6.4820e+00],
           [ 4.4132e-01,  1.0645e+00,  4.8270e-01,  ..., -5.6526e+00,
            -5.7730e+00, -6.7241e+00],
           ...,
           [ 4.2908e-01,  8.4050e-01,  3.6309e-01,  ..., -6.6736e+00,
            -6.7696e+00, -7.3911e+00],
           [-8.0275e-01,  8.8672e-01,  1.2272e-01,  ..., -6.7508e+00,
            -6.8114e+00, -6.9079e+00],
           [-1.5942e-01, -1.3175e-01,  5.4350e-01,  ..., -3.8134e+00,
            -5.8197e+00, -4.9307e+00]],

          [[-2.6157e-01, -1.4067e-02,  8.2927e-02,  ..., -4.7476e+00,
            -5.2547e+00, -5.1764e+00],
           [ 5.1255e-01, -2.4641e-02, -1.5808e-01,  ..., -5.3956e+00,
            -5.5567e+00, -6.6618e+00],
           [ 4.8252e-01,  4.1025e-02,  2.2713e-01,  ..., -5.1306e+00,
            -5.7474e+00, -6.8220e+00],
           ...,
           [ 6.6535e-01,  7.8993e-02,  2.5549e-01,  ..., -6.7770e+00,
            -6.9538e+00, -8.7912e+00],
           [-9.1392e-01,  8.0275e-01, -4.3494e-02,  ..., -7.7152e+00,
            -7.2049e+00, -8.8157e+00],
           [-3.9815e-01,  6.0921e-01,  3.5783e-01,  ..., -4.1679e+00,
            -5.7542e+00, -5.6142e+00]],

          [[-3.9276e-01,  4.8615e-01,  1.3816e-01,  ..., -3.4465e+00,
            -4.6981e+00, -4.7848e+00],
           [ 5.5459e-01,  2.0181e-01, -1.2431e-01,  ..., -3.7928e+00,
            -4.9479e+00, -5.9874e+00],
           [ 4.1671e-01,  1.9021e-01,  1.8081e-01,  ..., -3.4803e+00,
            -5.1992e+00, -6.1175e+00],
           ...,
           [ 9.2026e-01, -6.0296e-01,  1.8362e-01,  ..., -6.3750e+00,
            -6.7911e+00, -8.8979e+00],
           [-3.5123e-01, -7.7832e-01, -1.1628e-01,  ..., -8.3156e+00,
            -7.2097e+00, -9.4550e+00],
           [-6.6357e-01, -3.6419e-01,  2.1971e-01,  ..., -4.7544e+00,
            -5.6542e+00, -5.9506e+00]],

          ...,

          [[-5.4034e-01,  4.5636e-01, -1.0611e-01,  ..., -4.6365e+00,
            -7.0130e+00, -6.9517e+00],
           [ 1.3869e-01,  1.5963e-01, -1.7345e-01,  ..., -6.9786e+00,
            -8.3398e+00, -8.6338e+00],
           [-5.5731e-01,  1.2657e-02,  1.5982e-01,  ..., -7.1117e+00,
            -8.0388e+00, -8.6524e+00],
           ...,
           [-7.0859e-01, -3.1601e-02,  3.3781e-01,  ..., -9.3844e+00,
            -1.1092e+01, -1.1249e+01],
           [-6.4973e-01,  7.1979e-01, -6.4353e-02,  ..., -7.4518e+00,
            -9.0974e+00, -9.7273e+00],
           [-4.8139e-02,  3.7247e-01,  3.2444e-01,  ..., -4.1088e+00,
            -6.3650e+00, -6.7458e+00]],

          [[-6.3440e-01,  1.0223e-01, -2.1515e-01,  ..., -4.3145e+00,
            -7.5606e+00, -7.3248e+00],
           [ 1.1375e-01, -3.0972e-01, -1.4159e-01,  ..., -7.1093e+00,
            -9.1606e+00, -9.0231e+00],
           [ 1.8269e-02,  6.2338e-01,  2.6289e-01,  ..., -9.0364e+00,
            -9.8036e+00, -9.6144e+00],
           ...,
           [-2.9386e-01,  2.6165e-01,  3.3043e-01,  ..., -1.1425e+01,
            -1.0951e+01, -1.0376e+01],
           [-7.8289e-01,  3.5230e-01, -1.3782e-01,  ..., -9.0858e+00,
            -8.7333e+00, -9.5280e+00],
           [ 3.5750e-01,  8.0181e-01,  2.5394e-01,  ..., -4.9524e+00,
            -6.4834e+00, -6.9550e+00]],

          [[-2.4891e-01, -7.4321e-01,  1.4872e-01,  ..., -4.4130e+00,
            -7.2910e+00, -6.5017e+00],
           [ 1.1099e+00, -7.7644e-01,  1.4135e-01,  ..., -6.9363e+00,
            -8.8772e+00, -8.2315e+00],
           [ 5.4031e-01, -4.2874e-01,  3.6257e-01,  ..., -1.0062e+01,
            -1.0008e+01, -9.4144e+00],
           ...,
           [-2.3618e-01, -2.3677e-01,  4.6967e-01,  ..., -8.8906e+00,
            -9.4623e+00, -8.1620e+00],
           [-6.6896e-01, -8.6054e-01,  1.7021e-01,  ..., -7.0525e+00,
            -7.8536e+00, -7.7099e+00],
           [ 2.5798e-01, -5.3727e-01,  5.4184e-01,  ..., -4.1949e+00,
            -6.2791e+00, -5.8015e+00]]],


         [[[ 2.7235e-01, -1.2071e-01, -2.2797e-01,  ..., -5.7586e+00,
            -5.8779e+00, -4.7408e+00],
           [ 5.4280e-01, -8.3615e-03, -1.9094e-01,  ..., -5.8038e+00,
            -6.1919e+00, -5.1207e+00],
           [ 5.8361e-01,  9.8043e-02,  8.3303e-02,  ..., -5.3722e+00,
            -6.0803e+00, -5.6165e+00],
           ...,
           [ 2.7105e-01,  3.1739e-01, -7.1897e-03,  ..., -5.3273e+00,
            -6.7272e+00, -6.2098e+00],
           [-3.5286e-01, -7.3089e-02, -1.4833e-01,  ..., -5.3819e+00,
            -6.7030e+00, -5.6400e+00],
           [ 2.7583e-01, -1.8046e-01, -1.1919e-01,  ..., -3.8811e+00,
            -5.6752e+00, -4.1443e+00]],

          [[ 6.0547e-01,  4.0192e-01, -1.4506e-01,  ..., -5.4438e+00,
            -6.0250e+00, -4.5855e+00],
           [ 3.7773e-01,  9.2453e-01, -9.0083e-02,  ..., -5.6764e+00,
            -6.2235e+00, -5.4092e+00],
           [ 6.0819e-01,  9.7679e-01,  1.9163e-01,  ..., -4.9366e+00,
            -6.1651e+00, -6.0780e+00],
           ...,
           [ 1.2249e-01,  1.3884e+00,  1.2879e-01,  ..., -6.1661e+00,
            -7.1805e+00, -7.8710e+00],
           [-9.9650e-01,  1.5530e+00, -7.1082e-02,  ..., -6.6930e+00,
            -7.2436e+00, -7.6783e+00],
           [ 5.6503e-02,  5.1000e-01,  9.5419e-03,  ..., -4.3778e+00,
            -5.6841e+00, -4.8309e+00]],

          [[ 6.5108e-01,  4.5816e-01, -2.8589e-01,  ..., -4.4150e+00,
            -5.6188e+00, -4.1865e+00],
           [ 4.7061e-01,  5.7953e-01, -2.9178e-01,  ..., -4.3347e+00,
            -5.9032e+00, -4.9314e+00],
           [ 4.5976e-01,  1.7201e-01,  9.4741e-02,  ..., -3.7325e+00,
            -6.0324e+00, -5.9831e+00],
           ...,
           [ 1.5954e-02, -6.1250e-03,  1.0515e-01,  ..., -6.4264e+00,
            -7.6919e+00, -8.3997e+00],
           [-8.1938e-01,  5.2259e-01, -1.9566e-01,  ..., -7.7369e+00,
            -7.7302e+00, -8.5187e+00],
           [-3.3038e-01, -1.3579e-01, -9.3376e-02,  ..., -5.2765e+00,
            -5.9647e+00, -5.0409e+00]],

          ...,

          [[ 6.2660e-01,  2.7419e-01, -3.5003e-01,  ..., -5.9125e+00,
            -7.0177e+00, -6.6670e+00],
           [ 3.6905e-01, -1.3179e-01, -4.1275e-01,  ..., -7.7509e+00,
            -8.3348e+00, -8.2085e+00],
           [-3.7557e-01,  4.7733e-01, -2.5036e-02,  ..., -7.8731e+00,
            -8.3617e+00, -8.5166e+00],
           ...,
           [-1.1976e+00, -6.7171e-01,  1.1729e-02,  ..., -1.1186e+01,
            -1.0828e+01, -1.1089e+01],
           [-5.2107e-01, -8.2734e-02, -1.6763e-01,  ..., -8.9099e+00,
            -9.2838e+00, -9.8486e+00],
           [-1.8533e-01,  1.1701e-01, -3.6535e-01,  ..., -5.3974e+00,
            -6.7975e+00, -6.3322e+00]],

          [[ 6.0274e-01, -4.2734e-01, -2.5391e-01,  ..., -6.2525e+00,
            -7.0630e+00, -7.0781e+00],
           [ 7.4534e-01, -1.2470e+00, -2.4655e-01,  ..., -8.0371e+00,
            -8.6409e+00, -8.7134e+00],
           [ 9.6222e-02, -1.1040e+00, -3.5528e-02,  ..., -9.4098e+00,
            -9.4450e+00, -9.1231e+00],
           ...,
           [-1.1395e+00, -7.2670e-01,  1.2891e-01,  ..., -1.1544e+01,
            -1.0368e+01, -1.0191e+01],
           [-7.6669e-01, -5.0881e-01, -2.0061e-01,  ..., -9.3868e+00,
            -8.3319e+00, -9.1083e+00],
           [ 2.9448e-01, -5.2855e-01, -1.9109e-01,  ..., -5.7894e+00,
            -6.3702e+00, -6.2742e+00]],

          [[ 4.4405e-01,  5.1251e-02, -2.5901e-01,  ..., -5.5701e+00,
            -6.7601e+00, -6.4604e+00],
           [ 7.4527e-01,  9.7430e-02, -2.2669e-01,  ..., -7.1152e+00,
            -8.2618e+00, -8.1138e+00],
           [ 5.1083e-01, -1.2031e-01, -9.9866e-02,  ..., -9.7132e+00,
            -9.4902e+00, -9.0108e+00],
           ...,
           [-4.6587e-01,  1.4258e-01,  2.7439e-02,  ..., -8.5160e+00,
            -8.5322e+00, -8.2869e+00],
           [-1.1401e-01,  2.4441e-01, -1.4154e-01,  ..., -6.4850e+00,
            -7.0250e+00, -7.5470e+00],
           [ 1.0376e-01,  1.5985e-01, -1.5313e-01,  ..., -3.9270e+00,
            -5.3973e+00, -5.1456e+00]]],


         [[[ 7.2712e-01,  2.8649e-01, -1.2131e-01,  ..., -4.5642e+00,
            -5.1100e+00, -4.4107e+00],
           [ 9.4041e-01,  3.8051e-01, -1.0259e-01,  ..., -4.6301e+00,
            -5.4665e+00, -4.8478e+00],
           [ 7.9193e-01,  2.5944e-01, -7.1409e-02,  ..., -4.2732e+00,
            -5.5741e+00, -5.5157e+00],
           ...,
           [ 1.5838e-02,  1.9576e-01, -1.9319e-01,  ..., -5.1009e+00,
            -6.5227e+00, -6.4640e+00],
           [ 8.2870e-02, -1.0869e-01, -1.6435e-01,  ..., -5.1620e+00,
            -6.4222e+00, -6.1726e+00],
           [ 4.9458e-01,  1.0431e-01, -1.0587e-01,  ..., -3.6537e+00,
            -5.3222e+00, -4.4605e+00]],

          [[ 5.7830e-01,  3.0061e-01, -1.4126e-01,  ..., -4.3771e+00,
            -5.1322e+00, -4.5054e+00],
           [ 8.1010e-01,  5.0314e-01, -9.3869e-02,  ..., -4.6559e+00,
            -5.5975e+00, -5.4545e+00],
           [ 1.0366e+00,  5.6675e-01, -1.2735e-01,  ..., -4.2298e+00,
            -5.8859e+00, -6.2256e+00],
           ...,
           [-1.1028e-01,  8.3904e-01, -2.3412e-01,  ..., -6.3485e+00,
            -6.8842e+00, -7.7997e+00],
           [-1.9033e-01,  8.6960e-01, -2.5899e-01,  ..., -6.4930e+00,
            -6.7407e+00, -7.6222e+00],
           [ 6.2870e-01,  4.4059e-01, -6.4725e-02,  ..., -4.5303e+00,
            -5.4836e+00, -5.3276e+00]],

          [[ 1.6558e-01,  3.2818e-01, -1.4088e-01,  ..., -4.0680e+00,
            -5.5378e+00, -4.7113e+00],
           [ 8.3861e-01,  4.1867e-01, -1.2139e-01,  ..., -4.3774e+00,
            -6.3089e+00, -5.8510e+00],
           [ 1.0344e+00,  5.0929e-01, -1.9803e-01,  ..., -4.2560e+00,
            -6.6473e+00, -6.9439e+00],
           ...,
           [-2.7543e-01,  1.6914e-01, -2.4832e-01,  ..., -7.3588e+00,
            -7.5569e+00, -8.7653e+00],
           [-1.3432e-01,  1.7246e-01, -1.9386e-01,  ..., -7.7401e+00,
            -7.0253e+00, -8.1834e+00],
           [ 8.4289e-01, -4.2710e-02, -4.6075e-02,  ..., -5.1450e+00,
            -5.5416e+00, -5.4633e+00]],

          ...,

          [[ 5.1093e-01, -2.4528e-02, -1.0771e-01,  ..., -4.7219e+00,
            -5.6665e+00, -5.1498e+00],
           [ 1.8769e-01, -2.8538e-02, -2.6063e-01,  ..., -6.7858e+00,
            -7.0529e+00, -7.0786e+00],
           [ 8.3910e-01, -4.7954e-01, -2.2693e-01,  ..., -7.6364e+00,
            -7.6313e+00, -7.7451e+00],
           ...,
           [-7.8313e-01, -7.3824e-01, -1.3632e-01,  ..., -1.2638e+01,
            -1.0341e+01, -1.1217e+01],
           [ 7.7287e-02, -3.2783e-02, -4.3298e-01,  ..., -9.3036e+00,
            -8.4265e+00, -9.3005e+00],
           [ 2.3325e-01,  2.5302e-01, -2.2526e-02,  ..., -5.8292e+00,
            -6.4124e+00, -6.2412e+00]],

          [[ 3.4403e-01, -9.6849e-02, -7.0674e-02,  ..., -5.6208e+00,
            -5.5065e+00, -5.4353e+00],
           [ 5.4531e-01, -1.5917e-01, -1.6465e-01,  ..., -7.5618e+00,
            -7.5725e+00, -7.9227e+00],
           [ 9.6365e-01, -5.0306e-01, -1.5024e-01,  ..., -9.0496e+00,
            -8.0733e+00, -8.5884e+00],
           ...,
           [-1.0781e+00, -7.9521e-01, -1.0741e-01,  ..., -1.1356e+01,
            -9.1147e+00, -1.0153e+01],
           [ 6.5339e-01, -3.5210e-01, -3.1756e-01,  ..., -9.2251e+00,
            -7.3722e+00, -8.6558e+00],
           [ 2.8520e-01, -3.3261e-01,  5.6315e-02,  ..., -5.5086e+00,
            -5.9326e+00, -6.0309e+00]],

          [[ 3.2622e-01,  3.1816e-02, -1.6115e-01,  ..., -5.4132e+00,
            -5.1529e+00, -4.9323e+00],
           [ 7.3440e-01,  1.0327e-01, -3.5550e-01,  ..., -7.0614e+00,
            -6.9624e+00, -7.2379e+00],
           [ 8.3864e-01,  3.3558e-01, -2.2267e-01,  ..., -9.3036e+00,
            -7.6522e+00, -7.8492e+00],
           ...,
           [-2.9878e-01,  2.5458e-01, -1.7796e-01,  ..., -8.4075e+00,
            -7.2795e+00, -8.0988e+00],
           [ 4.3036e-01,  1.6807e-01, -3.0728e-01,  ..., -6.4625e+00,
            -6.0896e+00, -7.0567e+00],
           [ 7.3342e-02, -3.5101e-01, -5.7720e-02,  ..., -3.5800e+00,
            -4.7731e+00, -4.7831e+00]]]]], device='cuda:0')
prediction_size: torch.Size([1, 3, 13, 13, 85])
x: tensor([[[[0.4212, 0.6280, 0.6086, 0.4832, 0.4969, 0.4837, 0.4847, 0.3930,
           0.5743, 0.5127, 0.6057, 0.3094, 0.4602],
          [0.4350, 0.6254, 0.6183, 0.4202, 0.3766, 0.3586, 0.5028, 0.4788,
           0.5570, 0.5564, 0.6605, 0.2862, 0.4018],
          [0.4031, 0.6352, 0.6027, 0.4639, 0.4311, 0.3665, 0.5467, 0.4916,
           0.4618, 0.6184, 0.7151, 0.4131, 0.3399],
          [0.3883, 0.5998, 0.6262, 0.4780, 0.5712, 0.4917, 0.5262, 0.6445,
           0.4496, 0.5061, 0.5553, 0.4055, 0.4232],
          [0.4872, 0.6138, 0.6177, 0.5200, 0.4921, 0.4199, 0.5208, 0.5999,
           0.5213, 0.4749, 0.5006, 0.4992, 0.3525],
          [0.6009, 0.6475, 0.5871, 0.4220, 0.4355, 0.4569, 0.4459, 0.5546,
           0.4773, 0.4116, 0.4007, 0.5248, 0.3061],
          [0.5651, 0.6472, 0.5881, 0.4169, 0.4062, 0.4896, 0.4279, 0.8653,
           0.0784, 0.8226, 0.1127, 0.4534, 0.4093],
          [0.6084, 0.6354, 0.4318, 0.4188, 0.4889, 0.4364, 0.4512, 0.7772,
           0.3038, 0.8989, 0.1432, 0.2752, 0.4065],
          [0.4122, 0.6388, 0.5304, 0.3867, 0.4907, 0.5069, 0.4275, 0.5640,
           0.7783, 0.8990, 0.0623, 0.1424, 0.4221],
          [0.3525, 0.5766, 0.4904, 0.4318, 0.4646, 0.4359, 0.4514, 0.4939,
           0.6364, 0.8670, 0.0666, 0.2207, 0.6036],
          [0.3681, 0.5346, 0.3642, 0.5120, 0.5162, 0.4717, 0.4184, 0.3256,
           0.4628, 0.5572, 0.3299, 0.3430, 0.4880],
          [0.3465, 0.5284, 0.5046, 0.3637, 0.5010, 0.4576, 0.3798, 0.2917,
           0.5369, 0.4689, 0.4271, 0.3137, 0.5884],
          [0.4381, 0.7521, 0.6319, 0.3853, 0.4513, 0.4996, 0.4027, 0.3006,
           0.5239, 0.4638, 0.4412, 0.3387, 0.5641]],

         [[0.5677, 0.6325, 0.6419, 0.4776, 0.5208, 0.4639, 0.5293, 0.5216,
           0.5358, 0.5440, 0.5674, 0.4127, 0.5685],
          [0.6469, 0.5933, 0.6475, 0.3629, 0.3947, 0.3448, 0.4879, 0.5092,
           0.5405, 0.5946, 0.5306, 0.2696, 0.5141],
          [0.6573, 0.6155, 0.6130, 0.3404, 0.4357, 0.3205, 0.5171, 0.5633,
           0.5462, 0.5534, 0.5040, 0.3059, 0.4181],
          [0.6729, 0.5589, 0.5871, 0.3570, 0.4448, 0.3435, 0.4625, 0.5861,
           0.5863, 0.5070, 0.5174, 0.4052, 0.2580],
          [0.7081, 0.5623, 0.5965, 0.4110, 0.4421, 0.4374, 0.4680, 0.5388,
           0.5800, 0.4819, 0.4702, 0.5066, 0.2409],
          [0.6722, 0.5674, 0.6412, 0.4013, 0.4084, 0.4116, 0.4891, 0.5298,
           0.5431, 0.4054, 0.4035, 0.5134, 0.2933],
          [0.6457, 0.6080, 0.5706, 0.3933, 0.3855, 0.4084, 0.5061, 0.4590,
           0.5084, 0.8018, 0.1583, 0.4052, 0.3927],
          [0.6331, 0.6368, 0.6027, 0.3969, 0.4553, 0.4318, 0.5557, 0.5494,
           0.5318, 0.8575, 0.1048, 0.2435, 0.3817],
          [0.6146, 0.6384, 0.5321, 0.4346, 0.4804, 0.4086, 0.5227, 0.5914,
           0.5269, 0.8714, 0.0818, 0.2632, 0.4021],
          [0.6324, 0.5984, 0.4089, 0.5030, 0.4699, 0.4336, 0.5447, 0.5864,
           0.4546, 0.8013, 0.1239, 0.3395, 0.5181],
          [0.6517, 0.5912, 0.4072, 0.5587, 0.5101, 0.4820, 0.5616, 0.4379,
           0.3889, 0.7011, 0.2319, 0.3726, 0.4538],
          [0.6463, 0.6782, 0.5240, 0.4473, 0.5126, 0.5013, 0.5112, 0.3614,
           0.4817, 0.5193, 0.2424, 0.3172, 0.5731],
          [0.6092, 0.6781, 0.6250, 0.4759, 0.4972, 0.4684, 0.4574, 0.3837,
           0.5619, 0.5366, 0.3856, 0.4715, 0.5259]],

         [[0.6742, 0.7192, 0.6882, 0.5494, 0.5739, 0.5586, 0.5859, 0.5484,
           0.5839, 0.5370, 0.5040, 0.5207, 0.6212],
          [0.6407, 0.6921, 0.7382, 0.5839, 0.5637, 0.6059, 0.5415, 0.4607,
           0.4787, 0.3993, 0.4725, 0.4526, 0.6522],
          [0.5413, 0.6982, 0.7378, 0.5225, 0.5673, 0.5537, 0.5345, 0.4683,
           0.5174, 0.3974, 0.4316, 0.4665, 0.6991],
          [0.5133, 0.6929, 0.7633, 0.5267, 0.5893, 0.5627, 0.5746, 0.5381,
           0.5163, 0.3812, 0.4021, 0.5014, 0.6723],
          [0.5234, 0.6261, 0.7534, 0.5375, 0.5759, 0.6369, 0.5052, 0.4661,
           0.4878, 0.3888, 0.2758, 0.4541, 0.6398],
          [0.4987, 0.5722, 0.6551, 0.4396, 0.5309, 0.5313, 0.4602, 0.4454,
           0.4876, 0.3718, 0.3270, 0.4688, 0.5723],
          [0.5788, 0.6069, 0.5875, 0.4690, 0.5388, 0.4729, 0.4334, 0.4629,
           0.4973, 0.5217, 0.3506, 0.5239, 0.5555],
          [0.5999, 0.5594, 0.5504, 0.4640, 0.5895, 0.5555, 0.4409, 0.4780,
           0.4282, 0.6651, 0.3633, 0.4445, 0.5360],
          [0.6110, 0.6062, 0.6376, 0.5229, 0.5654, 0.5798, 0.4676, 0.4673,
           0.3708, 0.5510, 0.4030, 0.4158, 0.5285],
          [0.5902, 0.6016, 0.6593, 0.6037, 0.5727, 0.5808, 0.5129, 0.4445,
           0.2875, 0.6150, 0.4689, 0.4537, 0.5418],
          [0.6250, 0.5468, 0.6983, 0.5609, 0.5479, 0.6268, 0.4813, 0.2386,
           0.1940, 0.4529, 0.3136, 0.5193, 0.5580],
          [0.5852, 0.6330, 0.7239, 0.4879, 0.6257, 0.6564, 0.3718, 0.1695,
           0.3190, 0.4683, 0.2539, 0.6578, 0.5708],
          [0.5808, 0.6758, 0.6982, 0.5108, 0.6150, 0.6264, 0.5219, 0.3193,
           0.4940, 0.5097, 0.4259, 0.6060, 0.5183]]]], device='cuda:0')
x_size: torch.Size([1, 3, 13, 13])
y: tensor([[[[0.6324, 0.7359, 0.7436, 0.7730, 0.7308, 0.6596, 0.6159, 0.6060,
           0.6413, 0.6390, 0.6986, 0.7082, 0.4671],
          [0.4965, 0.4938, 0.5103, 0.5414, 0.5594, 0.5455, 0.4735, 0.5391,
           0.4035, 0.3884, 0.5197, 0.6906, 0.6478],
          [0.6192, 0.5503, 0.5474, 0.4845, 0.4754, 0.5980, 0.6084, 0.5635,
           0.5962, 0.5601, 0.3537, 0.3147, 0.4099],
          [0.6867, 0.6497, 0.6047, 0.5449, 0.5664, 0.5374, 0.5443, 0.4654,
           0.5060, 0.5012, 0.4756, 0.4445, 0.4706],
          [0.5323, 0.6407, 0.6478, 0.6357, 0.5987, 0.5962, 0.6474, 0.6870,
           0.6918, 0.6618, 0.7122, 0.7428, 0.7276],
          [0.7434, 0.8456, 0.8699, 0.8617, 0.8240, 0.8430, 0.8502, 0.7987,
           0.6686, 0.6801, 0.6378, 0.5313, 0.4900],
          [0.3194, 0.4573, 0.4245, 0.4867, 0.5221, 0.4734, 0.3459, 0.5697,
           0.5609, 0.6835, 0.7477, 0.4113, 0.3968],
          [0.4232, 0.3722, 0.2686, 0.2281, 0.2177, 0.1838, 0.3294, 0.1115,
           0.1891, 0.3761, 0.3697, 0.5936, 0.5281],
          [0.4532, 0.1853, 0.2972, 0.2913, 0.3254, 0.4020, 0.5316, 0.5393,
           0.5078, 0.5820, 0.5620, 0.4523, 0.4152],
          [0.4401, 0.4566, 0.4234, 0.3953, 0.4670, 0.4380, 0.3723, 0.3505,
           0.2612, 0.0548, 0.0604, 0.2831, 0.5207],
          [0.6121, 0.5398, 0.5032, 0.4314, 0.3932, 0.4210, 0.4447, 0.4262,
           0.4122, 0.3834, 0.4921, 0.6726, 0.5921],
          [0.5255, 0.4232, 0.6510, 0.7750, 0.7160, 0.6973, 0.6718, 0.7029,
           0.7253, 0.6629, 0.5650, 0.5872, 0.6904],
          [0.3223, 0.3151, 0.3944, 0.4351, 0.5074, 0.5067, 0.4659, 0.4175,
           0.4264, 0.4310, 0.4411, 0.2972, 0.3688]],

         [[0.4699, 0.4979, 0.5245, 0.5626, 0.5327, 0.4990, 0.4763, 0.4986,
           0.5371, 0.5435, 0.5787, 0.4817, 0.4550],
          [0.5991, 0.7160, 0.7265, 0.7660, 0.7458, 0.7052, 0.6731, 0.7170,
           0.6787, 0.7344, 0.8003, 0.8253, 0.6248],
          [0.6126, 0.6410, 0.5429, 0.5180, 0.5080, 0.5275, 0.5539, 0.5083,
           0.6003, 0.5733, 0.4985, 0.6278, 0.4661],
          [0.6025, 0.5998, 0.5943, 0.5087, 0.4886, 0.4795, 0.5050, 0.4378,
           0.4554, 0.5035, 0.5177, 0.5659, 0.5255],
          [0.4921, 0.4698, 0.5250, 0.5673, 0.5776, 0.5806, 0.5878, 0.5860,
           0.5433, 0.4071, 0.3845, 0.3829, 0.4525],
          [0.3913, 0.3874, 0.4486, 0.5043, 0.5058, 0.5258, 0.5960, 0.5593,
           0.5415, 0.5040, 0.4524, 0.3442, 0.4268],
          [0.6114, 0.7796, 0.8169, 0.7899, 0.7270, 0.7205, 0.6497, 0.6095,
           0.5797, 0.8639, 0.8708, 0.5114, 0.4644],
          [0.3436, 0.3191, 0.2852, 0.2873, 0.3399, 0.3738, 0.3937, 0.4375,
           0.5104, 0.3863, 0.3336, 0.3855, 0.4277],
          [0.4452, 0.4686, 0.4169, 0.3228, 0.3167, 0.2710, 0.2657, 0.2263,
           0.2023, 0.3955, 0.4002, 0.3161, 0.4823],
          [0.3860, 0.3462, 0.3548, 0.3566, 0.4015, 0.4015, 0.4025, 0.3860,
           0.2644, 0.1233, 0.1631, 0.2915, 0.5003],
          [0.5681, 0.4671, 0.6171, 0.5646, 0.5117, 0.4685, 0.4702, 0.4936,
           0.4149, 0.2086, 0.3381, 0.4793, 0.5292],
          [0.3948, 0.2232, 0.2490, 0.2643, 0.2991, 0.4104, 0.3785, 0.3112,
           0.3305, 0.3715, 0.3259, 0.3755, 0.3709],
          [0.5128, 0.5243, 0.4700, 0.5042, 0.5228, 0.5353, 0.5400, 0.5859,
           0.5491, 0.5144, 0.5356, 0.5608, 0.5399]],

         [[0.5711, 0.5940, 0.5645, 0.6032, 0.5770, 0.5945, 0.6196, 0.6177,
           0.5778, 0.5628, 0.5488, 0.4729, 0.5261],
          [0.5746, 0.6232, 0.6380, 0.6482, 0.6714, 0.7281, 0.7160, 0.7084,
           0.6977, 0.7116, 0.6983, 0.7047, 0.6084],
          [0.5813, 0.6032, 0.6246, 0.6252, 0.6102, 0.6049, 0.6053, 0.6295,
           0.6407, 0.6402, 0.5422, 0.5430, 0.4893],
          [0.5911, 0.6186, 0.6251, 0.5433, 0.4801, 0.4329, 0.4499, 0.4935,
           0.5445, 0.5658, 0.5978, 0.5992, 0.5584],
          [0.4662, 0.4389, 0.4972, 0.5099, 0.5396, 0.5653, 0.5794, 0.5886,
           0.5715, 0.4483, 0.4363, 0.3877, 0.4357],
          [0.5163, 0.4881, 0.5542, 0.5516, 0.6010, 0.5912, 0.6586, 0.6061,
           0.5810, 0.4997, 0.5310, 0.4031, 0.5034],
          [0.6259, 0.6694, 0.7420, 0.7089, 0.6998, 0.6947, 0.6676, 0.5447,
           0.4850, 0.5476, 0.5702, 0.4836, 0.4816],
          [0.4713, 0.4254, 0.3795, 0.4061, 0.4729, 0.5258, 0.5379, 0.5361,
           0.5455, 0.4957, 0.5411, 0.5306, 0.4756],
          [0.4993, 0.5116, 0.4011, 0.4467, 0.3520, 0.3300, 0.3654, 0.3501,
           0.3165, 0.3099, 0.3420, 0.3359, 0.5461],
          [0.3866, 0.3453, 0.3085, 0.2812, 0.3233, 0.3419, 0.3928, 0.3893,
           0.3120, 0.2622, 0.2623, 0.3188, 0.5238],
          [0.4939, 0.4929, 0.3824, 0.4050, 0.4030, 0.4350, 0.4419, 0.4481,
           0.3704, 0.3962, 0.3234, 0.4918, 0.5629],
          [0.4758, 0.4603, 0.3768, 0.3636, 0.3382, 0.3788, 0.4109, 0.3980,
           0.3391, 0.3587, 0.3111, 0.4129, 0.4176],
          [0.5080, 0.5258, 0.5831, 0.5898, 0.5705, 0.5103, 0.4602, 0.5644,
           0.6053, 0.5666, 0.5633, 0.5419, 0.4131]]]], device='cuda:0')
y_size: torch.Size([1, 3, 13, 13])
w: tensor([[[[ 3.5451e-01,  1.3704e-01,  4.8270e-01,  5.0019e-01,  4.5847e-01,
            6.6395e-01,  8.2280e-01,  8.3987e-01,  6.3241e-01,  4.2848e-01,
            3.6309e-01,  1.2272e-01,  5.4350e-01],
          [ 8.2927e-02, -1.5808e-01,  2.2713e-01,  2.5465e-01,  4.1814e-02,
            2.3266e-01,  4.6425e-01,  4.3616e-01,  1.2682e-01,  2.1728e-01,
            2.5549e-01, -4.3494e-02,  3.5783e-01],
          [ 1.3816e-01, -1.2431e-01,  1.8081e-01,  1.4063e-01,  8.2979e-02,
            3.4085e-01,  4.1850e-01,  2.7074e-01,  4.2710e-01,  3.7433e-01,
            1.8362e-01, -1.1628e-01,  2.1971e-01],
          [ 3.1435e-01,  1.0882e-01,  3.4114e-01,  3.8866e-01,  4.9641e-01,
            5.2775e-01,  6.9920e-01,  4.4319e-01,  5.8724e-01,  5.8667e-01,
            4.5543e-01,  5.1308e-02,  4.9060e-01],
          [ 3.6592e-01,  1.5964e-01,  4.9454e-01,  5.4123e-01,  4.9045e-01,
            6.2183e-01,  7.8340e-01,  6.2664e-01,  6.3728e-01,  7.1352e-01,
            4.6259e-01,  6.7140e-02,  5.2074e-01],
          [ 4.3412e-01,  1.0833e-01,  4.2545e-01,  4.4912e-01,  6.1896e-01,
            6.8993e-01,  5.6965e-01,  6.3245e-01,  7.0215e-01,  7.0012e-01,
            3.7645e-01, -2.5956e-02,  2.8645e-01],
          [ 5.6394e-01,  7.0584e-02,  3.5682e-01,  4.8021e-01,  5.7981e-01,
            2.6775e-01,  1.5042e-01, -3.0608e-01, -2.7179e-01, -2.4997e-01,
           -2.1494e-01,  3.5613e-02,  4.2503e-01],
          [ 3.9776e-01, -1.9292e-01,  2.0427e-01,  3.6452e-01,  4.3729e-01,
            2.9238e-01,  5.7594e-01,  1.5402e-02,  7.7335e-02, -1.6880e-01,
           -1.8509e-01, -4.3152e-02,  4.0582e-01],
          [ 3.0381e-01, -1.3487e-01,  2.9716e-01,  3.4191e-01,  6.3311e-01,
            5.0186e-01,  6.9028e-01,  4.4493e-01,  7.6514e-02,  2.2114e-01,
            1.8622e-01, -4.9653e-02,  4.6042e-01],
          [ 2.0966e-01, -1.7798e-02,  3.2977e-01,  3.1315e-01,  5.7368e-01,
            8.1969e-01,  9.5865e-01,  7.1568e-01,  1.9197e-01,  2.6184e-01,
            2.9633e-01,  1.2820e-01,  6.3142e-01],
          [-1.0611e-01, -1.7345e-01,  1.5982e-01,  3.6880e-01,  4.5088e-01,
            8.0143e-01,  1.1352e+00,  1.0108e+00,  6.3891e-01,  2.9328e-01,
            3.3781e-01, -6.4353e-02,  3.2444e-01],
          [-2.1515e-01, -1.4159e-01,  2.6289e-01,  4.3642e-01,  5.6927e-01,
            1.0241e+00,  1.3707e+00,  1.1859e+00,  8.3160e-01,  6.2061e-01,
            3.3043e-01, -1.3782e-01,  2.5394e-01],
          [ 1.4872e-01,  1.4135e-01,  3.6257e-01,  4.2625e-01,  7.3703e-01,
            1.0176e+00,  1.2681e+00,  1.1630e+00,  9.2762e-01,  8.3737e-01,
            4.6967e-01,  1.7021e-01,  5.4184e-01]],

         [[-2.2797e-01, -1.9094e-01,  8.3303e-02,  1.4083e-01,  1.4299e-01,
            9.3346e-02,  1.7741e-01,  1.3610e-01,  7.2439e-02,  7.3246e-02,
           -7.1897e-03, -1.4833e-01, -1.1919e-01],
          [-1.4506e-01, -9.0083e-02,  1.9163e-01,  2.6871e-01,  2.8365e-01,
            3.0829e-01,  4.5949e-01,  3.4641e-01,  4.0857e-01,  4.0751e-01,
            1.2879e-01, -7.1082e-02,  9.5419e-03],
          [-2.8589e-01, -2.9178e-01,  9.4741e-02,  1.9483e-01,  1.3904e-01,
            1.9222e-01,  3.3745e-01,  1.8713e-01,  2.1721e-01,  3.2691e-01,
            1.0515e-01, -1.9566e-01, -9.3376e-02],
          [-2.9627e-01, -3.2030e-01,  4.4000e-02,  1.4762e-01,  4.8520e-02,
            1.4974e-01,  2.7807e-01,  1.9545e-01,  2.5005e-01,  3.5113e-01,
            9.2098e-02, -2.6703e-01, -1.5981e-01],
          [-9.5990e-02, -4.8966e-02,  2.6696e-01,  3.0897e-01,  2.7457e-01,
            3.8607e-01,  4.1555e-01,  3.0602e-01,  4.0114e-01,  4.6755e-01,
            1.9244e-01, -2.1934e-01, -1.0945e-01],
          [-2.5824e-02, -4.2550e-02,  2.3376e-01,  2.5148e-01,  3.2379e-01,
            4.3296e-01,  5.0798e-01,  3.9156e-01,  4.4283e-01,  4.2175e-01,
            3.2741e-01, -1.6498e-01, -1.2751e-01],
          [ 8.0929e-02,  4.6293e-02,  2.9356e-01,  3.4667e-01,  4.6501e-01,
            4.4179e-01,  4.2899e-01,  3.1443e-01,  2.1734e-01, -2.2194e-01,
           -2.5496e-01, -1.0158e-01, -8.9497e-02],
          [ 3.2106e-02, -1.2940e-01,  2.2707e-01,  3.0381e-01,  5.2860e-01,
            4.1010e-01,  3.6536e-01,  2.5259e-01,  1.2680e-01, -4.0998e-01,
           -4.0063e-01, -5.3375e-02, -1.2151e-01],
          [-1.6450e-01, -2.5373e-01,  1.4063e-01,  3.1402e-01,  4.1960e-01,
            3.4829e-01,  4.8686e-01,  2.9665e-01,  3.4289e-01, -3.4647e-02,
            3.7666e-02,  1.4771e-01, -1.4863e-01],
          [-3.1214e-01, -3.5308e-01,  3.5568e-02,  2.3633e-01,  3.2124e-01,
            3.5594e-01,  5.5860e-01,  4.1653e-01,  3.2370e-01,  2.3738e-02,
            8.0001e-02,  1.1712e-01, -2.8282e-01],
          [-3.5003e-01, -4.1275e-01, -2.5036e-02,  1.1398e-01,  3.0453e-01,
            3.9839e-01,  6.4710e-01,  5.1437e-01,  3.1740e-01,  8.4971e-02,
            1.1729e-02, -1.6763e-01, -3.6535e-01],
          [-2.5391e-01, -2.4655e-01, -3.5528e-02,  7.0947e-02,  2.8086e-01,
            5.5674e-01,  7.4449e-01,  6.9603e-01,  4.7273e-01,  2.3968e-01,
            1.2891e-01, -2.0061e-01, -1.9109e-01],
          [-2.5901e-01, -2.2669e-01, -9.9866e-02, -4.9614e-02,  2.0495e-01,
            4.0886e-01,  5.4742e-01,  5.1572e-01,  3.8116e-01,  2.2129e-01,
            2.7439e-02, -1.4154e-01, -1.5313e-01]],

         [[-1.2131e-01, -1.0259e-01, -7.1409e-02, -5.9959e-02, -3.1769e-02,
            6.9569e-02,  7.7658e-02,  2.2463e-02, -1.0644e-01, -1.7496e-01,
           -1.9319e-01, -1.6435e-01, -1.0587e-01],
          [-1.4126e-01, -9.3869e-02, -1.2735e-01, -1.3677e-01, -8.1226e-02,
            4.5041e-02,  5.2125e-02,  4.1352e-02, -8.8967e-02, -2.0019e-01,
           -2.3412e-01, -2.5899e-01, -6.4725e-02],
          [-1.4088e-01, -1.2139e-01, -1.9803e-01, -1.8525e-01, -1.0953e-01,
            2.1632e-02,  2.9137e-02,  3.3432e-02, -1.3649e-01, -2.6769e-01,
           -2.4832e-01, -1.9386e-01, -4.6075e-02],
          [-2.3950e-01, -2.0374e-01, -3.1141e-01, -2.8283e-01, -1.3463e-01,
            4.2599e-03, -2.3309e-02,  2.6235e-02, -1.6881e-01, -2.9370e-01,
           -2.8020e-01, -2.3218e-01, -7.7133e-02],
          [-2.1627e-01, -1.9895e-01, -2.5633e-01, -2.2053e-01, -1.0185e-01,
            6.2928e-05, -1.7820e-02,  4.2465e-02, -1.0988e-01, -2.1755e-01,
           -2.1278e-01, -2.4148e-01, -9.1092e-02],
          [-1.7201e-01, -1.9835e-01, -2.0226e-01, -2.3780e-01, -8.8544e-02,
           -3.2471e-02, -2.0140e-02,  1.2555e-02, -2.6570e-03, -1.3970e-01,
           -1.5954e-01, -1.8849e-01, -1.0262e-01],
          [-5.9184e-02, -1.0508e-01, -1.3358e-01, -1.5701e-01, -1.0295e-01,
           -1.1161e-01, -1.3874e-01, -1.8170e-01, -1.4696e-01, -1.6999e-01,
           -1.0196e-01, -1.3632e-01, -6.7877e-02],
          [-5.9562e-02, -1.1250e-01, -1.2028e-01, -1.1338e-01, -1.4314e-01,
           -1.3127e-01, -1.0330e-01, -1.5743e-01, -8.0115e-02, -1.5834e-01,
           -1.7712e-01, -1.4566e-01, -1.2770e-02],
          [-9.8050e-02, -1.2306e-01, -1.0220e-01, -1.3511e-01, -1.0674e-01,
           -4.3254e-02, -7.3877e-02, -1.0025e-01, -1.2079e-01, -2.0012e-01,
           -1.2519e-01, -1.5542e-01, -5.7024e-02],
          [-1.0595e-01, -2.2489e-01, -2.1529e-01, -2.1099e-01, -1.7797e-01,
           -9.6825e-02, -4.1306e-02, -6.1459e-02, -6.8930e-02, -2.0163e-01,
           -1.4628e-01, -2.9975e-01, -5.1278e-02],
          [-1.0771e-01, -2.6063e-01, -2.2693e-01, -1.7685e-01, -1.5114e-01,
           -5.9612e-02,  4.7005e-02, -3.4285e-02, -1.3678e-01, -2.0451e-01,
           -1.3632e-01, -4.3298e-01, -2.2526e-02],
          [-7.0674e-02, -1.6465e-01, -1.5024e-01, -8.2602e-02, -9.3266e-02,
           -3.5551e-02,  6.1599e-02,  4.9070e-02, -4.8641e-02, -1.1750e-01,
           -1.0741e-01, -3.1756e-01,  5.6315e-02],
          [-1.6115e-01, -3.5550e-01, -2.2267e-01, -9.6150e-02, -1.5929e-01,
           -8.4945e-02,  5.1940e-02,  3.5945e-02, -9.6547e-02, -1.3925e-01,
           -1.7796e-01, -3.0728e-01, -5.7720e-02]]]], device='cuda:0')
w_size: torch.Size([1, 3, 13, 13])
h: tensor([[[[-0.4524, -0.4114, -0.4300, -0.4461, -0.5130, -0.5396, -0.5935,
           -0.6441, -0.6561, -0.6433, -0.6311, -0.5797, -0.5315],
          [-0.1479, -0.0032,  0.0075,  0.0157,  0.0170, -0.0319, -0.2028,
           -0.1452, -0.1332, -0.0992, -0.0081,  0.0810, -0.0697],
          [-0.1264,  0.0547, -0.1193, -0.1391, -0.1426, -0.2328, -0.3907,
           -0.3285, -0.2384, -0.2318, -0.0894,  0.0341, -0.1613],
          [-0.3530, -0.3142, -0.4585, -0.4180, -0.3674, -0.3609, -0.4324,
           -0.4405, -0.4961, -0.4958, -0.4197, -0.1885, -0.3605],
          [-0.3994, -0.2443, -0.4074, -0.4327, -0.5178, -0.5252, -0.4619,
           -0.3180, -0.3142, -0.3229, -0.2427, -0.0142, -0.2352],
          [-0.5277, -0.5204, -0.6067, -0.5160, -0.5128, -0.5043, -0.6191,
           -0.5358, -0.5338, -0.4956, -0.4547, -0.1230, -0.2350],
          [-0.3905, -0.1850, -0.2571, -0.2796, -0.2318, -0.1556, -0.2022,
           -0.1656, -0.2843,  0.0991,  0.1431, -0.1367, -0.2951],
          [-0.1107,  0.1478,  0.0945, -0.0074, -0.0544, -0.0188, -0.0557,
            0.1109,  0.1398,  0.4887,  0.4922, -0.0366, -0.2795],
          [-0.3508, -0.2447, -0.2709, -0.2190, -0.2054, -0.1562, -0.2242,
           -0.0807, -0.0935,  0.1015,  0.0820, -0.1236, -0.1806],
          [-0.1708, -0.1349, -0.2231, -0.2726, -0.3634, -0.4197, -0.4474,
           -0.3710, -0.3574, -0.2051, -0.1617, -0.2236, -0.2830],
          [-0.0224,  0.1353,  0.0215, -0.0623, -0.1642, -0.4163, -0.4698,
           -0.3614, -0.2642, -0.3387, -0.2421,  0.0211, -0.1159],
          [-0.0690, -0.0408, -0.1066, -0.1594, -0.1992, -0.4060, -0.4698,
           -0.4871, -0.4510, -0.3713, -0.1874, -0.0488, -0.2103],
          [-0.5687, -0.5986, -0.7090, -0.7416, -0.7785, -0.8778, -0.9158,
           -0.9834, -0.9400, -0.9261, -0.8711, -0.6265, -0.6223]],

         [[ 0.5876,  0.3390,  0.1549,  0.0522,  0.0790,  0.1225,  0.0829,
            0.1589,  0.2689,  0.2680,  0.2850,  0.3321,  0.4306],
          [ 0.4500,  0.0504, -0.1908, -0.3176, -0.2534, -0.1739, -0.2075,
           -0.1843, -0.1433, -0.2575, -0.3092, -0.2928,  0.0840],
          [ 0.4975,  0.1036, -0.0367, -0.0185,  0.0028,  0.0688,  0.0781,
            0.0352,  0.0210, -0.1115, -0.1690, -0.1985,  0.1759],
          [ 0.5590,  0.2482,  0.1899,  0.2371,  0.1459,  0.0911,  0.0429,
            0.0397,  0.0273, -0.0607, -0.0033,  0.0444,  0.3364],
          [ 0.4854, -0.0061, -0.1466, -0.1096, -0.1184, -0.1178, -0.1341,
           -0.1226, -0.2041, -0.2156, -0.0903, -0.0370,  0.2266],
          [ 0.4611,  0.0243, -0.1424, -0.1211, -0.2584, -0.3156, -0.2286,
           -0.2643, -0.3462, -0.2816, -0.2011, -0.0169,  0.2070],
          [ 0.1337, -0.3618, -0.4797, -0.4931, -0.5995, -0.6045, -0.5247,
           -0.3873, -0.4205, -0.3052, -0.3164, -0.1334,  0.2231],
          [ 0.0484, -0.3334, -0.3984, -0.4361, -0.4710, -0.3435, -0.2961,
           -0.2364, -0.3478, -0.2742, -0.2533, -0.3470,  0.2866],
          [ 0.3898,  0.0921, -0.0994, -0.1181, -0.1858, -0.1558, -0.1716,
           -0.1906, -0.3629, -0.4668, -0.4758, -0.2782,  0.2609],
          [ 0.3845,  0.1061,  0.0590,  0.0434, -0.0953, -0.2039, -0.2348,
           -0.2461, -0.2253, -0.4282, -0.3873, -0.0765,  0.3543],
          [ 0.3660, -0.0152, -0.0628, -0.0757, -0.1870, -0.3088, -0.4163,
           -0.3576, -0.2308, -0.0167, -0.0704,  0.0272,  0.4842],
          [ 0.3193, -0.1784, -0.1855, -0.2040, -0.2765, -0.4457, -0.5549,
           -0.4727, -0.3736, -0.2775, -0.2066,  0.0768,  0.2762],
          [ 0.5941,  0.3677,  0.2851,  0.1677,  0.0744, -0.1458, -0.2946,
           -0.2143, -0.0605,  0.0167,  0.2651,  0.3550,  0.5119]],

         [[ 0.1026,  0.0060, -0.0501, -0.0946, -0.1527, -0.1595, -0.1810,
           -0.1305, -0.0558,  0.0112,  0.0397,  0.0345,  0.0112],
          [-0.0078, -0.2263, -0.2355, -0.3280, -0.3900, -0.4077, -0.3938,
           -0.3760, -0.3858, -0.3976, -0.3236, -0.3252, -0.2414],
          [ 0.0538, -0.0832, -0.2343, -0.1985, -0.2435, -0.1671, -0.1856,
           -0.2006, -0.3223, -0.3557, -0.3685, -0.3028, -0.2168],
          [ 0.0061, -0.0926, -0.1980, -0.1246, -0.1742, -0.1379, -0.1695,
           -0.1657, -0.2915, -0.3037, -0.3552, -0.3128, -0.2008],
          [-0.0147, -0.1986, -0.4114, -0.4232, -0.5637, -0.5391, -0.5428,
           -0.4104, -0.4522, -0.3835, -0.4009, -0.2774, -0.2237],
          [-0.2746, -0.4347, -0.5940, -0.6081, -0.7962, -0.8212, -0.7997,
           -0.7023, -0.7755, -0.6892, -0.6581, -0.3812, -0.2661],
          [-0.5032, -0.7631, -0.8310, -0.7951, -1.0103, -0.9692, -0.9513,
           -0.7325, -0.7326, -0.7090, -0.7411, -0.3853, -0.3069],
          [-0.3531, -0.5777, -0.6452, -0.6468, -0.7832, -0.6736, -0.5849,
           -0.4934, -0.4803, -0.4680, -0.4860, -0.4884, -0.2275],
          [-0.1427, -0.2527, -0.4531, -0.4201, -0.4511, -0.3641, -0.4094,
           -0.4314, -0.3712, -0.3881, -0.4644, -0.3724, -0.2768],
          [-0.0791, -0.1648, -0.2914, -0.2327, -0.3292, -0.4365, -0.5561,
           -0.6249, -0.4815, -0.3097, -0.3361, -0.3235, -0.1994],
          [-0.0827, -0.0819, -0.2150, -0.2489, -0.3430, -0.5598, -0.6454,
           -0.7139, -0.4024, -0.2823, -0.3237, -0.1835, -0.0348],
          [-0.2036, -0.1761, -0.2940, -0.3761, -0.4328, -0.7945, -0.9828,
           -0.9894, -0.5818, -0.4294, -0.4053, -0.3488, -0.2517],
          [ 0.0438,  0.0744,  0.0855, -0.0282, -0.1333, -0.4444, -0.5935,
           -0.6146, -0.3834, -0.2646, -0.0021, -0.1098,  0.1156]]]],
       device='cuda:0')
h_size: torch.Size([1, 3, 13, 13])
conf: tensor([[[[6.1134e-09, 1.1090e-07, 3.5762e-07, 1.5550e-06, 2.3251e-06,
           2.5755e-06, 7.9206e-06, 2.3898e-06, 2.0910e-06, 1.0648e-06,
           2.0287e-06, 8.7532e-07, 2.0025e-08],
          [5.0063e-09, 9.6938e-07, 6.7985e-06, 2.2208e-05, 2.2194e-05,
           7.1137e-06, 7.7830e-06, 3.5442e-06, 4.5183e-06, 1.9156e-06,
           8.7330e-06, 7.6498e-06, 2.5309e-08],
          [8.6441e-09, 6.1924e-07, 1.7956e-06, 3.9309e-06, 2.0543e-06,
           5.9470e-07, 5.9120e-07, 6.5143e-07, 4.7200e-07, 8.3280e-07,
           1.8039e-06, 7.3200e-06, 2.3993e-08],
          [2.2756e-08, 9.9879e-07, 4.2530e-06, 5.6757e-06, 5.8074e-06,
           4.9023e-06, 5.8817e-06, 7.2240e-06, 7.8790e-06, 4.6959e-06,
           1.7562e-06, 3.1882e-06, 5.1268e-09],
          [3.6107e-08, 8.3911e-06, 4.0430e-05, 4.0982e-05, 4.2526e-05,
           1.3166e-05, 9.7424e-06, 1.2504e-05, 6.0583e-05, 4.6570e-05,
           2.1213e-05, 6.2273e-05, 8.4133e-08],
          [5.4236e-07, 2.5578e-04, 5.7262e-04, 4.9084e-04, 4.2239e-04,
           2.4356e-04, 3.9725e-04, 1.8155e-04, 2.2502e-04, 1.2726e-04,
           7.1919e-05, 7.8570e-05, 5.5464e-07],
          [4.0474e-06, 3.3137e-03, 8.6231e-03, 1.8788e-02, 7.2714e-03,
           4.0764e-03, 2.2451e-03, 9.9272e-01, 8.5318e-01, 1.1739e-02,
           2.6537e-02, 2.1459e-05, 1.0838e-07],
          [1.6247e-06, 6.5208e-02, 4.5359e-03, 3.2801e-03, 7.4849e-04,
           4.0648e-04, 5.0000e-05, 7.9433e-04, 4.6677e-04, 7.4120e-01,
           9.4194e-01, 2.2059e-05, 3.2419e-08],
          [3.5284e-07, 3.6371e-05, 3.4018e-05, 2.0747e-05, 4.9506e-06,
           6.8682e-06, 5.6083e-05, 3.3349e-05, 7.0896e-04, 9.9891e-01,
           9.7096e-01, 4.1620e-05, 8.2664e-08],
          [7.1053e-08, 1.5303e-06, 1.1370e-06, 1.3912e-06, 1.3655e-06,
           2.6558e-06, 1.6330e-05, 8.7046e-06, 1.9617e-05, 2.6921e-01,
           2.6415e-02, 1.6042e-06, 3.8075e-08],
          [6.0848e-08, 3.1515e-06, 5.5320e-07, 5.8980e-07, 9.0074e-07,
           5.5310e-06, 1.2238e-05, 7.8854e-06, 2.1121e-06, 2.9268e-06,
           1.4862e-06, 2.2634e-06, 2.6589e-08],
          [1.1346e-08, 1.6221e-06, 8.3098e-07, 1.4281e-06, 5.2733e-07,
           2.4437e-06, 1.3596e-05, 4.3318e-06, 1.8240e-06, 1.9574e-06,
           4.6612e-07, 9.2590e-07, 2.3997e-08],
          [1.4784e-08, 1.3843e-06, 2.0975e-05, 5.8043e-05, 2.9883e-05,
           7.4100e-05, 3.4118e-04, 9.8822e-05, 3.7515e-05, 3.6635e-05,
           3.8570e-06, 1.5251e-06, 1.4243e-07]],

         [[2.4423e-09, 3.0012e-09, 1.6232e-08, 3.8787e-08, 3.8851e-08,
           4.2156e-08, 4.4803e-08, 1.8734e-08, 3.1085e-08, 1.1753e-08,
           4.6886e-08, 8.9571e-09, 1.2018e-08],
          [8.4686e-09, 5.8499e-08, 1.1825e-06, 5.5898e-06, 4.5200e-06,
           3.4268e-06, 1.6894e-06, 7.1351e-07, 8.0513e-07, 8.6987e-07,
           2.7513e-06, 1.8302e-07, 4.7359e-08],
          [1.5079e-08, 3.4143e-07, 5.2079e-06, 8.5762e-06, 3.2098e-06,
           1.6077e-06, 1.7570e-06, 1.4615e-06, 2.7384e-06, 2.8835e-06,
           4.3900e-06, 9.6292e-07, 5.1342e-08],
          [1.7016e-07, 2.7349e-06, 1.3575e-05, 2.4353e-05, 1.0595e-05,
           3.8344e-06, 3.4110e-06, 3.2745e-06, 2.5106e-05, 1.1358e-05,
           7.3590e-06, 8.9657e-06, 1.3468e-07],
          [3.5115e-07, 5.4431e-06, 2.0063e-05, 3.7445e-05, 2.4054e-05,
           2.2622e-05, 2.0911e-05, 7.5041e-06, 2.2046e-05, 1.7690e-05,
           6.3918e-06, 1.1454e-05, 2.5116e-07],
          [4.6250e-07, 2.6911e-06, 2.1825e-05, 6.3091e-05, 2.0381e-05,
           1.2533e-05, 1.7343e-05, 1.1613e-05, 1.0763e-05, 4.0280e-06,
           5.7132e-07, 2.2437e-06, 9.0895e-08],
          [1.7375e-06, 8.5225e-05, 3.6796e-04, 1.3552e-03, 4.0486e-04,
           1.6468e-04, 3.1497e-04, 5.7458e-04, 7.7458e-05, 1.4144e-03,
           2.0561e-03, 1.5559e-06, 3.3984e-08],
          [3.7507e-06, 1.0382e-03, 8.3060e-03, 9.9151e-03, 2.5039e-03,
           1.6247e-03, 1.6011e-03, 3.1173e-04, 2.8350e-04, 6.5146e-01,
           7.0198e-01, 4.9025e-06, 5.9168e-08],
          [1.4325e-06, 6.8977e-05, 1.3156e-04, 2.4317e-04, 5.2129e-05,
           1.7752e-05, 3.4943e-05, 8.8215e-05, 1.0970e-04, 5.8796e-01,
           1.0817e-01, 2.4389e-06, 1.6049e-07],
          [1.1684e-07, 5.2997e-06, 9.9988e-06, 6.3284e-06, 3.0274e-06,
           1.5887e-06, 4.3759e-06, 1.4812e-05, 1.4041e-05, 2.3060e-03,
           2.4453e-04, 1.0311e-06, 6.3203e-08],
          [1.4275e-07, 1.5879e-06, 4.6379e-06, 2.3047e-06, 2.5342e-06,
           1.2044e-06, 7.4300e-07, 2.3473e-06, 1.8586e-06, 2.9783e-07,
           3.2765e-07, 6.0905e-07, 3.9340e-08],
          [2.3724e-09, 2.2802e-08, 3.1316e-07, 3.0553e-07, 6.3231e-07,
           8.3231e-07, 8.1255e-07, 9.5339e-07, 4.7506e-07, 6.1450e-07,
           1.7005e-07, 5.6671e-08, 6.1404e-09],
          [1.0954e-08, 6.2948e-08, 2.7116e-07, 8.7881e-08, 1.4926e-07,
           1.1168e-07, 9.2481e-08, 5.1922e-08, 1.3447e-07, 2.8271e-07,
           4.4553e-08, 4.0276e-08, 9.0077e-09]],

         [[1.5297e-08, 8.6240e-09, 4.6981e-08, 1.0974e-07, 1.3831e-07,
           4.8733e-07, 1.1030e-06, 5.7330e-07, 2.6232e-07, 9.2240e-08,
           8.1934e-08, 1.5343e-08, 1.9455e-08],
          [1.6616e-08, 2.0568e-08, 7.1484e-08, 5.3308e-07, 5.4613e-07,
           5.9778e-06, 1.2207e-05, 4.1014e-06, 7.0152e-07, 1.1138e-07,
           4.2500e-08, 4.7224e-09, 3.8677e-08],
          [2.0652e-08, 3.9095e-08, 2.5666e-07, 3.0490e-06, 2.1427e-06,
           1.7425e-05, 5.5229e-05, 1.6235e-05, 2.2221e-06, 3.0114e-07,
           6.2283e-08, 8.3433e-09, 3.4391e-08],
          [4.5190e-08, 9.3086e-08, 7.0757e-07, 9.5174e-06, 1.0591e-05,
           3.8391e-05, 6.5713e-05, 1.3507e-04, 1.7843e-05, 2.8552e-06,
           2.9203e-07, 5.3945e-08, 6.0183e-08],
          [3.2393e-07, 3.2212e-07, 1.8235e-06, 8.7348e-06, 6.6608e-06,
           5.4734e-05, 5.6926e-05, 1.3855e-04, 3.3740e-05, 7.1359e-06,
           7.5954e-07, 1.8549e-07, 9.7472e-08],
          [2.0023e-07, 1.4394e-07, 1.1861e-06, 1.4428e-06, 2.8693e-06,
           7.4499e-06, 1.5008e-05, 3.8020e-05, 1.9596e-05, 2.4150e-06,
           1.9793e-07, 5.6082e-08, 7.8031e-08],
          [2.5194e-06, 2.8687e-06, 2.2037e-05, 1.7165e-05, 2.6065e-05,
           5.9447e-05, 9.8825e-05, 5.7865e-05, 5.3573e-05, 7.3358e-06,
           1.6885e-06, 2.0272e-07, 9.8134e-08],
          [5.6857e-06, 5.4171e-06, 2.3540e-04, 7.9368e-05, 3.1935e-04,
           1.0026e-03, 1.1292e-03, 1.6898e-04, 3.2201e-05, 6.7898e-06,
           1.3081e-06, 9.7047e-08, 4.9416e-08],
          [1.7996e-06, 3.4925e-06, 2.1743e-05, 6.8914e-05, 5.3486e-05,
           1.1445e-04, 5.7720e-04, 2.2450e-04, 2.7441e-05, 1.0608e-05,
           8.1745e-07, 1.1640e-07, 9.7658e-08],
          [1.4812e-07, 1.2732e-07, 4.2827e-07, 1.1050e-06, 1.3707e-06,
           5.4172e-06, 4.8421e-05, 1.0947e-05, 1.5695e-06, 2.6830e-07,
           1.7426e-07, 9.6574e-09, 1.2251e-07],
          [3.5264e-08, 1.1732e-08, 5.8496e-08, 2.2245e-07, 5.0584e-07,
           2.2263e-06, 3.8451e-05, 1.2421e-06, 8.7532e-08, 1.6984e-08,
           3.8452e-09, 3.6725e-09, 7.1120e-08],
          [2.5846e-09, 4.7998e-09, 8.3922e-09, 9.2906e-08, 6.7032e-08,
           1.3849e-06, 2.9139e-05, 1.2713e-06, 1.1133e-07, 2.4127e-07,
           7.7394e-09, 2.2493e-08, 5.8847e-08],
          [9.5133e-09, 2.7056e-08, 5.0768e-08, 1.7561e-07, 1.9656e-07,
           6.5547e-07, 2.9649e-06, 4.5977e-07, 1.2133e-07, 2.5720e-07,
           1.5387e-08, 2.7295e-08, 1.3101e-08]]]], device='cuda:0')
conf_size: torch.Size([1, 3, 13, 13])
pred_cls: tensor([[[[[5.1257e-02, 8.5989e-03, 8.8658e-02,  ..., 3.0908e-03,
            4.1193e-03, 3.7631e-03],
           [8.0921e-02, 1.7520e-03, 2.9891e-02,  ..., 2.8145e-03,
            3.1190e-03, 1.5285e-03],
           [5.8159e-02, 1.7646e-03, 1.4585e-02,  ..., 3.4963e-03,
            3.1008e-03, 1.2002e-03],
           ...,
           [1.3854e-01, 2.3599e-03, 1.7594e-02,  ..., 1.2622e-03,
            1.1468e-03, 6.1634e-04],
           [7.3523e-02, 1.5419e-03, 3.9946e-02,  ..., 1.1686e-03,
            1.0999e-03, 9.9885e-04],
           [1.1680e-01, 7.8716e-03, 5.7153e-02,  ..., 2.1596e-02,
            2.9597e-03, 7.1699e-03]],

          [[1.1052e-01, 2.1518e-02, 5.3541e-02,  ..., 8.5978e-03,
            5.1960e-03, 5.6168e-03],
           [1.4229e-01, 5.3774e-03, 2.1137e-02,  ..., 4.5161e-03,
            3.8465e-03, 1.2773e-03],
           [1.0728e-01, 4.8425e-03, 1.3817e-02,  ..., 5.8785e-03,
            3.1808e-03, 1.0883e-03],
           ...,
           [9.4893e-02, 1.9522e-03, 1.7295e-02,  ..., 1.1383e-03,
            9.5408e-04, 1.5205e-04],
           [2.7421e-02, 1.3749e-03, 4.0551e-02,  ..., 4.4582e-04,
            7.4241e-04, 1.4837e-04],
           [7.7285e-02, 6.6028e-03, 7.9951e-02,  ..., 1.5249e-02,
            3.1594e-03, 3.6324e-03]],

          [[1.9860e-01, 4.4759e-02, 4.5683e-02,  ..., 3.0874e-02,
            9.0302e-03, 8.2865e-03],
           [2.6205e-01, 9.5857e-03, 2.3362e-02,  ..., 2.2037e-02,
            7.0484e-03, 2.5038e-03],
           [2.5798e-01, 7.4593e-03, 1.7963e-02,  ..., 2.9879e-02,
            5.4904e-03, 2.1990e-03],
           ...,
           [9.7945e-02, 6.3434e-03, 5.1573e-02,  ..., 1.7007e-03,
            1.1224e-03, 1.3666e-04],
           [4.0388e-03, 1.7144e-03, 3.4414e-02,  ..., 2.4461e-04,
            7.3881e-04, 7.8289e-05],
           [9.2596e-03, 1.2087e-02, 8.3841e-02,  ..., 8.5405e-03,
            3.4906e-03, 2.5974e-03]],

          ...,

          [[6.4891e-01, 4.8504e-03, 7.4176e-02,  ..., 9.5990e-03,
            8.9926e-04, 9.5609e-04],
           [8.6683e-01, 2.3724e-03, 3.9836e-02,  ..., 9.3075e-04,
            2.3877e-04, 1.7796e-04],
           [6.9511e-01, 2.2476e-03, 3.2764e-02,  ..., 8.1486e-04,
            3.2258e-04, 1.7468e-04],
           ...,
           [4.9478e-01, 7.5706e-02, 7.1038e-03,  ..., 8.4015e-05,
            1.5234e-05, 1.3021e-05],
           [1.6766e-01, 2.3389e-02, 3.1656e-02,  ..., 5.8008e-04,
            1.1194e-04, 5.9631e-05],
           [2.7358e-02, 1.3100e-02, 6.9361e-02,  ..., 1.6161e-02,
            1.7178e-03, 1.1744e-03]],

          [[2.7462e-01, 6.4342e-03, 1.3206e-01,  ..., 1.3197e-02,
            5.2032e-04, 6.5855e-04],
           [8.7501e-01, 1.8073e-03, 2.8967e-01,  ..., 8.1676e-04,
            1.0509e-04, 1.2058e-04],
           [7.5966e-01, 4.0440e-04, 4.5068e-01,  ..., 1.1899e-04,
            5.5250e-05, 6.6755e-05],
           ...,
           [5.4178e-01, 8.3625e-03, 8.1378e-02,  ..., 1.0916e-05,
            1.7533e-05, 3.1175e-05],
           [1.8713e-01, 6.7896e-03, 4.2021e-02,  ..., 1.1325e-04,
            1.6111e-04, 7.2782e-05],
           [3.3580e-02, 1.7074e-02, 8.0942e-02,  ..., 7.0166e-03,
            1.5263e-03, 9.5298e-04]],

          [[2.4428e-02, 2.2869e-02, 2.4798e-01,  ..., 1.1974e-02,
            6.8121e-04, 1.4986e-03],
           [5.7961e-02, 3.6652e-03, 6.1994e-01,  ..., 9.7090e-04,
            1.3952e-04, 2.6607e-04],
           [8.7040e-03, 2.3989e-04, 8.4805e-01,  ..., 4.2663e-05,
            4.5022e-05, 8.1536e-05],
           ...,
           [1.0859e-01, 6.8529e-03, 2.3364e-01,  ..., 1.3765e-04,
            7.7721e-05, 2.8521e-04],
           [1.4625e-01, 1.1640e-02, 1.7771e-01,  ..., 8.6452e-04,
            3.8819e-04, 4.4816e-04],
           [1.0530e-01, 3.0273e-02, 1.9554e-01,  ..., 1.4848e-02,
            1.8715e-03, 3.0139e-03]]],


         [[[3.6101e-01, 3.1269e-03, 3.1335e-02,  ..., 3.1456e-03,
            2.7928e-03, 8.6558e-03],
           [2.3442e-01, 9.6765e-04, 2.5748e-02,  ..., 3.0071e-03,
            2.0418e-03, 5.9364e-03],
           [1.3907e-01, 1.0044e-03, 1.9443e-02,  ..., 4.6225e-03,
            2.2823e-03, 3.6243e-03],
           ...,
           [4.2205e-01, 1.5206e-03, 3.9859e-02,  ..., 4.8338e-03,
            1.1964e-03, 2.0056e-03],
           [2.5613e-01, 1.1979e-03, 6.8381e-02,  ..., 4.5780e-03,
            1.2257e-03, 3.5404e-03],
           [2.1284e-01, 3.9245e-03, 3.9665e-02,  ..., 2.0210e-02,
            3.4183e-03, 1.5607e-02]],

          [[2.5066e-01, 6.1761e-03, 2.6431e-02,  ..., 4.3043e-03,
            2.4117e-03, 1.0096e-02],
           [1.0650e-01, 2.2961e-03, 3.3118e-02,  ..., 3.4140e-03,
            1.9784e-03, 4.4554e-03],
           [6.1217e-02, 1.2020e-03, 2.5011e-02,  ..., 7.1278e-03,
            2.0972e-03, 2.2876e-03],
           ...,
           [1.5044e-01, 8.5124e-04, 6.7882e-02,  ..., 2.0951e-03,
            7.6074e-04, 3.8150e-04],
           [6.3506e-02, 7.6212e-04, 1.3975e-01,  ..., 1.2380e-03,
            7.1420e-04, 4.6254e-04],
           [7.0608e-02, 2.9725e-03, 1.0057e-01,  ..., 1.2397e-02,
            3.3880e-03, 7.9159e-03]],

          [[7.1592e-01, 1.3762e-02, 4.0980e-02,  ..., 1.1951e-02,
            3.6157e-03, 1.4972e-02],
           [6.3983e-01, 2.9847e-03, 4.1486e-02,  ..., 1.2936e-02,
            2.7233e-03, 7.1645e-03],
           [7.5249e-01, 1.6973e-03, 3.9900e-02,  ..., 2.3373e-02,
            2.3939e-03, 2.5148e-03],
           ...,
           [4.9595e-01, 1.0068e-03, 1.4413e-01,  ..., 1.6157e-03,
            4.5632e-04, 2.2489e-04],
           [7.2079e-02, 6.8004e-04, 1.6838e-01,  ..., 4.3624e-04,
            4.3915e-04, 1.9966e-04],
           [1.0909e-01, 5.7774e-03, 1.9719e-01,  ..., 5.0845e-03,
            2.5611e-03, 6.4266e-03]],

          ...,

          [[8.6643e-01, 1.9205e-03, 1.4582e-02,  ..., 2.6981e-03,
            8.9505e-04, 1.2705e-03],
           [9.6556e-01, 4.3154e-04, 1.4855e-02,  ..., 4.3016e-04,
            2.3995e-04, 2.7225e-04],
           [9.1904e-01, 4.5849e-04, 1.8061e-02,  ..., 3.8071e-04,
            2.3360e-04, 2.0007e-04],
           ...,
           [4.3811e-01, 1.1224e-01, 6.0956e-03,  ..., 1.3861e-05,
            1.9838e-05, 1.5281e-05],
           [5.9902e-01, 3.3392e-02, 3.5794e-02,  ..., 1.3503e-04,
            9.2911e-05, 5.2818e-05],
           [3.2219e-01, 1.7904e-02, 1.7911e-02,  ..., 4.5078e-03,
            1.1153e-03, 1.7749e-03]],

          [[6.3942e-01, 2.7788e-03, 4.9973e-02,  ..., 1.9219e-03,
            8.5544e-04, 8.4268e-04],
           [9.0769e-01, 5.2951e-04, 1.6236e-01,  ..., 3.2314e-04,
            1.7670e-04, 1.6435e-04],
           [8.9699e-01, 1.6193e-04, 1.9277e-01,  ..., 8.1910e-05,
            7.9075e-05, 1.0910e-04],
           ...,
           [3.1180e-01, 3.9705e-03, 9.4177e-02,  ..., 9.6974e-06,
            3.1415e-05, 3.7493e-05],
           [8.2018e-02, 5.4690e-03, 1.2915e-01,  ..., 8.3814e-05,
            2.4065e-04, 1.1073e-04],
           [8.7505e-02, 1.8370e-02, 7.0125e-02,  ..., 3.0506e-03,
            1.7089e-03, 1.8807e-03]],

          [[4.2665e-01, 5.3146e-03, 5.4472e-02,  ..., 3.7958e-03,
            1.1578e-03, 1.5617e-03],
           [5.6745e-01, 1.1420e-03, 2.6905e-01,  ..., 8.1201e-04,
            2.5813e-04, 2.9930e-04],
           [7.7034e-01, 1.4219e-04, 2.9200e-01,  ..., 6.0479e-05,
            7.5581e-05, 1.2207e-04],
           ...,
           [2.1527e-01, 6.5780e-03, 2.7129e-01,  ..., 2.0020e-04,
            1.9698e-04, 2.5172e-04],
           [1.5708e-01, 1.6101e-02, 3.0208e-01,  ..., 1.5239e-03,
            8.8856e-04, 5.2742e-04],
           [2.4528e-01, 2.7966e-02, 1.2028e-01,  ..., 1.9322e-02,
            4.5083e-03, 5.7912e-03]]],


         [[[3.0474e-01, 6.1449e-03, 4.7162e-02,  ..., 1.0311e-02,
            5.9996e-03, 1.2001e-02],
           [2.3248e-01, 2.4624e-03, 5.5564e-02,  ..., 9.6597e-03,
            4.2081e-03, 7.7844e-03],
           [2.7394e-01, 2.7437e-03, 6.1495e-02,  ..., 1.3746e-02,
            3.7804e-03, 4.0072e-03],
           ...,
           [7.2691e-01, 1.4415e-03, 4.4322e-02,  ..., 6.0543e-03,
            1.4675e-03, 1.5561e-03],
           [3.0910e-01, 1.3213e-03, 6.3851e-02,  ..., 5.6977e-03,
            1.6224e-03, 2.0814e-03],
           [2.6453e-01, 5.3408e-03, 7.5461e-02,  ..., 2.5241e-02,
            4.8584e-03, 1.1425e-02]],

          [[9.5678e-02, 9.2070e-03, 6.8883e-02,  ..., 1.2406e-02,
            5.8687e-03, 1.0928e-02],
           [4.1639e-02, 3.8421e-03, 9.8446e-02,  ..., 9.4157e-03,
            3.6936e-03, 4.2586e-03],
           [8.4582e-02, 2.2736e-03, 1.2807e-01,  ..., 1.4347e-02,
            2.7706e-03, 1.9743e-03],
           ...,
           [6.4087e-01, 1.2024e-03, 1.4179e-01,  ..., 1.7463e-03,
            1.0228e-03, 4.0968e-04],
           [3.0345e-01, 1.0532e-03, 2.0265e-01,  ..., 1.5117e-03,
            1.1805e-03, 4.8921e-04],
           [2.6276e-01, 3.6919e-03, 1.3147e-01,  ..., 1.0662e-02,
            4.1373e-03, 4.8323e-03]],

          [[5.8782e-01, 2.0176e-02, 1.4385e-01,  ..., 1.6823e-02,
            3.9199e-03, 8.9130e-03],
           [7.9859e-01, 5.7153e-03, 1.4739e-01,  ..., 1.2402e-02,
            1.8168e-03, 2.8687e-03],
           [9.0181e-01, 2.9464e-03, 1.6524e-01,  ..., 1.3980e-02,
            1.2959e-03, 9.6359e-04],
           ...,
           [7.5084e-01, 1.3697e-03, 2.5216e-01,  ..., 6.3658e-04,
            5.2224e-04, 1.5603e-04],
           [3.3698e-01, 1.5711e-03, 3.2734e-01,  ..., 4.3483e-04,
            8.8831e-04, 2.7918e-04],
           [3.9825e-01, 7.4404e-03, 2.3956e-01,  ..., 5.7947e-03,
            3.9050e-03, 4.2218e-03]],

          ...,

          [[6.5922e-01, 1.0085e-02, 3.0035e-02,  ..., 8.8194e-03,
            3.4479e-03, 5.7670e-03],
           [9.3036e-01, 1.6327e-03, 4.6140e-02,  ..., 1.1284e-03,
            8.6417e-04, 8.4225e-04],
           [9.0997e-01, 1.1082e-03, 4.1216e-02,  ..., 4.8235e-04,
            4.8479e-04, 4.3268e-04],
           ...,
           [6.8943e-01, 5.6382e-02, 3.3045e-02,  ..., 3.2478e-06,
            3.2292e-05, 1.3447e-05],
           [5.0198e-01, 8.3047e-02, 1.4967e-01,  ..., 9.1089e-05,
            2.1894e-04, 9.1370e-05],
           [3.2294e-01, 6.2687e-02, 8.1757e-02,  ..., 2.9319e-03,
            1.6383e-03, 1.9438e-03]],

          [[5.0818e-01, 1.8016e-02, 1.8694e-01,  ..., 3.6087e-03,
            4.0438e-03, 4.3408e-03],
           [8.6743e-01, 2.0701e-03, 3.7775e-01,  ..., 5.1968e-04,
            5.1415e-04, 3.6227e-04],
           [8.8642e-01, 8.7165e-04, 3.5411e-01,  ..., 1.1742e-04,
            3.1165e-04, 1.8623e-04],
           ...,
           [3.4715e-01, 3.7916e-03, 1.2013e-01,  ..., 1.1700e-05,
            1.1003e-04, 3.8938e-05],
           [3.1263e-01, 6.8539e-03, 2.5432e-01,  ..., 9.8524e-05,
            6.2812e-04, 1.7408e-04],
           [2.0165e-01, 3.7679e-02, 1.2158e-01,  ..., 4.0355e-03,
            2.6446e-03, 2.3976e-03]],

          [[3.1054e-01, 1.7568e-02, 9.2022e-02,  ..., 4.4376e-03,
            5.7494e-03, 7.1585e-03],
           [6.9429e-01, 3.0518e-03, 1.9458e-01,  ..., 8.5680e-04,
            9.4597e-04, 7.1829e-04],
           [8.3350e-01, 9.9729e-04, 1.6863e-01,  ..., 9.1087e-05,
            4.7477e-04, 3.8992e-04],
           ...,
           [2.6458e-01, 1.1567e-02, 3.8199e-01,  ..., 2.2314e-04,
            6.8903e-04, 3.0381e-04],
           [3.3288e-01, 2.0625e-02, 4.7737e-01,  ..., 1.5585e-03,
            2.2613e-03, 8.6090e-04],
           [2.8852e-01, 6.0464e-02, 2.4781e-01,  ..., 2.7119e-02,
            8.3832e-03, 8.3005e-03]]]]], device='cuda:0')
pred_cls_size: torch.Size([1, 3, 13, 13, 80])
grid_x: tensor([[[[ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.]],

         [[ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.]],

         [[ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.],
          [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.]]]],
       device='cuda:0')
grid_x_size: torch.Size([1, 3, 13, 13])
grid_y: tensor([[[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
          [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],
          [ 2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.],
          [ 3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.],
          [ 4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.],
          [ 5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.],
          [ 6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.],
          [ 7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.],
          [ 8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.],
          [ 9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.],
          [10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.],
          [11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.],
          [12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12.]],

         [[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
          [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],
          [ 2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.],
          [ 3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.],
          [ 4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.],
          [ 5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.],
          [ 6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.],
          [ 7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.],
          [ 8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.],
          [ 9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.],
          [10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.],
          [11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.],
          [12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12.]],

         [[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
          [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],
          [ 2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.],
          [ 3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.],
          [ 4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.],
          [ 5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.],
          [ 6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.],
          [ 7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.],
          [ 8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.],
          [ 9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.],
          [10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.],
          [11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.],
          [12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12.]]]],
       device='cuda:0')
grid_y_size: torch.Size([1, 3, 13, 13])
anchor_w: tensor([[[[ 3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,
            3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250],
          [ 3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,
            3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250],
          [ 3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,
            3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250],
          [ 3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,
            3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250],
          [ 3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,
            3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250],
          [ 3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,
            3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250],
          [ 3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,
            3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250],
          [ 3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,
            3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250],
          [ 3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,
            3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250],
          [ 3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,
            3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250],
          [ 3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,
            3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250],
          [ 3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,
            3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250],
          [ 3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250,
            3.6250,  3.6250,  3.6250,  3.6250,  3.6250,  3.6250]],

         [[ 4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,
            4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750],
          [ 4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,
            4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750],
          [ 4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,
            4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750],
          [ 4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,
            4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750],
          [ 4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,
            4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750],
          [ 4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,
            4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750],
          [ 4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,
            4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750],
          [ 4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,
            4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750],
          [ 4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,
            4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750],
          [ 4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,
            4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750],
          [ 4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,
            4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750],
          [ 4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,
            4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750],
          [ 4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750,
            4.8750,  4.8750,  4.8750,  4.8750,  4.8750,  4.8750]],

         [[11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562,
           11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562],
          [11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562,
           11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562],
          [11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562,
           11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562],
          [11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562,
           11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562],
          [11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562,
           11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562],
          [11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562,
           11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562],
          [11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562,
           11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562],
          [11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562,
           11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562],
          [11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562,
           11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562],
          [11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562,
           11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562],
          [11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562,
           11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562],
          [11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562,
           11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562],
          [11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562,
           11.6562, 11.6562, 11.6562, 11.6562, 11.6562, 11.6562]]]],
       device='cuda:0')
anchor_h: tensor([[[[ 2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,
            2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125],
          [ 2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,
            2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125],
          [ 2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,
            2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125],
          [ 2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,
            2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125],
          [ 2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,
            2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125],
          [ 2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,
            2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125],
          [ 2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,
            2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125],
          [ 2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,
            2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125],
          [ 2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,
            2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125],
          [ 2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,
            2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125],
          [ 2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,
            2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125],
          [ 2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,
            2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125],
          [ 2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125,
            2.8125,  2.8125,  2.8125,  2.8125,  2.8125,  2.8125]],

         [[ 6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,
            6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875],
          [ 6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,
            6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875],
          [ 6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,
            6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875],
          [ 6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,
            6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875],
          [ 6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,
            6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875],
          [ 6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,
            6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875],
          [ 6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,
            6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875],
          [ 6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,
            6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875],
          [ 6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,
            6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875],
          [ 6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,
            6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875],
          [ 6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,
            6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875],
          [ 6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,
            6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875],
          [ 6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875,
            6.1875,  6.1875,  6.1875,  6.1875,  6.1875,  6.1875]],

         [[10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875,
           10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875],
          [10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875,
           10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875],
          [10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875,
           10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875],
          [10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875,
           10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875],
          [10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875,
           10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875],
          [10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875,
           10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875],
          [10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875,
           10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875],
          [10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875,
           10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875],
          [10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875,
           10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875],
          [10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875,
           10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875],
          [10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875,
           10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875],
          [10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875,
           10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875],
          [10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875,
           10.1875, 10.1875, 10.1875, 10.1875, 10.1875, 10.1875]]]],
       device='cuda:0')
pred_boxes: tensor([[[[[ 0.0000e+00,  2.1016e+00,  2.8125e+00,  2.8125e+00],
           [ 2.8125e+00,  2.8125e+00,  2.8125e+00,  2.8125e+00],
           [ 2.8125e+00,  2.8125e+00,  2.8125e+00,  2.8125e+00],
           ...,
           [ 2.8125e+00,  2.8125e+00,  2.8125e+00,  2.8125e+00],
           [ 2.8125e+00,  2.8125e+00,  2.8125e+00,  2.8125e+00],
           [ 2.8125e+00,  2.8125e+00,  2.8125e+00,  2.8125e+00]],

          [[ 2.8125e+00,  2.8125e+00,  2.8125e+00,  2.8125e+00],
           [ 2.8125e+00,  2.8125e+00,  2.8125e+00,  2.8125e+00],
           [ 2.8125e+00,  2.8125e+00,  2.8125e+00,  2.8125e+00],
           ...,
           [ 2.8125e+00,  2.8125e+00,  2.8125e+00,  2.8125e+00],
           [ 2.8125e+00,  2.8125e+00,  2.8125e+00,  2.8125e+00],
           [ 2.8125e+00,  2.8125e+00,  2.8125e+00,  2.8125e+00]],

          [[ 2.8125e+00,  2.8125e+00,  2.8125e+00,  2.8125e+00],
           [ 2.8125e+00,  2.8125e+00,  2.8125e+00,  2.8125e+00],
           [ 2.8125e+00,  2.8125e+00,  2.8125e+00,  2.8125e+00],
           ...,
           [ 2.8125e+00,  2.8125e+00,  2.8125e+00,  2.8125e+00],
           [ 2.8125e+00,  2.8125e+00,  2.8125e+00,  2.8125e+00],
           [ 2.8125e+00,  2.8125e+00,  2.8125e+00,  2.8125e+00]],

          ...,

          [[ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           ...,
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00]],

          [[ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           ...,
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00]],

          [[ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           ...,
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00]]],


         [[[ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           ...,
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00]],

          [[ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           ...,
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00]],

          [[ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           ...,
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00],
           [ 0.0000e+00,  2.1016e+00,  0.0000e+00,  2.1016e+00]],

          ...,

          [[ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           ...,
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00]],

          [[ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           ...,
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00]],

          [[ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           ...,
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00]]],


         [[[ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           ...,
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00]],

          [[ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           ...,
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00]],

          [[ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           ...,
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00],
           [ 0.0000e+00,  2.5684e+00,  0.0000e+00,  2.5684e+00]],

          ...,

          [[ 0.0000e+00,  1.5168e+00,  3.6893e+19,  8.6176e-01],
           [-2.0000e+00,  8.1546e-01,  2.0000e+00,  7.2988e-01],
           [ 1.0842e-19,  1.6517e+00, -1.0842e-19,  8.1741e-01],
           ...,
           [-0.0000e+00,  9.3772e-01, -0.0000e+00,  1.0176e+00],
           [ 2.0000e+00,  1.8246e+00,  1.0842e-19,  9.6644e-01],
           [-3.6893e+19,  1.5224e+00, -2.0000e+00,  1.0734e+00]],

          [[-3.6893e+19,  8.6628e-01, -1.0842e-19,  9.0430e-01],
           [-3.6893e+19,  1.8505e+00, -0.0000e+00,  9.0678e-01],
           [-0.0000e+00,  1.5402e+00,  0.0000e+00,  1.0987e+00],
           ...,
           [ 0.0000e+00,  1.6991e+00,  0.0000e+00,  9.9405e-01],
           [ 3.6893e+19,  1.6146e+00,  2.0000e+00,  9.6772e-01],
           [-2.0000e+00,  9.3746e-01,  3.6893e+19,  9.4255e-01]],

          [[-0.0000e+00,  1.7898e+00,  0.0000e+00,  1.0364e+00],
           [-0.0000e+00,  1.2403e+00,  2.0000e+00,  1.0161e+00],
           [-2.0000e+00,  9.2283e-01,  1.0842e-19,  9.6727e-01],
           ...,
           [-1.0842e-19,  1.2572e+00,  3.6893e+19,  3.9696e-01],
           [ 0.0000e+00,  5.0363e-01,  0.0000e+00,  4.6133e-01],
           [-3.6893e+19,  1.7505e+00, -0.0000e+00,  1.4161e+00]]]]],
       device='cuda:0')
pred_boxes: tensor([[[[[ 0.4212,  0.6324,  5.1674,  1.7890],
           [ 1.6280,  0.7359,  4.1574,  1.8639],
           [ 2.6086,  0.7436,  5.8741,  1.8296],
           ...,
           [10.6057,  0.6986,  5.2119,  1.4963],
           [11.3094,  0.7082,  4.0983,  1.5751],
           [12.4602,  0.4671,  6.2423,  1.6530]],

          [[ 0.4350,  1.4965,  3.9384,  2.4258],
           [ 1.6254,  1.4938,  3.0950,  2.8035],
           [ 2.6183,  1.5103,  4.5493,  2.8335],
           ...,
           [10.6605,  1.5197,  4.6802,  2.7899],
           [11.2862,  1.6906,  3.4707,  3.0497],
           [12.4018,  1.6478,  5.1846,  2.6232]],

          [[ 0.4031,  2.6192,  4.1621,  2.4786],
           [ 1.6352,  2.5503,  3.2013,  2.9706],
           [ 2.6027,  2.5474,  4.3434,  2.4962],
           ...,
           [10.7151,  2.3537,  4.3557,  2.5719],
           [11.4131,  2.3147,  3.2271,  2.9100],
           [12.3399,  2.4099,  4.5157,  2.3936]],

          ...,

          [[ 0.3681, 10.6122,  3.2601,  2.7503],
           [ 1.5346, 10.5398,  3.0478,  3.2199],
           [ 2.3642, 10.5032,  4.2532,  2.8736],
           ...,
           [10.3299, 10.4921,  5.0818,  2.2077],
           [11.3430, 10.6726,  3.3991,  2.8724],
           [12.4880, 10.5921,  5.0143,  2.5048]],

          [[ 0.3465, 11.5255,  2.9233,  2.6250],
           [ 1.5284, 11.4232,  3.1464,  2.7002],
           [ 2.5046, 11.6510,  4.7150,  2.5282],
           ...,
           [10.4271, 11.5650,  5.0444,  2.3320],
           [11.3137, 11.5872,  3.1583,  2.6785],
           [12.5884, 11.6904,  4.6730,  2.2791]],

          [[ 0.4381, 12.3223,  4.2062,  1.5926],
           [ 1.7521, 12.3151,  4.1754,  1.5457],
           [ 2.6319, 12.3944,  5.2092,  1.3841],
           ...,
           [10.4412, 12.4411,  5.7980,  1.1770],
           [11.3387, 12.2972,  4.2976,  1.5032],
           [12.5641, 12.3688,  6.2320,  1.5095]]],


         [[[ 0.5677,  0.4699,  3.8812, 11.1353],
           [ 1.6325,  0.4979,  4.0276,  8.6841],
           [ 2.6419,  0.5245,  5.2985,  7.2241],
           ...,
           [10.5674,  0.5787,  4.8401,  8.2280],
           [11.4127,  0.4817,  4.2029,  8.6243],
           [12.5685,  0.4550,  4.3272,  9.5173]],

          [[ 0.6469,  1.5991,  4.2167,  9.7042],
           [ 1.5933,  1.7160,  4.4550,  6.5072],
           [ 2.6475,  1.7265,  5.9047,  5.1129],
           ...,
           [10.5306,  1.8003,  5.5451,  4.5417],
           [11.2696,  1.8253,  4.5405,  4.6169],
           [12.5141,  1.6248,  4.9217,  6.7295]],

          [[ 0.6573,  2.6126,  3.6628, 10.1761],
           [ 1.6155,  2.6410,  3.6413,  6.8630],
           [ 2.6130,  2.5429,  5.3595,  5.9647],
           ...,
           [10.5040,  2.4985,  5.4155,  5.2252],
           [11.3059,  2.6278,  4.0087,  5.0735],
           [12.4181,  2.4661,  4.4404,  7.3772]],

          ...,

          [[ 0.6517, 10.5681,  3.4352,  8.9220],
           [ 1.5912, 10.4671,  3.2264,  6.0941],
           [ 2.4072, 10.6171,  4.7545,  5.8106],
           ...,
           [10.2319, 10.3381,  4.9325,  5.7671],
           [11.3726, 10.4793,  4.1226,  6.3580],
           [12.4538, 10.5292,  3.3830, 10.0420]],

          [[ 0.6463, 11.3948,  3.7818,  8.5150],
           [ 1.6782, 11.2232,  3.8098,  5.1763],
           [ 2.5240, 11.2490,  4.7048,  5.1399],
           ...,
           [10.2424, 11.3259,  5.5458,  5.0323],
           [11.3172, 11.3755,  3.9889,  6.6815],
           [12.5731, 11.3709,  4.0271,  8.1560]],

          [[ 0.6092, 12.5128,  3.7626, 11.2080],
           [ 1.6781, 12.5243,  3.8862,  8.9376],
           [ 2.6250, 12.4700,  4.4117,  8.2289],
           ...,
           [10.3856, 12.5356,  5.0106,  8.0660],
           [11.4715, 12.5608,  4.2316,  8.8241],
           [12.5259, 12.5399,  4.1828, 10.3240]]],


         [[[ 0.6742,  0.5711, 10.3247, 11.2882],
           [ 1.7192,  0.5940, 10.5197, 10.2492],
           [ 2.6882,  0.5645, 10.8529,  9.6894],
           ...,
           [10.5040,  0.5488,  9.6085, 10.5999],
           [11.5207,  0.4729,  9.8897, 10.5453],
           [12.6212,  0.5261, 10.4853, 10.3019]],

          [[ 0.6407,  1.5746, 10.1207, 10.1086],
           [ 1.6921,  1.6232, 10.6119,  8.1240],
           [ 2.7382,  1.6380, 10.2625,  8.0495],
           ...,
           [10.4725,  1.6983,  9.2232,  7.3711],
           [11.4526,  1.7047,  8.9967,  7.3595],
           [12.6522,  1.6084, 10.9257,  8.0026]],

          [[ 0.5413,  2.5813, 10.1246, 10.7505],
           [ 1.6982,  2.6032, 10.3238,  9.3743],
           [ 2.7378,  2.6246,  9.5621,  8.0598],
           ...,
           [10.4316,  2.5422,  9.0931,  7.0472],
           [11.4665,  2.5430,  9.6021,  7.5259],
           [12.6991,  2.4893, 11.1314,  8.2021]],

          ...,

          [[ 0.6250, 10.4939, 10.4660,  9.3785],
           [ 1.5468, 10.4929,  8.9819,  9.3860],
           [ 2.6983, 10.3824,  9.2898,  8.2165],
           ...,
           [10.3136, 10.3234, 10.1708,  7.3703],
           [11.5193, 10.4918,  7.5599,  8.4792],
           [12.5580, 10.5629, 11.3966,  9.8387]],

          [[ 0.5852, 11.4758, 10.8609,  8.3105],
           [ 1.6330, 11.4603,  9.8867,  8.5429],
           [ 2.7239, 11.3768, 10.0302,  7.5928],
           ...,
           [10.2539, 11.3111, 10.4692,  6.7929],
           [11.6578, 11.4129,  8.4849,  7.1878],
           [12.5708, 11.4176, 12.3315,  7.9202]],

          [[ 0.5808, 12.5080,  9.9214, 10.6440],
           [ 1.6758, 12.5258,  8.1690, 10.9744],
           [ 2.6982, 12.5831,  9.3294, 11.0971],
           ...,
           [10.4259, 12.5633,  9.7560, 10.1662],
           [11.6060, 12.5419,  8.5725,  9.1284],
           [12.5183, 12.4131, 11.0025, 11.4356]]]]], device='cuda:0')
pred_boxes_size: torch.Size([1, 3, 13, 13, 4])
pred_boxes.view(batch_size, -1, 4): tensor([[[ 0.4212,  0.6324,  5.1674,  1.7890],
         [ 1.6280,  0.7359,  4.1574,  1.8639],
         [ 2.6086,  0.7436,  5.8741,  1.8296],
         ...,
         [10.4259, 12.5633,  9.7560, 10.1662],
         [11.6060, 12.5419,  8.5725,  9.1284],
         [12.5183, 12.4131, 11.0025, 11.4356]]], device='cuda:0')
up_size: torch.Size([1, 507, 4])
conf.view(batch_size, -1, 1): tensor([[[6.1134e-09],
         [1.1090e-07],
         [3.5762e-07],
         [1.5550e-06],
         [2.3251e-06],
         [2.5755e-06],
         [7.9206e-06],
         [2.3898e-06],
         [2.0910e-06],
         [1.0648e-06],
         [2.0287e-06],
         [8.7532e-07],
         [2.0025e-08],
         [5.0063e-09],
         [9.6938e-07],
         [6.7985e-06],
         [2.2208e-05],
         [2.2194e-05],
         [7.1137e-06],
         [7.7830e-06],
         [3.5442e-06],
         [4.5183e-06],
         [1.9156e-06],
         [8.7330e-06],
         [7.6498e-06],
         [2.5309e-08],
         [8.6441e-09],
         [6.1924e-07],
         [1.7956e-06],
         [3.9309e-06],
         [2.0543e-06],
         [5.9470e-07],
         [5.9120e-07],
         [6.5143e-07],
         [4.7200e-07],
         [8.3280e-07],
         [1.8039e-06],
         [7.3200e-06],
         [2.3993e-08],
         [2.2756e-08],
         [9.9879e-07],
         [4.2530e-06],
         [5.6757e-06],
         [5.8074e-06],
         [4.9023e-06],
         [5.8817e-06],
         [7.2240e-06],
         [7.8790e-06],
         [4.6959e-06],
         [1.7562e-06],
         [3.1882e-06],
         [5.1268e-09],
         [3.6107e-08],
         [8.3911e-06],
         [4.0430e-05],
         [4.0982e-05],
         [4.2526e-05],
         [1.3166e-05],
         [9.7424e-06],
         [1.2504e-05],
         [6.0583e-05],
         [4.6570e-05],
         [2.1213e-05],
         [6.2273e-05],
         [8.4133e-08],
         [5.4236e-07],
         [2.5578e-04],
         [5.7262e-04],
         [4.9084e-04],
         [4.2239e-04],
         [2.4356e-04],
         [3.9725e-04],
         [1.8155e-04],
         [2.2502e-04],
         [1.2726e-04],
         [7.1919e-05],
         [7.8570e-05],
         [5.5464e-07],
         [4.0474e-06],
         [3.3137e-03],
         [8.6231e-03],
         [1.8788e-02],
         [7.2714e-03],
         [4.0764e-03],
         [2.2451e-03],
         [9.9272e-01],
         [8.5318e-01],
         [1.1739e-02],
         [2.6537e-02],
         [2.1459e-05],
         [1.0838e-07],
         [1.6247e-06],
         [6.5208e-02],
         [4.5359e-03],
         [3.2801e-03],
         [7.4849e-04],
         [4.0648e-04],
         [5.0000e-05],
         [7.9433e-04],
         [4.6677e-04],
         [7.4120e-01],
         [9.4194e-01],
         [2.2059e-05],
         [3.2419e-08],
         [3.5284e-07],
         [3.6371e-05],
         [3.4018e-05],
         [2.0747e-05],
         [4.9506e-06],
         [6.8682e-06],
         [5.6083e-05],
         [3.3349e-05],
         [7.0896e-04],
         [9.9891e-01],
         [9.7096e-01],
         [4.1620e-05],
         [8.2664e-08],
         [7.1053e-08],
         [1.5303e-06],
         [1.1370e-06],
         [1.3912e-06],
         [1.3655e-06],
         [2.6558e-06],
         [1.6330e-05],
         [8.7046e-06],
         [1.9617e-05],
         [2.6921e-01],
         [2.6415e-02],
         [1.6042e-06],
         [3.8075e-08],
         [6.0848e-08],
         [3.1515e-06],
         [5.5320e-07],
         [5.8980e-07],
         [9.0074e-07],
         [5.5310e-06],
         [1.2238e-05],
         [7.8854e-06],
         [2.1121e-06],
         [2.9268e-06],
         [1.4862e-06],
         [2.2634e-06],
         [2.6589e-08],
         [1.1346e-08],
         [1.6221e-06],
         [8.3098e-07],
         [1.4281e-06],
         [5.2733e-07],
         [2.4437e-06],
         [1.3596e-05],
         [4.3318e-06],
         [1.8240e-06],
         [1.9574e-06],
         [4.6612e-07],
         [9.2590e-07],
         [2.3997e-08],
         [1.4784e-08],
         [1.3843e-06],
         [2.0975e-05],
         [5.8043e-05],
         [2.9883e-05],
         [7.4100e-05],
         [3.4118e-04],
         [9.8822e-05],
         [3.7515e-05],
         [3.6635e-05],
         [3.8570e-06],
         [1.5251e-06],
         [1.4243e-07],
         [2.4423e-09],
         [3.0012e-09],
         [1.6232e-08],
         [3.8787e-08],
         [3.8851e-08],
         [4.2156e-08],
         [4.4803e-08],
         [1.8734e-08],
         [3.1085e-08],
         [1.1753e-08],
         [4.6886e-08],
         [8.9571e-09],
         [1.2018e-08],
         [8.4686e-09],
         [5.8499e-08],
         [1.1825e-06],
         [5.5898e-06],
         [4.5200e-06],
         [3.4268e-06],
         [1.6894e-06],
         [7.1351e-07],
         [8.0513e-07],
         [8.6987e-07],
         [2.7513e-06],
         [1.8302e-07],
         [4.7359e-08],
         [1.5079e-08],
         [3.4143e-07],
         [5.2079e-06],
         [8.5762e-06],
         [3.2098e-06],
         [1.6077e-06],
         [1.7570e-06],
         [1.4615e-06],
         [2.7384e-06],
         [2.8835e-06],
         [4.3900e-06],
         [9.6292e-07],
         [5.1342e-08],
         [1.7016e-07],
         [2.7349e-06],
         [1.3575e-05],
         [2.4353e-05],
         [1.0595e-05],
         [3.8344e-06],
         [3.4110e-06],
         [3.2745e-06],
         [2.5106e-05],
         [1.1358e-05],
         [7.3590e-06],
         [8.9657e-06],
         [1.3468e-07],
         [3.5115e-07],
         [5.4431e-06],
         [2.0063e-05],
         [3.7445e-05],
         [2.4054e-05],
         [2.2622e-05],
         [2.0911e-05],
         [7.5041e-06],
         [2.2046e-05],
         [1.7690e-05],
         [6.3918e-06],
         [1.1454e-05],
         [2.5116e-07],
         [4.6250e-07],
         [2.6911e-06],
         [2.1825e-05],
         [6.3091e-05],
         [2.0381e-05],
         [1.2533e-05],
         [1.7343e-05],
         [1.1613e-05],
         [1.0763e-05],
         [4.0280e-06],
         [5.7132e-07],
         [2.2437e-06],
         [9.0895e-08],
         [1.7375e-06],
         [8.5225e-05],
         [3.6796e-04],
         [1.3552e-03],
         [4.0486e-04],
         [1.6468e-04],
         [3.1497e-04],
         [5.7458e-04],
         [7.7458e-05],
         [1.4144e-03],
         [2.0561e-03],
         [1.5559e-06],
         [3.3984e-08],
         [3.7507e-06],
         [1.0382e-03],
         [8.3060e-03],
         [9.9151e-03],
         [2.5039e-03],
         [1.6247e-03],
         [1.6011e-03],
         [3.1173e-04],
         [2.8350e-04],
         [6.5146e-01],
         [7.0198e-01],
         [4.9025e-06],
         [5.9168e-08],
         [1.4325e-06],
         [6.8977e-05],
         [1.3156e-04],
         [2.4317e-04],
         [5.2129e-05],
         [1.7752e-05],
         [3.4943e-05],
         [8.8215e-05],
         [1.0970e-04],
         [5.8796e-01],
         [1.0817e-01],
         [2.4389e-06],
         [1.6049e-07],
         [1.1684e-07],
         [5.2997e-06],
         [9.9988e-06],
         [6.3284e-06],
         [3.0274e-06],
         [1.5887e-06],
         [4.3759e-06],
         [1.4812e-05],
         [1.4041e-05],
         [2.3060e-03],
         [2.4453e-04],
         [1.0311e-06],
         [6.3203e-08],
         [1.4275e-07],
         [1.5879e-06],
         [4.6379e-06],
         [2.3047e-06],
         [2.5342e-06],
         [1.2044e-06],
         [7.4300e-07],
         [2.3473e-06],
         [1.8586e-06],
         [2.9783e-07],
         [3.2765e-07],
         [6.0905e-07],
         [3.9340e-08],
         [2.3724e-09],
         [2.2802e-08],
         [3.1316e-07],
         [3.0553e-07],
         [6.3231e-07],
         [8.3231e-07],
         [8.1255e-07],
         [9.5339e-07],
         [4.7506e-07],
         [6.1450e-07],
         [1.7005e-07],
         [5.6671e-08],
         [6.1404e-09],
         [1.0954e-08],
         [6.2948e-08],
         [2.7116e-07],
         [8.7881e-08],
         [1.4926e-07],
         [1.1168e-07],
         [9.2481e-08],
         [5.1922e-08],
         [1.3447e-07],
         [2.8271e-07],
         [4.4553e-08],
         [4.0276e-08],
         [9.0077e-09],
         [1.5297e-08],
         [8.6240e-09],
         [4.6981e-08],
         [1.0974e-07],
         [1.3831e-07],
         [4.8733e-07],
         [1.1030e-06],
         [5.7330e-07],
         [2.6232e-07],
         [9.2240e-08],
         [8.1934e-08],
         [1.5343e-08],
         [1.9455e-08],
         [1.6616e-08],
         [2.0568e-08],
         [7.1484e-08],
         [5.3308e-07],
         [5.4613e-07],
         [5.9778e-06],
         [1.2207e-05],
         [4.1014e-06],
         [7.0152e-07],
         [1.1138e-07],
         [4.2500e-08],
         [4.7224e-09],
         [3.8677e-08],
         [2.0652e-08],
         [3.9095e-08],
         [2.5666e-07],
         [3.0490e-06],
         [2.1427e-06],
         [1.7425e-05],
         [5.5229e-05],
         [1.6235e-05],
         [2.2221e-06],
         [3.0114e-07],
         [6.2283e-08],
         [8.3433e-09],
         [3.4391e-08],
         [4.5190e-08],
         [9.3086e-08],
         [7.0757e-07],
         [9.5174e-06],
         [1.0591e-05],
         [3.8391e-05],
         [6.5713e-05],
         [1.3507e-04],
         [1.7843e-05],
         [2.8552e-06],
         [2.9203e-07],
         [5.3945e-08],
         [6.0183e-08],
         [3.2393e-07],
         [3.2212e-07],
         [1.8235e-06],
         [8.7348e-06],
         [6.6608e-06],
         [5.4734e-05],
         [5.6926e-05],
         [1.3855e-04],
         [3.3740e-05],
         [7.1359e-06],
         [7.5954e-07],
         [1.8549e-07],
         [9.7472e-08],
         [2.0023e-07],
         [1.4394e-07],
         [1.1861e-06],
         [1.4428e-06],
         [2.8693e-06],
         [7.4499e-06],
         [1.5008e-05],
         [3.8020e-05],
         [1.9596e-05],
         [2.4150e-06],
         [1.9793e-07],
         [5.6082e-08],
         [7.8031e-08],
         [2.5194e-06],
         [2.8687e-06],
         [2.2037e-05],
         [1.7165e-05],
         [2.6065e-05],
         [5.9447e-05],
         [9.8825e-05],
         [5.7865e-05],
         [5.3573e-05],
         [7.3358e-06],
         [1.6885e-06],
         [2.0272e-07],
         [9.8134e-08],
         [5.6857e-06],
         [5.4171e-06],
         [2.3540e-04],
         [7.9368e-05],
         [3.1935e-04],
         [1.0026e-03],
         [1.1292e-03],
         [1.6898e-04],
         [3.2201e-05],
         [6.7898e-06],
         [1.3081e-06],
         [9.7047e-08],
         [4.9416e-08],
         [1.7996e-06],
         [3.4925e-06],
         [2.1743e-05],
         [6.8914e-05],
         [5.3486e-05],
         [1.1445e-04],
         [5.7720e-04],
         [2.2450e-04],
         [2.7441e-05],
         [1.0608e-05],
         [8.1745e-07],
         [1.1640e-07],
         [9.7658e-08],
         [1.4812e-07],
         [1.2732e-07],
         [4.2827e-07],
         [1.1050e-06],
         [1.3707e-06],
         [5.4172e-06],
         [4.8421e-05],
         [1.0947e-05],
         [1.5695e-06],
         [2.6830e-07],
         [1.7426e-07],
         [9.6574e-09],
         [1.2251e-07],
         [3.5264e-08],
         [1.1732e-08],
         [5.8496e-08],
         [2.2245e-07],
         [5.0584e-07],
         [2.2263e-06],
         [3.8451e-05],
         [1.2421e-06],
         [8.7532e-08],
         [1.6984e-08],
         [3.8452e-09],
         [3.6725e-09],
         [7.1120e-08],
         [2.5846e-09],
         [4.7998e-09],
         [8.3922e-09],
         [9.2906e-08],
         [6.7032e-08],
         [1.3849e-06],
         [2.9139e-05],
         [1.2713e-06],
         [1.1133e-07],
         [2.4127e-07],
         [7.7394e-09],
         [2.2493e-08],
         [5.8847e-08],
         [9.5133e-09],
         [2.7056e-08],
         [5.0768e-08],
         [1.7561e-07],
         [1.9656e-07],
         [6.5547e-07],
         [2.9649e-06],
         [4.5977e-07],
         [1.2133e-07],
         [2.5720e-07],
         [1.5387e-08],
         [2.7295e-08],
         [1.3101e-08]]], device='cuda:0')
up_size: torch.Size([1, 507, 1])
pred_cls.view(batch_size, -1, self.num_classes): tensor([[[5.1257e-02, 8.5989e-03, 8.8658e-02,  ..., 3.0908e-03,
          4.1193e-03, 3.7631e-03],
         [8.0921e-02, 1.7520e-03, 2.9891e-02,  ..., 2.8145e-03,
          3.1190e-03, 1.5285e-03],
         [5.8159e-02, 1.7646e-03, 1.4585e-02,  ..., 3.4963e-03,
          3.1008e-03, 1.2002e-03],
         ...,
         [2.6458e-01, 1.1567e-02, 3.8199e-01,  ..., 2.2314e-04,
          6.8903e-04, 3.0381e-04],
         [3.3288e-01, 2.0625e-02, 4.7737e-01,  ..., 1.5585e-03,
          2.2613e-03, 8.6090e-04],
         [2.8852e-01, 6.0464e-02, 2.4781e-01,  ..., 2.7119e-02,
          8.3832e-03, 8.3005e-03]]], device='cuda:0')
up_size: torch.Size([1, 507, 80])
output: tensor([[[1.3478e+01, 2.0237e+01, 1.6536e+02,  ..., 3.0908e-03,
          4.1193e-03, 3.7631e-03],
         [5.2095e+01, 2.3547e+01, 1.3304e+02,  ..., 2.8145e-03,
          3.1190e-03, 1.5285e-03],
         [8.3474e+01, 2.3794e+01, 1.8797e+02,  ..., 3.4963e-03,
          3.1008e-03, 1.2002e-03],
         ...,
         [3.3363e+02, 4.0203e+02, 3.1219e+02,  ..., 2.2314e-04,
          6.8903e-04, 3.0381e-04],
         [3.7139e+02, 4.0134e+02, 2.7432e+02,  ..., 1.5585e-03,
          2.2613e-03, 8.6090e-04],
         [4.0059e+02, 3.9722e+02, 3.5208e+02,  ..., 2.7119e-02,
          8.3832e-03, 8.3005e-03]]], device='cuda:0')
up_size: torch.Size([1, 507, 85])
input: tensor([[[[ 1.7456e-01, -5.0865e-01, -7.2535e-01,  ...,  3.4713e-01,
            3.0944e-01,  2.1388e-01],
          [ 5.9051e-01, -3.8293e-01, -1.3658e+00,  ...,  6.0178e-01,
            8.5967e-01, -2.5893e-01],
          [ 5.9701e-01, -5.1714e-02, -9.9055e-01,  ...,  6.9959e-01,
            6.6510e-01,  4.1134e-03],
          ...,
          [ 2.4699e-01, -1.4543e+00, -9.9720e-01,  ...,  1.1781e+00,
            1.1586e+00, -3.1888e-01],
          [ 9.4017e-01, -1.2867e+00, -9.5000e-01,  ...,  4.4380e-01,
            1.2338e+00, -1.1236e+00],
          [-9.2820e-02, -5.6337e-01, -7.4308e-01,  ...,  4.8898e-01,
            7.4961e-01, -9.0234e-01]],

         [[ 8.4547e-01,  8.0839e-01,  4.9921e-01,  ...,  5.7710e-02,
            3.5005e-01,  8.2541e-02],
          [ 3.4459e-01,  4.2421e-01,  9.1398e-01,  ...,  3.4915e-01,
            4.1856e-01,  2.6408e-01],
          [ 1.6843e-02,  9.7663e-02,  9.5437e-02,  ...,  5.9548e-01,
            2.6093e-01, -1.4515e-01],
          ...,
          [-1.8261e-02,  3.6553e-02,  2.6186e-01,  ...,  5.7175e-02,
            3.5951e-01, -1.1386e-02],
          [-8.9965e-01, -5.0178e-01, -3.4230e-01,  ..., -2.6485e-01,
           -3.7191e-01, -6.9480e-01],
          [-2.9508e-01, -2.9572e-01,  7.2177e-02,  ...,  2.6253e-01,
           -1.3340e-01, -2.5788e-01]],

         [[-3.2805e-01, -1.7924e-01, -2.9214e-01,  ..., -1.4247e-01,
           -9.0359e-02, -7.0115e-01],
          [-2.1294e-01, -6.6390e-02, -4.2167e-02,  ..., -5.7922e-02,
            1.2491e-01, -6.9174e-01],
          [-3.4444e-01, -1.8827e-01, -1.5334e-01,  ..., -1.2880e-01,
            4.3016e-02, -7.9705e-01],
          ...,
          [-6.0267e-01,  1.3658e-01,  2.8537e-02,  ...,  1.7743e-01,
            2.9635e-01, -8.0203e-01],
          [-2.1854e-01,  1.0438e-01,  9.8805e-02,  ...,  1.8391e-01,
            2.2500e-01, -4.9221e-01],
          [-4.8502e-01,  3.2415e-02, -1.8253e-01,  ..., -1.5220e-01,
           -4.4695e-02, -5.4668e-01]],

         ...,

         [[-6.5973e+00, -6.4943e+00, -5.9757e+00,  ..., -5.9673e+00,
           -6.8816e+00, -6.8568e+00],
          [-7.0179e+00, -6.7793e+00, -6.3370e+00,  ..., -5.4675e+00,
           -6.4575e+00, -6.6347e+00],
          [-7.6809e+00, -7.8827e+00, -7.4753e+00,  ..., -6.4535e+00,
           -6.7058e+00, -6.3769e+00],
          ...,
          [-5.3987e+00, -7.5721e+00, -9.1797e+00,  ..., -8.6224e+00,
           -6.7245e+00, -5.4607e+00],
          [-4.4494e+00, -6.1310e+00, -9.2578e+00,  ..., -6.7358e+00,
           -5.3373e+00, -4.2818e+00],
          [-4.6733e+00, -5.7865e+00, -7.6644e+00,  ..., -6.4964e+00,
           -4.9618e+00, -3.9562e+00]],

         [[-5.9757e+00, -6.0883e+00, -6.2843e+00,  ..., -7.2192e+00,
           -7.0305e+00, -7.0844e+00],
          [-5.4401e+00, -5.7699e+00, -6.5405e+00,  ..., -5.9328e+00,
           -6.0836e+00, -6.6535e+00],
          [-5.5299e+00, -6.4686e+00, -7.1376e+00,  ..., -6.3750e+00,
           -6.8595e+00, -7.2013e+00],
          ...,
          [-7.1149e+00, -7.5080e+00, -8.1629e+00,  ..., -8.0371e+00,
           -7.3083e+00, -7.5556e+00],
          [-7.1043e+00, -7.1426e+00, -8.0753e+00,  ..., -7.3967e+00,
           -6.9238e+00, -7.1697e+00],
          [-7.7158e+00, -7.1821e+00, -7.1958e+00,  ..., -6.9121e+00,
           -6.6888e+00, -6.8633e+00]],

         [[-5.9303e+00, -6.4838e+00, -6.3635e+00,  ..., -6.6236e+00,
           -6.8523e+00, -6.4033e+00],
          [-5.5059e+00, -6.2644e+00, -6.9383e+00,  ..., -5.3060e+00,
           -5.8278e+00, -5.5921e+00],
          [-5.7314e+00, -6.8136e+00, -7.1035e+00,  ..., -5.3559e+00,
           -5.8039e+00, -5.3253e+00],
          ...,
          [-7.2087e+00, -8.1927e+00, -8.6066e+00,  ..., -9.7550e+00,
           -8.6882e+00, -8.2815e+00],
          [-6.7858e+00, -7.9675e+00, -8.8471e+00,  ..., -9.5084e+00,
           -8.1015e+00, -7.8775e+00],
          [-7.1242e+00, -7.3276e+00, -7.4342e+00,  ..., -8.1828e+00,
           -7.2250e+00, -7.2934e+00]]]], device='cuda:0')
input_size: torch.Size([1, 255, 26, 26])
scaled_anchors: [(1.875, 3.8125), (3.875, 2.8125), (3.6875, 7.4375)]
prediction: tensor([[[[[ 1.7456e-01,  8.4547e-01, -3.2805e-01,  ..., -6.2424e+00,
            -5.4730e+00, -6.4786e+00],
           [-5.0865e-01,  8.0839e-01, -1.7924e-01,  ..., -6.2795e+00,
            -5.2032e+00, -6.9719e+00],
           [-7.2535e-01,  4.9921e-01, -2.9214e-01,  ..., -5.3246e+00,
            -5.2595e+00, -6.1615e+00],
           ...,
           [ 3.4713e-01,  5.7710e-02, -1.4247e-01,  ..., -5.0049e+00,
            -6.9133e+00, -6.4106e+00],
           [ 3.0944e-01,  3.5005e-01, -9.0359e-02,  ..., -5.9000e+00,
            -6.4271e+00, -6.7465e+00],
           [ 2.1388e-01,  8.2541e-02, -7.0115e-01,  ..., -6.2036e+00,
            -6.4759e+00, -6.6140e+00]],

          [[ 5.9051e-01,  3.4459e-01, -2.1294e-01,  ..., -7.3549e+00,
            -5.2624e+00, -6.6962e+00],
           [-3.8293e-01,  4.2421e-01, -6.6390e-02,  ..., -7.3493e+00,
            -5.1921e+00, -7.5746e+00],
           [-1.3658e+00,  9.1398e-01, -4.2167e-02,  ..., -6.5209e+00,
            -6.1932e+00, -7.5678e+00],
           ...,
           [ 6.0178e-01,  3.4915e-01, -5.7922e-02,  ..., -5.4234e+00,
            -5.8941e+00, -5.8004e+00],
           [ 8.5967e-01,  4.1856e-01,  1.2491e-01,  ..., -6.4247e+00,
            -5.5302e+00, -6.5867e+00],
           [-2.5893e-01,  2.6408e-01, -6.9174e-01,  ..., -6.3719e+00,
            -6.2588e+00, -6.4558e+00]],

          [[ 5.9701e-01,  1.6843e-02, -3.4444e-01,  ..., -7.7706e+00,
            -5.1551e+00, -6.9375e+00],
           [-5.1714e-02,  9.7663e-02, -1.8827e-01,  ..., -8.2079e+00,
            -6.0132e+00, -8.1696e+00],
           [-9.9055e-01,  9.5437e-02, -1.5334e-01,  ..., -7.5304e+00,
            -7.1060e+00, -7.9805e+00],
           ...,
           [ 6.9959e-01,  5.9548e-01, -1.2880e-01,  ..., -6.3299e+00,
            -6.5921e+00, -6.2310e+00],
           [ 6.6510e-01,  2.6093e-01,  4.3016e-02,  ..., -6.9638e+00,
            -6.7193e+00, -7.0671e+00],
           [ 4.1134e-03, -1.4515e-01, -7.9705e-01,  ..., -6.3722e+00,
            -6.9570e+00, -6.2361e+00]],

          ...,

          [[ 2.4699e-01, -1.8261e-02, -6.0267e-01,  ..., -5.4909e+00,
            -7.4170e+00, -6.9401e+00],
           [-1.4543e+00,  3.6553e-02,  1.3658e-01,  ..., -8.0715e+00,
            -7.2813e+00, -7.9674e+00],
           [-9.9720e-01,  2.6186e-01,  2.8537e-02,  ..., -8.5695e+00,
            -8.0675e+00, -7.9047e+00],
           ...,
           [ 1.1781e+00,  5.7175e-02,  1.7743e-01,  ..., -9.0427e+00,
            -8.5389e+00, -1.0006e+01],
           [ 1.1586e+00,  3.5951e-01,  2.9635e-01,  ..., -6.5929e+00,
            -7.5173e+00, -8.6732e+00],
           [-3.1888e-01, -1.1386e-02, -8.0203e-01,  ..., -5.5321e+00,
            -7.3775e+00, -7.9895e+00]],

          [[ 9.4017e-01, -8.9965e-01, -2.1854e-01,  ..., -4.3001e+00,
            -7.7514e+00, -6.7320e+00],
           [-1.2867e+00, -5.0178e-01,  1.0438e-01,  ..., -6.5554e+00,
            -7.5704e+00, -8.2402e+00],
           [-9.5000e-01, -3.4230e-01,  9.8805e-02,  ..., -8.6223e+00,
            -8.6375e+00, -8.6378e+00],
           ...,
           [ 4.4380e-01, -2.6485e-01,  1.8391e-01,  ..., -7.6989e+00,
            -8.4637e+00, -9.7932e+00],
           [ 1.2338e+00, -3.7191e-01,  2.2500e-01,  ..., -5.4900e+00,
            -7.4602e+00, -8.0539e+00],
           [-1.1236e+00, -6.9480e-01, -4.9221e-01,  ..., -4.7898e+00,
            -7.1264e+00, -7.5872e+00]],

          [[-9.2820e-02, -2.9508e-01, -4.8502e-01,  ..., -3.7770e+00,
            -7.1915e+00, -6.8266e+00],
           [-5.6337e-01, -2.9572e-01,  3.2415e-02,  ..., -5.3096e+00,
            -6.6637e+00, -7.6155e+00],
           [-7.4308e-01,  7.2177e-02, -1.8253e-01,  ..., -7.0774e+00,
            -6.8700e+00, -7.1148e+00],
           ...,
           [ 4.8898e-01,  2.6253e-01, -1.5220e-01,  ..., -7.1583e+00,
            -7.0103e+00, -8.7012e+00],
           [ 7.4961e-01, -1.3340e-01, -4.4695e-02,  ..., -4.8602e+00,
            -6.3461e+00, -7.3440e+00],
           [-9.0234e-01, -2.5788e-01, -5.4668e-01,  ..., -4.0961e+00,
            -6.3212e+00, -7.2787e+00]]],


         [[[-9.8919e-02,  3.1968e-01,  8.5754e-01,  ..., -6.9054e+00,
            -5.5718e+00, -6.8354e+00],
           [ 3.4238e-01,  9.2255e-01,  6.3035e-01,  ..., -6.7974e+00,
            -5.7696e+00, -7.4209e+00],
           [ 5.2125e-02,  5.4832e-01,  6.7833e-01,  ..., -6.1226e+00,
            -6.3268e+00, -7.3336e+00],
           ...,
           [-1.3161e-01,  2.5491e-01,  8.3439e-01,  ..., -5.9924e+00,
            -8.0607e+00, -7.8060e+00],
           [-6.5215e-01,  2.2704e-01,  7.0620e-01,  ..., -6.9254e+00,
            -7.2402e+00, -7.8331e+00],
           [ 5.2466e-01, -3.6465e-01,  1.0662e+00,  ..., -6.7366e+00,
            -6.4582e+00, -7.0588e+00]],

          [[ 2.7119e-01,  2.3733e-02,  8.5929e-02,  ..., -7.5404e+00,
            -4.9439e+00, -6.5580e+00],
           [ 4.8872e-01,  3.1336e-02, -1.2699e-01,  ..., -7.0696e+00,
            -5.3175e+00, -7.5844e+00],
           [ 2.5472e-02, -9.8130e-02,  1.3140e-01,  ..., -6.5322e+00,
            -6.6649e+00, -8.3867e+00],
           ...,
           [-4.6852e-02, -5.9992e-01,  2.2652e-01,  ..., -5.6421e+00,
            -6.3903e+00, -6.5397e+00],
           [-6.4772e-01, -4.1173e-01, -1.3340e-01,  ..., -6.7359e+00,
            -5.7408e+00, -6.8778e+00],
           [ 4.9903e-01, -3.4809e-01,  5.5143e-01,  ..., -6.3863e+00,
            -5.8562e+00, -6.5169e+00]],

          [[ 5.8545e-01, -4.8831e-01,  1.4734e-01,  ..., -7.8132e+00,
            -4.8127e+00, -6.3806e+00],
           [ 5.1972e-01, -5.3673e-01, -8.5904e-02,  ..., -7.7987e+00,
            -5.7494e+00, -7.9506e+00],
           [-4.5215e-03, -7.0687e-01,  7.7819e-02,  ..., -7.6808e+00,
            -7.2643e+00, -8.6734e+00],
           ...,
           [-2.5613e-01,  2.5274e-01,  1.2440e-01,  ..., -7.0837e+00,
            -7.2783e+00, -6.8439e+00],
           [-6.6527e-01, -2.4512e-01, -9.1569e-02,  ..., -7.3921e+00,
            -6.9733e+00, -7.0242e+00],
           [ 5.0048e-01,  2.3054e-02,  5.2390e-01,  ..., -6.5748e+00,
            -6.7186e+00, -6.3760e+00]],

          ...,

          [[-4.6481e-01,  4.1397e-01,  2.6416e-01,  ..., -5.3667e+00,
            -6.1504e+00, -6.3962e+00],
           [ 6.6748e-01,  9.0636e-01, -2.3309e-01,  ..., -7.9700e+00,
            -6.9178e+00, -7.6761e+00],
           [-5.7152e-01,  7.0739e-01,  1.6466e-01,  ..., -8.8067e+00,
            -8.1074e+00, -8.5784e+00],
           ...,
           [ 3.3014e-01,  2.8771e-01,  1.3604e-01,  ..., -9.4286e+00,
            -8.1695e+00, -1.0488e+01],
           [-9.4008e-01,  3.6998e-01, -2.7416e-01,  ..., -7.0983e+00,
            -7.3199e+00, -8.7405e+00],
           [ 1.3950e-01,  3.7240e-01,  2.2985e-01,  ..., -5.3530e+00,
            -6.0633e+00, -7.3238e+00]],

          [[-4.7329e-01,  8.6322e-02,  2.5793e-01,  ..., -4.3163e+00,
            -7.2730e+00, -6.8119e+00],
           [ 5.2508e-01,  1.0056e-02, -3.1310e-01,  ..., -6.5302e+00,
            -7.7017e+00, -7.8651e+00],
           [-2.9854e-01,  1.5226e-01,  2.0051e-01,  ..., -9.0761e+00,
            -9.2095e+00, -9.3231e+00],
           ...,
           [ 2.6131e-01,  6.1160e-01,  1.4215e-01,  ..., -7.7541e+00,
            -8.7617e+00, -1.0048e+01],
           [-7.3403e-01,  3.9480e-02, -2.8790e-01,  ..., -5.6600e+00,
            -7.6150e+00, -8.1895e+00],
           [ 1.2205e-01,  1.5565e-01,  2.9747e-01,  ..., -4.6509e+00,
            -6.3242e+00, -7.0619e+00]],

          [[-4.7869e-01,  4.1833e-02,  7.5697e-01,  ..., -4.2771e+00,
            -7.6885e+00, -7.2921e+00],
           [ 7.5519e-01, -8.9600e-01,  2.9542e-01,  ..., -5.6785e+00,
            -7.3433e+00, -7.3650e+00],
           [ 1.3606e-01, -5.5979e-01,  4.4382e-01,  ..., -7.6784e+00,
            -7.9820e+00, -7.7989e+00],
           ...,
           [-3.4187e-01, -8.5757e-01,  6.3314e-01,  ..., -7.8439e+00,
            -8.3572e+00, -9.0319e+00],
           [-1.0328e+00, -1.2080e+00,  2.8778e-01,  ..., -5.4629e+00,
            -7.4668e+00, -7.8427e+00],
           [ 1.9664e-01, -2.3450e-01,  9.0052e-01,  ..., -4.5243e+00,
            -6.5470e+00, -7.0742e+00]]],


         [[[ 4.3669e-01, -2.8523e-01, -7.4845e-01,  ..., -6.5973e+00,
            -5.9757e+00, -5.9303e+00],
           [ 1.0142e-01, -4.7272e-01, -4.5158e-01,  ..., -6.4943e+00,
            -6.0883e+00, -6.4838e+00],
           [ 1.7348e-01, -6.5247e-01, -2.9855e-01,  ..., -5.9757e+00,
            -6.2843e+00, -6.3635e+00],
           ...,
           [ 2.3986e-01, -6.1195e-01, -2.0466e-01,  ..., -5.9673e+00,
            -7.2192e+00, -6.6236e+00],
           [-8.0535e-02, -4.0627e-01, -3.5905e-01,  ..., -6.8816e+00,
            -7.0305e+00, -6.8523e+00],
           [-7.0311e-02, -3.8267e-01, -7.3247e-01,  ..., -6.8568e+00,
            -7.0844e+00, -6.4033e+00]],

          [[ 1.0640e+00,  4.9094e-01, -7.0587e-01,  ..., -7.0179e+00,
            -5.4401e+00, -5.5059e+00],
           [ 6.4156e-01,  8.7871e-01, -1.8629e-01,  ..., -6.7793e+00,
            -5.7699e+00, -6.2644e+00],
           [ 1.4966e-01,  9.2904e-01,  4.7547e-02,  ..., -6.3370e+00,
            -6.5405e+00, -6.9383e+00],
           ...,
           [ 4.0634e-01,  8.4249e-01,  1.1017e-01,  ..., -5.4675e+00,
            -5.9328e+00, -5.3060e+00],
           [-7.1191e-04,  6.7361e-01, -1.0339e-01,  ..., -6.4575e+00,
            -6.0836e+00, -5.8278e+00],
           [ 7.8359e-02,  9.9307e-02, -7.5477e-01,  ..., -6.6347e+00,
            -6.6535e+00, -5.5921e+00]],

          [[ 1.0970e+00,  2.9416e-01, -8.2925e-01,  ..., -7.6809e+00,
            -5.5299e+00, -5.7314e+00],
           [ 5.3009e-01,  6.3940e-01, -3.5522e-01,  ..., -7.8827e+00,
            -6.4686e+00, -6.8136e+00],
           [-1.9142e-01,  4.6265e-01, -4.6877e-02,  ..., -7.4753e+00,
            -7.1376e+00, -7.1035e+00],
           ...,
           [ 2.3680e-01,  5.1613e-01,  1.8142e-01,  ..., -6.4535e+00,
            -6.3750e+00, -5.3559e+00],
           [-4.1231e-01,  2.8995e-01, -1.2470e-01,  ..., -6.7058e+00,
            -6.8595e+00, -5.8039e+00],
           [-1.3296e-01, -9.6669e-03, -8.1957e-01,  ..., -6.3769e+00,
            -7.2013e+00, -5.3253e+00]],

          ...,

          [[ 8.0462e-01, -6.3949e-01, -8.4443e-01,  ..., -5.3987e+00,
            -7.1149e+00, -7.2087e+00],
           [ 6.2272e-02, -5.2239e-01, -1.9760e-01,  ..., -7.5721e+00,
            -7.5080e+00, -8.1927e+00],
           [-1.5900e+00, -4.8235e-01,  1.0990e-01,  ..., -9.1797e+00,
            -8.1629e+00, -8.6066e+00],
           ...,
           [ 9.2983e-01, -4.7469e-01,  2.8421e-01,  ..., -8.6224e+00,
            -8.0371e+00, -9.7550e+00],
           [ 9.7405e-02, -9.5676e-01, -1.6640e-01,  ..., -6.7245e+00,
            -7.3083e+00, -8.6882e+00],
           [-5.9063e-01, -2.7035e-01, -9.7093e-01,  ..., -5.4607e+00,
            -7.5556e+00, -8.2815e+00]],

          [[ 3.4687e-01, -1.0678e-01, -7.1708e-01,  ..., -4.4494e+00,
            -7.1043e+00, -6.7858e+00],
           [ 7.5549e-02, -7.0197e-01, -4.0732e-02,  ..., -6.1310e+00,
            -7.1426e+00, -7.9675e+00],
           [-1.1892e+00, -3.4207e-01,  1.9606e-01,  ..., -9.2578e+00,
            -8.0753e+00, -8.8471e+00],
           ...,
           [ 9.4129e-01, -3.5396e-01,  2.5670e-01,  ..., -6.7358e+00,
            -7.3967e+00, -9.5084e+00],
           [ 3.6042e-02, -4.1513e-01, -5.6670e-02,  ..., -5.3373e+00,
            -6.9238e+00, -8.1015e+00],
           [-2.3517e-01, -2.1164e-01, -8.6310e-01,  ..., -4.2818e+00,
            -7.1697e+00, -7.8775e+00]],

          [[-1.1313e-01,  5.2101e-02, -5.3928e-01,  ..., -4.6733e+00,
            -7.7158e+00, -7.1242e+00],
           [-2.2842e-01,  6.6219e-01, -3.1985e-01,  ..., -5.7865e+00,
            -7.1821e+00, -7.3276e+00],
           [-5.9267e-01,  6.1023e-01, -2.8422e-01,  ..., -7.6644e+00,
            -7.1958e+00, -7.4342e+00],
           ...,
           [ 3.3688e-01,  6.2515e-01, -1.8091e-01,  ..., -6.4964e+00,
            -6.9121e+00, -8.1828e+00],
           [ 3.4012e-02,  2.6400e-01, -3.2872e-01,  ..., -4.9618e+00,
            -6.6888e+00, -7.2250e+00],
           [-2.6490e-01,  1.2724e-02, -8.1862e-01,  ..., -3.9562e+00,
            -6.8633e+00, -7.2934e+00]]]]], device='cuda:0')
prediction_size: torch.Size([1, 3, 26, 26, 85])
x: tensor([[[[0.5435, 0.3755, 0.3262,  ..., 0.5859, 0.5767, 0.5533],
          [0.6435, 0.4054, 0.2033,  ..., 0.6461, 0.7026, 0.4356],
          [0.6450, 0.4871, 0.2708,  ..., 0.6681, 0.6604, 0.5010],
          ...,
          [0.5614, 0.1893, 0.2695,  ..., 0.7646, 0.7611, 0.4209],
          [0.7191, 0.2164, 0.2789,  ..., 0.6092, 0.7745, 0.2453],
          [0.4768, 0.3628, 0.3223,  ..., 0.6199, 0.6791, 0.2886]],

         [[0.4753, 0.5848, 0.5130,  ..., 0.4671, 0.3425, 0.6282],
          [0.5674, 0.6198, 0.5064,  ..., 0.4883, 0.3435, 0.6222],
          [0.6423, 0.6271, 0.4989,  ..., 0.4363, 0.3396, 0.6226],
          ...,
          [0.3858, 0.6609, 0.3609,  ..., 0.5818, 0.2809, 0.5348],
          [0.3838, 0.6283, 0.4259,  ..., 0.5650, 0.3243, 0.5305],
          [0.3826, 0.6803, 0.5340,  ..., 0.4154, 0.2625, 0.5490]],

         [[0.6075, 0.5253, 0.5433,  ..., 0.5597, 0.4799, 0.4824],
          [0.7435, 0.6551, 0.5373,  ..., 0.6002, 0.4998, 0.5196],
          [0.7497, 0.6295, 0.4523,  ..., 0.5589, 0.3984, 0.4668],
          ...,
          [0.6910, 0.5156, 0.1694,  ..., 0.7170, 0.5243, 0.3565],
          [0.5859, 0.5189, 0.2334,  ..., 0.7194, 0.5090, 0.4415],
          [0.4717, 0.4431, 0.3560,  ..., 0.5834, 0.5085, 0.4342]]]],
       device='cuda:0')
x_size: torch.Size([1, 3, 26, 26])
y: tensor([[[[0.6996, 0.6918, 0.6223,  ..., 0.5144, 0.5866, 0.5206],
          [0.5853, 0.6045, 0.7138,  ..., 0.5864, 0.6031, 0.5656],
          [0.5042, 0.5244, 0.5238,  ..., 0.6446, 0.5649, 0.4638],
          ...,
          [0.4954, 0.5091, 0.5651,  ..., 0.5143, 0.5889, 0.4972],
          [0.2891, 0.3771, 0.4153,  ..., 0.4342, 0.4081, 0.3330],
          [0.4268, 0.4266, 0.5180,  ..., 0.5653, 0.4667, 0.4359]],

         [[0.5792, 0.7156, 0.6337,  ..., 0.5634, 0.5565, 0.4098],
          [0.5059, 0.5078, 0.4755,  ..., 0.3544, 0.3985, 0.4138],
          [0.3803, 0.3689, 0.3303,  ..., 0.5629, 0.4390, 0.5058],
          ...,
          [0.6020, 0.7123, 0.6698,  ..., 0.5714, 0.5915, 0.5920],
          [0.5216, 0.5025, 0.5380,  ..., 0.6483, 0.5099, 0.5388],
          [0.5105, 0.2899, 0.3636,  ..., 0.2978, 0.2301, 0.4416]],

         [[0.4292, 0.3840, 0.3424,  ..., 0.3516, 0.3998, 0.4055],
          [0.6203, 0.7066, 0.7169,  ..., 0.6990, 0.6623, 0.5248],
          [0.5730, 0.6546, 0.6136,  ..., 0.6262, 0.5720, 0.4976],
          ...,
          [0.3454, 0.3723, 0.3817,  ..., 0.3835, 0.2775, 0.4328],
          [0.4733, 0.3314, 0.4153,  ..., 0.4124, 0.3977, 0.4473],
          [0.5130, 0.6598, 0.6480,  ..., 0.6514, 0.5656, 0.5032]]]],
       device='cuda:0')
y_size: torch.Size([1, 3, 26, 26])
w: tensor([[[[-0.3281, -0.1792, -0.2921,  ..., -0.1425, -0.0904, -0.7011],
          [-0.2129, -0.0664, -0.0422,  ..., -0.0579,  0.1249, -0.6917],
          [-0.3444, -0.1883, -0.1533,  ..., -0.1288,  0.0430, -0.7970],
          ...,
          [-0.6027,  0.1366,  0.0285,  ...,  0.1774,  0.2964, -0.8020],
          [-0.2185,  0.1044,  0.0988,  ...,  0.1839,  0.2250, -0.4922],
          [-0.4850,  0.0324, -0.1825,  ..., -0.1522, -0.0447, -0.5467]],

         [[ 0.8575,  0.6304,  0.6783,  ...,  0.8344,  0.7062,  1.0662],
          [ 0.0859, -0.1270,  0.1314,  ...,  0.2265, -0.1334,  0.5514],
          [ 0.1473, -0.0859,  0.0778,  ...,  0.1244, -0.0916,  0.5239],
          ...,
          [ 0.2642, -0.2331,  0.1647,  ...,  0.1360, -0.2742,  0.2299],
          [ 0.2579, -0.3131,  0.2005,  ...,  0.1421, -0.2879,  0.2975],
          [ 0.7570,  0.2954,  0.4438,  ...,  0.6331,  0.2878,  0.9005]],

         [[-0.7485, -0.4516, -0.2985,  ..., -0.2047, -0.3591, -0.7325],
          [-0.7059, -0.1863,  0.0475,  ...,  0.1102, -0.1034, -0.7548],
          [-0.8292, -0.3552, -0.0469,  ...,  0.1814, -0.1247, -0.8196],
          ...,
          [-0.8444, -0.1976,  0.1099,  ...,  0.2842, -0.1664, -0.9709],
          [-0.7171, -0.0407,  0.1961,  ...,  0.2567, -0.0567, -0.8631],
          [-0.5393, -0.3199, -0.2842,  ..., -0.1809, -0.3287, -0.8186]]]],
       device='cuda:0')
w_size: torch.Size([1, 3, 26, 26])
h: tensor([[[[ 6.9325e-02, -1.4537e-02,  1.5601e-01,  ..., -2.3252e-01,
           -2.1888e-01,  4.0718e-01],
          [-1.1394e-01, -1.4088e-01, -5.9681e-02,  ..., -1.9547e-01,
           -2.0143e-01,  3.7157e-01],
          [ 1.6524e-01,  1.5316e-01,  1.3572e-01,  ..., -2.0101e-02,
           -5.7958e-03,  6.0105e-01],
          ...,
          [ 2.9084e-01,  1.3318e-01, -8.3440e-02,  ..., -2.5721e-01,
           -1.5005e-01,  5.0122e-01],
          [-9.4697e-02, -2.0895e-01, -2.6324e-01,  ..., -3.3277e-01,
           -4.0750e-01,  1.3314e-01],
          [ 4.1398e-01, -1.3928e-01, -1.2793e-01,  ..., -2.1076e-01,
           -3.0658e-01,  1.9261e-01]],

         [[-7.5880e-01, -6.8408e-01, -6.6282e-01,  ..., -9.5273e-01,
           -9.0798e-01, -8.2097e-01],
          [-2.9628e-01, -2.7987e-02, -6.5938e-03,  ..., -8.3899e-02,
           -1.1803e-01, -3.9963e-01],
          [-2.4775e-01,  6.7533e-02,  9.7405e-02,  ...,  1.1082e-01,
            1.2759e-01, -2.9219e-01],
          ...,
          [-3.8100e-02,  1.8085e-01, -1.7092e-02,  ..., -1.9326e-01,
           -9.2492e-03, -1.1573e-01],
          [-1.0694e-01, -6.9435e-02, -2.6538e-02,  ..., -3.6689e-01,
           -1.4454e-01, -3.2593e-01],
          [-4.2802e-01, -6.5023e-01, -7.7823e-01,  ..., -1.0419e+00,
           -7.1254e-01, -7.5006e-01]],

         [[ 5.9929e-01,  3.7502e-01,  3.7745e-01,  ...,  3.7971e-01,
            4.3097e-01,  7.0809e-01],
          [ 5.2427e-01,  5.9541e-02,  1.8108e-02,  ..., -5.0398e-02,
            1.6697e-01,  7.6368e-01],
          [ 4.4471e-01,  3.5378e-02, -1.0495e-03,  ...,  1.3205e-02,
            2.1758e-01,  7.6466e-01],
          ...,
          [ 3.3736e-01, -1.6543e-01, -8.8019e-02,  ..., -2.7938e-01,
           -1.0794e-01,  6.1863e-01],
          [ 5.0881e-01, -6.4178e-03, -2.0116e-01,  ..., -3.3541e-01,
           -1.8179e-05,  7.0675e-01],
          [ 6.6934e-01,  2.6717e-01,  2.5192e-01,  ...,  5.0423e-02,
            3.8060e-01,  8.6651e-01]]]], device='cuda:0')
h_size: torch.Size([1, 3, 26, 26])
conf: tensor([[[[6.7220e-08, 7.1782e-08, 2.5353e-09,  ..., 7.7213e-10,
           2.5119e-09, 3.2335e-08],
          [6.3883e-06, 3.3223e-06, 1.0300e-07,  ..., 1.9475e-08,
           1.0604e-07, 3.3738e-07],
          [6.1270e-06, 3.7819e-06, 5.7363e-08,  ..., 4.6227e-08,
           3.3917e-07, 5.0634e-07],
          ...,
          [2.6076e-05, 2.2833e-05, 1.1510e-08,  ..., 2.7849e-09,
           2.0090e-06, 1.2308e-05],
          [5.9978e-06, 1.0997e-05, 4.8898e-08,  ..., 5.5140e-09,
           1.5690e-06, 5.8303e-06],
          [1.2905e-07, 1.0179e-07, 6.9082e-09,  ..., 3.7937e-09,
           8.9225e-08, 1.8824e-07]],

         [[1.0128e-07, 2.2384e-07, 9.8222e-07,  ..., 2.0523e-06,
           8.3911e-07, 1.1081e-07],
          [1.0963e-07, 9.6936e-07, 1.1223e-06,  ..., 2.1315e-07,
           2.6005e-07, 1.7576e-08],
          [3.7392e-08, 2.3678e-07, 1.1588e-07,  ..., 1.4596e-07,
           6.3678e-08, 9.5604e-09],
          ...,
          [2.4064e-08, 6.3464e-06, 1.3871e-07,  ..., 5.3470e-07,
           8.1483e-06, 2.9664e-08],
          [1.2268e-07, 1.9899e-05, 3.1141e-06,  ..., 1.6765e-06,
           1.1443e-05, 2.1617e-07],
          [2.9358e-07, 1.6771e-06, 3.3705e-06,  ..., 5.1140e-06,
           3.2022e-06, 4.8632e-07]],

         [[1.3277e-07, 3.9859e-08, 3.9867e-08,  ..., 1.1633e-08,
           2.6481e-08, 9.3634e-08],
          [3.7758e-08, 1.4760e-08, 1.5964e-08,  ..., 3.9339e-09,
           7.1510e-09, 3.4258e-08],
          [1.7359e-07, 3.3203e-07, 1.8349e-07,  ..., 9.0122e-08,
           1.6438e-07, 8.9496e-08],
          ...,
          [1.6820e-07, 1.3722e-05, 5.0062e-07,  ..., 2.3716e-08,
           5.5104e-07, 2.9799e-07],
          [6.8140e-08, 8.7478e-08, 6.5009e-09,  ..., 2.9974e-10,
           4.0282e-08, 2.5986e-07],
          [4.4600e-07, 2.6026e-07, 4.7476e-08,  ..., 4.3750e-09,
           6.2142e-08, 2.2917e-07]]]], device='cuda:0')
conf_size: torch.Size([1, 3, 26, 26])
pred_cls: tensor([[[[[7.6471e-02, 1.1474e-02, 1.4119e-01,  ..., 1.9414e-03,
            4.1810e-03, 1.5336e-03],
           [3.7578e-02, 8.6508e-03, 1.1135e-01,  ..., 1.8708e-03,
            5.4690e-03, 9.3695e-04],
           [8.2906e-02, 1.1944e-02, 7.3967e-02,  ..., 4.8466e-03,
            5.1711e-03, 2.1046e-03],
           ...,
           [2.6072e-01, 3.0704e-03, 1.4099e-02,  ..., 6.6603e-03,
            9.9351e-04, 1.6414e-03],
           [1.9202e-01, 6.2136e-03, 3.5153e-02,  ..., 2.7319e-03,
            1.6146e-03, 1.1736e-03],
           [3.6861e-01, 1.1752e-02, 4.4647e-02,  ..., 2.0180e-03,
            1.5378e-03, 1.3396e-03]],

          [[1.9015e-02, 1.3553e-03, 2.5713e-02,  ..., 6.3904e-04,
            5.1562e-03, 1.2340e-03],
           [1.5009e-02, 6.1202e-04, 1.0187e-02,  ..., 6.4264e-04,
            5.5297e-03, 5.1306e-04],
           [1.7290e-02, 6.7097e-04, 5.9194e-03,  ..., 1.4702e-03,
            2.0392e-03, 5.1656e-04],
           ...,
           [2.1619e-01, 6.7751e-04, 7.3566e-03,  ..., 4.3927e-03,
            2.7480e-03, 3.0173e-03],
           [1.0615e-01, 1.1884e-03, 2.5641e-02,  ..., 1.6185e-03,
            3.9495e-03, 1.3767e-03],
           [4.0771e-01, 5.3476e-03, 3.5298e-02,  ..., 1.7059e-03,
            1.9100e-03, 1.5689e-03]],

          [[3.6478e-02, 1.3931e-03, 1.9803e-02,  ..., 4.2180e-04,
            5.7369e-03, 9.6978e-04],
           [6.8358e-03, 3.1550e-04, 5.9369e-03,  ..., 2.7242e-04,
            2.4404e-03, 2.8304e-04],
           [4.4762e-03, 4.3108e-04, 5.5206e-03,  ..., 5.3625e-04,
            8.1947e-04, 3.4196e-04],
           ...,
           [7.2961e-02, 3.7053e-04, 2.1076e-02,  ..., 1.7791e-03,
            1.3692e-03, 1.9637e-03],
           [8.9538e-02, 3.7965e-04, 4.1188e-02,  ..., 9.4463e-04,
            1.2059e-03, 8.5196e-04],
           [2.7274e-01, 2.1595e-03, 6.0108e-02,  ..., 1.7055e-03,
            9.5105e-04, 1.9536e-03]],

          ...,

          [[3.6931e-01, 6.8616e-03, 9.4902e-02,  ..., 4.1072e-03,
            6.0060e-04, 9.6724e-04],
           [2.5660e-01, 4.2341e-03, 1.7075e-01,  ..., 3.1223e-04,
            6.8781e-04, 3.4647e-04],
           [5.9638e-01, 3.4572e-03, 5.8356e-02,  ..., 1.8978e-04,
            3.1348e-04, 3.6886e-04],
           ...,
           [2.7128e-01, 4.1114e-04, 2.5024e-04,  ..., 1.1824e-04,
            1.9567e-04, 4.5142e-05],
           [1.6413e-01, 1.1297e-03, 1.1779e-02,  ..., 1.3682e-03,
            5.4331e-04, 1.7109e-04],
           [1.9792e-01, 3.4477e-03, 6.6594e-03,  ..., 3.9421e-03,
            6.2475e-04, 3.3889e-04]],

          [[4.2210e-01, 2.6609e-03, 5.0145e-02,  ..., 1.3386e-02,
            4.2995e-04, 1.1908e-03],
           [3.1716e-01, 4.6651e-03, 1.4964e-01,  ..., 1.4203e-03,
            5.1521e-04, 2.6377e-04],
           [7.6744e-01, 6.1104e-03, 4.9124e-02,  ..., 1.8001e-04,
            1.7730e-04, 1.7725e-04],
           ...,
           [4.2703e-01, 1.5668e-03, 1.9014e-03,  ..., 4.5312e-04,
            2.1094e-04, 5.5826e-05],
           [1.8076e-01, 3.0688e-03, 4.3867e-02,  ..., 4.1108e-03,
            5.7520e-04, 3.1777e-04],
           [2.0202e-01, 8.7015e-03, 2.2679e-02,  ..., 8.2457e-03,
            8.0295e-04, 5.0662e-04]],

          [[6.7666e-01, 9.4058e-03, 3.3437e-02,  ..., 2.2379e-02,
            7.5238e-04, 1.0834e-03],
           [4.6275e-01, 1.1367e-02, 8.9546e-02,  ..., 4.9194e-03,
            1.2748e-03, 4.9252e-04],
           [6.5256e-01, 1.3853e-02, 8.2238e-02,  ..., 8.4327e-04,
            1.0374e-03, 8.1232e-04],
           ...,
           [4.7734e-01, 7.9692e-03, 2.6015e-02,  ..., 7.7774e-04,
            9.0170e-04, 1.6636e-04],
           [2.8272e-01, 1.4362e-02, 9.4047e-02,  ..., 7.6897e-03,
            1.7506e-03, 6.4602e-04],
           [2.9785e-01, 2.3785e-02, 4.8340e-02,  ..., 1.6365e-02,
            1.7945e-03, 6.8960e-04]]],


         [[[2.9913e-02, 6.8787e-03, 9.9267e-02,  ..., 1.0013e-03,
            3.7890e-03, 1.0739e-03],
           [2.9273e-02, 6.1739e-03, 6.6347e-02,  ..., 1.1155e-03,
            3.1113e-03, 5.9825e-04],
           [1.9851e-02, 1.0762e-02, 6.3597e-02,  ..., 2.1880e-03,
            1.7845e-03, 6.5281e-04],
           ...,
           [1.4365e-01, 1.6190e-03, 1.2021e-02,  ..., 2.4914e-03,
            3.1562e-04, 4.0710e-04],
           [1.3883e-01, 4.0607e-03, 2.5496e-02,  ..., 9.8156e-04,
            7.1662e-04, 3.9622e-04],
           [2.6915e-01, 1.1836e-02, 7.1012e-02,  ..., 1.1853e-03,
            1.5651e-03, 8.5908e-04]],

          [[1.9747e-02, 1.0638e-03, 1.8198e-02,  ..., 5.3092e-04,
            7.0761e-03, 1.4168e-03],
           [1.7493e-02, 8.2983e-04, 1.8051e-02,  ..., 8.4988e-04,
            4.8812e-03, 5.0805e-04],
           [7.4042e-03, 1.1695e-03, 2.3058e-02,  ..., 1.4536e-03,
            1.2732e-03, 2.2782e-04],
           ...,
           [7.0012e-02, 4.9051e-04, 1.3347e-02,  ..., 3.5329e-03,
            1.6750e-03, 1.4428e-03],
           [6.3612e-02, 9.4927e-04, 2.6091e-02,  ..., 1.1860e-03,
            3.2018e-03, 1.0293e-03],
           [3.3946e-01, 6.9075e-03, 6.0555e-02,  ..., 1.6816e-03,
            2.8540e-03, 1.4760e-03]],

          [[4.0790e-02, 1.1831e-03, 1.6549e-02,  ..., 4.0421e-04,
            8.0600e-03, 1.6912e-03],
           [1.1786e-02, 3.9922e-04, 9.5233e-03,  ..., 4.1011e-04,
            3.1745e-03, 3.5233e-04],
           [3.4191e-03, 6.0946e-04, 1.1984e-02,  ..., 4.6138e-04,
            6.9959e-04, 1.7104e-04],
           ...,
           [1.1102e-02, 1.8107e-04, 2.2215e-02,  ..., 8.3796e-04,
            6.8987e-04, 1.0649e-03],
           [3.2872e-02, 2.7653e-04, 3.1206e-02,  ..., 6.1570e-04,
            9.3572e-04, 8.8930e-04],
           [1.8338e-01, 2.2146e-03, 7.7092e-02,  ..., 1.3931e-03,
            1.2067e-03, 1.6990e-03]],

          ...,

          [[2.0811e-01, 9.0817e-03, 1.2919e-01,  ..., 4.6477e-03,
            2.1281e-03, 1.6651e-03],
           [2.0464e-01, 4.0472e-03, 1.4561e-01,  ..., 3.4556e-04,
            9.8900e-04, 4.6357e-04],
           [4.1863e-01, 2.2979e-03, 1.2464e-01,  ..., 1.4970e-04,
            3.0121e-04, 1.8810e-04],
           ...,
           [4.8040e-02, 5.9135e-04, 5.2319e-04,  ..., 8.0385e-05,
            2.8308e-04, 2.7855e-05],
           [4.4710e-02, 1.0268e-03, 3.7950e-03,  ..., 8.2585e-04,
            6.6178e-04, 1.5995e-04],
           [1.6798e-01, 4.8884e-03, 5.1819e-03,  ..., 4.7118e-03,
            2.3214e-03, 6.5923e-04]],

          [[4.5989e-01, 3.3876e-03, 7.5589e-02,  ..., 1.3173e-02,
            6.9357e-04, 1.0994e-03],
           [4.4460e-01, 4.3464e-03, 9.6315e-02,  ..., 1.4566e-03,
            4.5185e-04, 3.8377e-04],
           [4.9160e-01, 5.6937e-03, 8.6202e-02,  ..., 1.1436e-04,
            1.0007e-04, 8.9329e-05],
           ...,
           [1.3419e-01, 1.3502e-03, 5.0583e-03,  ..., 4.2878e-04,
            1.5659e-04, 4.3280e-05],
           [9.9147e-02, 2.2075e-03, 2.1387e-02,  ..., 3.4705e-03,
            4.9277e-04, 2.7748e-04],
           [1.9529e-01, 8.9196e-03, 3.1657e-02,  ..., 9.4629e-03,
            1.7892e-03, 8.5640e-04]],

          [[2.8554e-01, 1.7369e-02, 1.0314e-01,  ..., 1.3692e-02,
            4.5787e-04, 6.8046e-04],
           [4.7986e-01, 1.2010e-02, 1.5123e-01,  ..., 3.4070e-03,
            6.4646e-04, 6.3262e-04],
           [2.1812e-01, 1.1481e-02, 1.5494e-01,  ..., 4.6250e-04,
            3.4144e-04, 4.1002e-04],
           ...,
           [1.8560e-01, 4.0357e-03, 7.2071e-02,  ..., 3.9196e-04,
            2.3464e-04, 1.1952e-04],
           [1.4660e-01, 7.2617e-03, 7.6896e-02,  ..., 4.2235e-03,
            5.7143e-04, 3.9244e-04],
           [2.0132e-01, 2.3860e-02, 9.9581e-02,  ..., 1.0726e-02,
            1.4324e-03, 8.4592e-04]]],


         [[[1.3130e-01, 8.5827e-03, 7.8332e-02,  ..., 1.3622e-03,
            2.5332e-03, 2.6505e-03],
           [8.4154e-02, 8.6181e-03, 8.1389e-02,  ..., 1.5098e-03,
            2.2642e-03, 1.5257e-03],
           [1.2912e-01, 7.5353e-03, 5.1756e-02,  ..., 2.5334e-03,
            1.8619e-03, 1.7203e-03],
           ...,
           [2.0658e-01, 5.5938e-03, 3.9813e-02,  ..., 2.5545e-03,
            7.3188e-04, 1.3268e-03],
           [3.4695e-01, 8.1073e-03, 3.8509e-02,  ..., 1.0255e-03,
            8.8369e-04, 1.0559e-03],
           [5.4298e-01, 1.0032e-02, 2.5651e-02,  ..., 1.0512e-03,
            8.3736e-04, 1.6533e-03]],

          [[8.1574e-02, 2.5501e-03, 1.9390e-02,  ..., 8.9494e-04,
            4.3203e-03, 4.0461e-03],
           [5.2028e-02, 1.5315e-03, 1.6365e-02,  ..., 1.1358e-03,
            3.1103e-03, 1.8992e-03],
           [3.5638e-02, 1.0288e-03, 1.1940e-02,  ..., 1.7665e-03,
            1.4417e-03, 9.6893e-04],
           ...,
           [5.7667e-02, 2.0963e-03, 3.5025e-02,  ..., 4.2040e-03,
            2.6441e-03, 4.9374e-03],
           [2.2340e-01, 2.3259e-03, 2.8118e-02,  ..., 1.5663e-03,
            2.2748e-03, 2.9360e-03],
           [6.0359e-01, 5.0738e-03, 2.2763e-02,  ..., 1.3123e-03,
            1.2878e-03, 3.7133e-03]],

          [[3.9362e-02, 1.8627e-03, 1.1043e-02,  ..., 4.6135e-04,
            3.9505e-03, 3.2320e-03],
           [1.1426e-02, 6.3875e-04, 7.6685e-03,  ..., 3.7708e-04,
            1.5490e-03, 1.0975e-03],
           [4.7545e-03, 5.7790e-04, 6.2186e-03,  ..., 5.6661e-04,
            7.9403e-04, 8.2155e-04],
           ...,
           [1.7419e-02, 5.2748e-04, 4.2447e-02,  ..., 1.5725e-03,
            1.7007e-03, 4.6980e-03],
           [9.4783e-02, 5.2554e-04, 3.0950e-02,  ..., 1.2223e-03,
            1.0483e-03, 3.0068e-03],
           [4.3224e-01, 2.1930e-03, 3.4594e-02,  ..., 1.6975e-03,
            7.4507e-04, 4.8435e-03]],

          ...,

          [[4.8662e-01, 7.7328e-03, 6.4357e-02,  ..., 4.5021e-03,
            8.1224e-04, 7.3956e-04],
           [2.8638e-01, 3.7105e-03, 1.3766e-01,  ..., 5.1434e-04,
            5.4835e-04, 2.7658e-04],
           [6.3660e-01, 2.0030e-03, 7.9788e-02,  ..., 1.0310e-04,
            2.8495e-04, 1.8286e-04],
           ...,
           [1.0288e-01, 2.2774e-03, 2.1454e-03,  ..., 1.8000e-04,
            3.2315e-04, 5.7999e-05],
           [1.7462e-01, 2.3120e-03, 8.3590e-03,  ..., 1.1997e-03,
            6.6948e-04, 1.6854e-04],
           [4.2651e-01, 1.6914e-03, 3.4899e-03,  ..., 4.2325e-03,
            5.2289e-04, 2.5308e-04]],

          [[3.8246e-01, 4.8731e-03, 5.5232e-02,  ..., 1.1551e-02,
            8.2086e-04, 1.1284e-03],
           [3.8384e-01, 6.0156e-03, 1.4550e-01,  ..., 2.1698e-03,
            7.9006e-04, 3.4642e-04],
           [7.1115e-01, 7.4407e-03, 1.2728e-01,  ..., 9.5356e-05,
            3.1104e-04, 1.4377e-04],
           ...,
           [2.1582e-01, 7.9269e-03, 1.6505e-02,  ..., 1.1862e-03,
            6.1290e-04, 7.4223e-05],
           [2.1144e-01, 5.7350e-03, 3.4782e-02,  ..., 4.7861e-03,
            9.8308e-04, 3.0299e-04],
           [4.9723e-01, 3.8032e-03, 1.1444e-02,  ..., 1.3629e-02,
            7.6898e-04, 3.7903e-04]],

          [[4.4148e-01, 7.3366e-03, 4.8209e-02,  ..., 9.2548e-03,
            4.4554e-04, 8.0472e-04],
           [4.1727e-01, 1.0793e-02, 1.0301e-01,  ..., 3.0593e-03,
            7.5947e-04, 6.5674e-04],
           [5.6206e-01, 1.5865e-02, 1.1304e-01,  ..., 4.6900e-04,
            7.4914e-04, 5.9037e-04],
           ...,
           [6.2720e-01, 1.4727e-02, 5.3624e-02,  ..., 1.5066e-03,
            9.9467e-04, 2.7934e-04],
           [4.2871e-01, 1.4371e-02, 5.8503e-02,  ..., 6.9517e-03,
            1.2432e-03, 7.2760e-04],
           [6.3671e-01, 8.6686e-03, 2.0069e-02,  ..., 1.8776e-02,
            1.0443e-03, 6.7953e-04]]]]], device='cuda:0')
pred_cls_size: torch.Size([1, 3, 26, 26, 80])
grid_x: tensor([[[[ 0.,  1.,  2.,  ..., 23., 24., 25.],
          [ 0.,  1.,  2.,  ..., 23., 24., 25.],
          [ 0.,  1.,  2.,  ..., 23., 24., 25.],
          ...,
          [ 0.,  1.,  2.,  ..., 23., 24., 25.],
          [ 0.,  1.,  2.,  ..., 23., 24., 25.],
          [ 0.,  1.,  2.,  ..., 23., 24., 25.]],

         [[ 0.,  1.,  2.,  ..., 23., 24., 25.],
          [ 0.,  1.,  2.,  ..., 23., 24., 25.],
          [ 0.,  1.,  2.,  ..., 23., 24., 25.],
          ...,
          [ 0.,  1.,  2.,  ..., 23., 24., 25.],
          [ 0.,  1.,  2.,  ..., 23., 24., 25.],
          [ 0.,  1.,  2.,  ..., 23., 24., 25.]],

         [[ 0.,  1.,  2.,  ..., 23., 24., 25.],
          [ 0.,  1.,  2.,  ..., 23., 24., 25.],
          [ 0.,  1.,  2.,  ..., 23., 24., 25.],
          ...,
          [ 0.,  1.,  2.,  ..., 23., 24., 25.],
          [ 0.,  1.,  2.,  ..., 23., 24., 25.],
          [ 0.,  1.,  2.,  ..., 23., 24., 25.]]]], device='cuda:0')
grid_x_size: torch.Size([1, 3, 26, 26])
grid_y: tensor([[[[ 0.,  0.,  0.,  ...,  0.,  0.,  0.],
          [ 1.,  1.,  1.,  ...,  1.,  1.,  1.],
          [ 2.,  2.,  2.,  ...,  2.,  2.,  2.],
          ...,
          [23., 23., 23.,  ..., 23., 23., 23.],
          [24., 24., 24.,  ..., 24., 24., 24.],
          [25., 25., 25.,  ..., 25., 25., 25.]],

         [[ 0.,  0.,  0.,  ...,  0.,  0.,  0.],
          [ 1.,  1.,  1.,  ...,  1.,  1.,  1.],
          [ 2.,  2.,  2.,  ...,  2.,  2.,  2.],
          ...,
          [23., 23., 23.,  ..., 23., 23., 23.],
          [24., 24., 24.,  ..., 24., 24., 24.],
          [25., 25., 25.,  ..., 25., 25., 25.]],

         [[ 0.,  0.,  0.,  ...,  0.,  0.,  0.],
          [ 1.,  1.,  1.,  ...,  1.,  1.,  1.],
          [ 2.,  2.,  2.,  ...,  2.,  2.,  2.],
          ...,
          [23., 23., 23.,  ..., 23., 23., 23.],
          [24., 24., 24.,  ..., 24., 24., 24.],
          [25., 25., 25.,  ..., 25., 25., 25.]]]], device='cuda:0')
grid_y_size: torch.Size([1, 3, 26, 26])
anchor_w: tensor([[[[1.8750, 1.8750, 1.8750,  ..., 1.8750, 1.8750, 1.8750],
          [1.8750, 1.8750, 1.8750,  ..., 1.8750, 1.8750, 1.8750],
          [1.8750, 1.8750, 1.8750,  ..., 1.8750, 1.8750, 1.8750],
          ...,
          [1.8750, 1.8750, 1.8750,  ..., 1.8750, 1.8750, 1.8750],
          [1.8750, 1.8750, 1.8750,  ..., 1.8750, 1.8750, 1.8750],
          [1.8750, 1.8750, 1.8750,  ..., 1.8750, 1.8750, 1.8750]],

         [[3.8750, 3.8750, 3.8750,  ..., 3.8750, 3.8750, 3.8750],
          [3.8750, 3.8750, 3.8750,  ..., 3.8750, 3.8750, 3.8750],
          [3.8750, 3.8750, 3.8750,  ..., 3.8750, 3.8750, 3.8750],
          ...,
          [3.8750, 3.8750, 3.8750,  ..., 3.8750, 3.8750, 3.8750],
          [3.8750, 3.8750, 3.8750,  ..., 3.8750, 3.8750, 3.8750],
          [3.8750, 3.8750, 3.8750,  ..., 3.8750, 3.8750, 3.8750]],

         [[3.6875, 3.6875, 3.6875,  ..., 3.6875, 3.6875, 3.6875],
          [3.6875, 3.6875, 3.6875,  ..., 3.6875, 3.6875, 3.6875],
          [3.6875, 3.6875, 3.6875,  ..., 3.6875, 3.6875, 3.6875],
          ...,
          [3.6875, 3.6875, 3.6875,  ..., 3.6875, 3.6875, 3.6875],
          [3.6875, 3.6875, 3.6875,  ..., 3.6875, 3.6875, 3.6875],
          [3.6875, 3.6875, 3.6875,  ..., 3.6875, 3.6875, 3.6875]]]],
       device='cuda:0')
anchor_h: tensor([[[[3.8125, 3.8125, 3.8125,  ..., 3.8125, 3.8125, 3.8125],
          [3.8125, 3.8125, 3.8125,  ..., 3.8125, 3.8125, 3.8125],
          [3.8125, 3.8125, 3.8125,  ..., 3.8125, 3.8125, 3.8125],
          ...,
          [3.8125, 3.8125, 3.8125,  ..., 3.8125, 3.8125, 3.8125],
          [3.8125, 3.8125, 3.8125,  ..., 3.8125, 3.8125, 3.8125],
          [3.8125, 3.8125, 3.8125,  ..., 3.8125, 3.8125, 3.8125]],

         [[2.8125, 2.8125, 2.8125,  ..., 2.8125, 2.8125, 2.8125],
          [2.8125, 2.8125, 2.8125,  ..., 2.8125, 2.8125, 2.8125],
          [2.8125, 2.8125, 2.8125,  ..., 2.8125, 2.8125, 2.8125],
          ...,
          [2.8125, 2.8125, 2.8125,  ..., 2.8125, 2.8125, 2.8125],
          [2.8125, 2.8125, 2.8125,  ..., 2.8125, 2.8125, 2.8125],
          [2.8125, 2.8125, 2.8125,  ..., 2.8125, 2.8125, 2.8125]],

         [[7.4375, 7.4375, 7.4375,  ..., 7.4375, 7.4375, 7.4375],
          [7.4375, 7.4375, 7.4375,  ..., 7.4375, 7.4375, 7.4375],
          [7.4375, 7.4375, 7.4375,  ..., 7.4375, 7.4375, 7.4375],
          ...,
          [7.4375, 7.4375, 7.4375,  ..., 7.4375, 7.4375, 7.4375],
          [7.4375, 7.4375, 7.4375,  ..., 7.4375, 7.4375, 7.4375],
          [7.4375, 7.4375, 7.4375,  ..., 7.4375, 7.4375, 7.4375]]]],
       device='cuda:0')
pred_boxes: tensor([[[[[0.0000e+00, 2.2266e+00, 0.0000e+00, 2.2266e+00],
           [0.0000e+00, 2.2266e+00, 0.0000e+00, 2.2266e+00],
           [0.0000e+00, 2.2266e+00, 0.0000e+00, 2.2266e+00],
           ...,
           [0.0000e+00, 2.1016e+00, 0.0000e+00, 2.1016e+00],
           [0.0000e+00, 2.1016e+00, 0.0000e+00, 2.1016e+00],
           [0.0000e+00, 2.1016e+00, 0.0000e+00, 2.1016e+00]],

          [[0.0000e+00, 2.1016e+00, 0.0000e+00, 2.1016e+00],
           [0.0000e+00, 2.1016e+00, 0.0000e+00, 2.1016e+00],
           [0.0000e+00, 2.1016e+00, 0.0000e+00, 2.1016e+00],
           ...,
           [0.0000e+00, 2.4648e+00, 0.0000e+00, 2.4648e+00],
           [0.0000e+00, 2.4648e+00, 0.0000e+00, 2.4648e+00],
           [0.0000e+00, 2.4648e+00, 0.0000e+00, 2.4648e+00]],

          [[0.0000e+00, 2.4648e+00, 0.0000e+00, 2.4648e+00],
           [0.0000e+00, 2.4648e+00, 0.0000e+00, 2.4648e+00],
           [3.0268e-43, 3.0408e-43, 3.0548e-43, 3.0688e-43],
           ...,
           [0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00],
           [0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00],
           [0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]],

          ...,

          [[3.3519e-42, 3.3533e-42, 3.3547e-42, 3.3561e-42],
           [3.3575e-42, 3.3589e-42, 3.3603e-42, 3.3617e-42],
           [3.3631e-42, 3.3645e-42, 3.3659e-42, 3.3673e-42],
           ...,
           [3.4808e-42, 3.4822e-42, 3.4836e-42, 3.4850e-42],
           [3.4864e-42, 3.4878e-42, 3.4892e-42, 3.4906e-42],
           [3.4920e-42, 3.4934e-42, 3.4948e-42, 3.4962e-42]],

          [[3.4976e-42, 3.4990e-42, 3.5004e-42, 3.5018e-42],
           [3.5032e-42, 3.5046e-42, 3.5060e-42, 3.5075e-42],
           [3.5089e-42, 3.5103e-42, 3.5117e-42, 3.5131e-42],
           ...,
           [3.6266e-42, 3.6280e-42, 3.6294e-42, 3.6308e-42],
           [3.6322e-42, 3.6336e-42, 3.6350e-42, 3.6364e-42],
           [3.6378e-42, 3.6392e-42, 3.6406e-42, 3.6420e-42]],

          [[3.6434e-42, 3.6448e-42, 3.6462e-42, 3.6476e-42],
           [3.6490e-42, 3.6504e-42, 3.6518e-42, 3.6532e-42],
           [3.6546e-42, 3.6560e-42, 3.6574e-42, 3.6588e-42],
           ...,
           [3.7723e-42, 3.7737e-42, 3.7751e-42, 3.7765e-42],
           [3.7779e-42, 3.7793e-42, 3.7807e-42, 3.7821e-42],
           [3.7835e-42, 3.7849e-42, 3.7863e-42, 3.7877e-42]]],


         [[[3.7891e-42, 3.7905e-42, 3.7919e-42, 3.7933e-42],
           [3.7947e-42, 3.7961e-42, 3.7975e-42, 3.7989e-42],
           [3.8003e-42, 3.8017e-42, 3.8031e-42, 3.8045e-42],
           ...,
           [3.9180e-42, 3.9194e-42, 3.9208e-42, 3.9222e-42],
           [3.9236e-42, 3.9250e-42, 3.9264e-42, 3.9278e-42],
           [3.9292e-42, 3.9306e-42, 3.9320e-42, 3.9334e-42]],

          [[3.9348e-42, 3.9362e-42, 3.9376e-42, 3.9390e-42],
           [3.9405e-42, 3.9419e-42, 3.9433e-42, 3.9447e-42],
           [3.9461e-42, 3.9475e-42, 3.9489e-42, 3.9503e-42],
           ...,
           [4.0638e-42, 4.0652e-42, 4.0666e-42, 4.0680e-42],
           [4.0694e-42, 4.0708e-42, 4.0722e-42, 4.0736e-42],
           [4.0750e-42, 4.0764e-42, 4.0778e-42, 4.0792e-42]],

          [[4.0806e-42, 4.0820e-42, 4.0834e-42, 4.0848e-42],
           [4.0862e-42, 4.0876e-42, 4.0890e-42, 4.0904e-42],
           [4.0918e-42, 4.0932e-42, 4.0946e-42, 4.0960e-42],
           ...,
           [4.2095e-42, 4.2109e-42, 4.2123e-42, 4.2137e-42],
           [4.2151e-42, 4.2165e-42, 4.2179e-42, 4.2193e-42],
           [4.2207e-42, 4.2221e-42, 4.2235e-42, 4.2249e-42]],

          ...,

          [[7.1410e-42, 7.1424e-42, 7.1438e-42, 7.1452e-42],
           [7.1466e-42, 7.1480e-42, 7.1494e-42, 7.1508e-42],
           [7.1522e-42, 7.1536e-42, 7.1550e-42, 7.1564e-42],
           ...,
           [7.2699e-42, 7.2713e-42, 7.2727e-42, 7.2741e-42],
           [7.2755e-42, 7.2769e-42, 7.2783e-42, 7.2797e-42],
           [7.2811e-42, 7.2825e-42, 7.2839e-42, 7.2854e-42]],

          [[7.2868e-42, 7.2882e-42, 7.2896e-42, 7.2910e-42],
           [7.2924e-42, 7.2938e-42, 7.2952e-42, 7.2966e-42],
           [7.2980e-42, 7.2994e-42, 7.3008e-42, 7.3022e-42],
           ...,
           [7.4157e-42, 7.4171e-42, 7.4185e-42, 7.4199e-42],
           [7.4213e-42, 7.4227e-42, 7.4241e-42, 7.4255e-42],
           [7.4269e-42, 7.4283e-42, 7.4297e-42, 7.4311e-42]],

          [[7.4325e-42, 7.4339e-42, 7.4353e-42, 7.4367e-42],
           [7.4381e-42, 7.4395e-42, 7.4409e-42, 7.4423e-42],
           [7.4437e-42, 7.4451e-42, 7.4465e-42, 7.4479e-42],
           ...,
           [7.5614e-42, 7.5628e-42, 7.5642e-42, 7.5656e-42],
           [7.5670e-42, 7.5684e-42, 7.5698e-42, 7.5712e-42],
           [7.5726e-42, 7.5740e-42, 7.5754e-42, 7.5768e-42]]],


         [[[7.5782e-42, 7.5796e-42, 7.5810e-42, 7.5824e-42],
           [7.5838e-42, 7.5852e-42, 7.5866e-42, 7.5880e-42],
           [7.5894e-42, 7.5908e-42, 7.5922e-42, 7.5936e-42],
           ...,
           [7.7071e-42, 7.7085e-42, 7.7099e-42, 7.7113e-42],
           [7.7127e-42, 7.7141e-42, 7.7155e-42, 7.7170e-42],
           [7.7184e-42, 7.7198e-42, 7.7212e-42, 7.7226e-42]],

          [[7.7240e-42, 7.7254e-42, 7.7268e-42, 7.7282e-42],
           [7.7296e-42, 7.7310e-42, 7.7324e-42, 7.7338e-42],
           [7.7352e-42, 7.7366e-42, 7.7380e-42, 7.7394e-42],
           ...,
           [7.8529e-42, 7.8543e-42, 7.8557e-42, 7.8571e-42],
           [7.8585e-42, 7.8599e-42, 7.8613e-42, 7.8627e-42],
           [7.8641e-42, 7.8655e-42, 7.8669e-42, 7.8683e-42]],

          [[7.8697e-42, 7.8711e-42, 7.8725e-42, 7.8739e-42],
           [7.8753e-42, 7.8767e-42, 7.8781e-42, 7.8795e-42],
           [7.8809e-42, 7.8823e-42, 7.8837e-42, 7.8851e-42],
           ...,
           [7.9986e-42, 8.0000e-42, 8.0014e-42, 8.0028e-42],
           [8.0042e-42, 8.0056e-42, 8.0070e-42, 8.0084e-42],
           [8.0098e-42, 8.0112e-42, 8.0126e-42, 8.0140e-42]],

          ...,

          [[1.0930e-41, 1.0932e-41, 1.0933e-41, 1.0934e-41],
           [1.0936e-41, 1.0937e-41, 1.0939e-41, 1.0940e-41],
           [1.0941e-41, 1.0943e-41, 1.0944e-41, 1.0946e-41],
           ...,
           [1.1059e-41, 1.1060e-41, 1.1062e-41, 1.1063e-41],
           [1.1065e-41, 1.1066e-41, 1.1067e-41, 1.1069e-41],
           [1.1070e-41, 1.1072e-41, 1.1073e-41, 1.1074e-41]],

          [[1.1076e-41, 1.1077e-41, 1.1079e-41, 1.1080e-41],
           [1.1081e-41, 1.1083e-41, 1.1084e-41, 1.1086e-41],
           [1.1087e-41, 1.1088e-41, 1.1090e-41, 1.1091e-41],
           ...,
           [1.1205e-41, 1.1206e-41, 1.1208e-41, 1.1209e-41],
           [1.1210e-41, 1.1212e-41, 1.1213e-41, 1.1215e-41],
           [1.1216e-41, 1.1217e-41, 1.1219e-41, 1.1220e-41]],

          [[1.1222e-41, 1.1223e-41, 1.1224e-41, 1.1226e-41],
           [1.1227e-41, 1.1229e-41, 1.1230e-41, 1.1231e-41],
           [1.1233e-41, 1.1234e-41, 1.1236e-41, 1.1237e-41],
           ...,
           [1.1351e-41, 1.1352e-41, 1.1353e-41, 1.1355e-41],
           [1.1356e-41, 1.1358e-41, 1.1359e-41, 1.1360e-41],
           [1.1362e-41, 1.1363e-41, 1.1365e-41, 1.1366e-41]]]]],
       device='cuda:0')
pred_boxes: tensor([[[[[ 0.5435,  0.6996,  1.3506,  4.0862],
           [ 1.3755,  0.6918,  1.5673,  3.7575],
           [ 2.3262,  0.6223,  1.4000,  4.4562],
           ...,
           [23.5859,  0.5144,  1.6260,  3.0215],
           [24.5767,  0.5866,  1.7130,  3.0630],
           [25.5533,  0.5206,  0.9300,  5.7286]],

          [[ 0.6435,  1.5853,  1.5154,  3.4019],
           [ 1.4054,  1.6045,  1.7546,  3.3115],
           [ 2.2033,  1.7138,  1.7976,  3.5916],
           ...,
           [23.6461,  1.5864,  1.7695,  3.1356],
           [24.7026,  1.6031,  2.1245,  3.1169],
           [25.4356,  1.5656,  0.9388,  5.5282]],

          [[ 0.6450,  2.5042,  1.3287,  4.4975],
           [ 1.4871,  2.5244,  1.5532,  4.4435],
           [ 2.2708,  2.5238,  1.6084,  4.3667],
           ...,
           [23.6681,  2.6446,  1.6484,  3.7366],
           [24.6604,  2.5649,  1.9574,  3.7905],
           [25.5010,  2.4638,  0.8450,  6.9542]],

          ...,

          [[ 0.5614, 23.4954,  1.0263,  5.0994],
           [ 1.1893, 23.5091,  2.1494,  4.3556],
           [ 2.2695, 23.5651,  1.9293,  3.5073],
           ...,
           [23.7646, 23.5143,  2.2390,  2.9478],
           [24.7611, 23.5889,  2.5218,  3.2813],
           [25.4209, 23.4972,  0.8408,  6.2934]],

          [[ 0.7191, 24.2891,  1.5069,  3.4680],
           [ 1.2164, 24.3771,  2.0813,  3.0936],
           [ 2.2789, 24.4153,  2.0697,  2.9301],
           ...,
           [23.6092, 24.4342,  2.2536,  2.7333],
           [24.7745, 24.4081,  2.3481,  2.5365],
           [25.2453, 24.3330,  1.1461,  4.3554]],

          [[ 0.4768, 25.4268,  1.1544,  5.7677],
           [ 1.3628, 25.4266,  1.9368,  3.3168],
           [ 2.3223, 25.5180,  1.5622,  3.3547],
           ...,
           [23.6199, 25.5653,  1.6103,  3.0880],
           [24.6791, 25.4667,  1.7930,  2.8058],
           [25.2886, 25.4359,  1.0854,  4.6223]]],


         [[[ 0.4753,  0.5792,  9.1347,  1.3169],
           [ 1.5848,  0.7156,  7.2783,  1.4191],
           [ 2.5130,  0.6337,  7.6360,  1.4496],
           ...,
           [23.4671,  0.5634,  8.9257,  1.0847],
           [24.3425,  0.5565,  7.8518,  1.1344],
           [25.6282,  0.4098, 11.2543,  1.2375]],

          [[ 0.5674,  1.5059,  4.2227,  2.0913],
           [ 1.6198,  1.5078,  3.4129,  2.7349],
           [ 2.5064,  1.4755,  4.4191,  2.7940],
           ...,
           [23.4883,  1.3544,  4.8602,  2.5862],
           [24.3435,  1.3985,  3.3911,  2.4994],
           [25.6222,  1.4138,  6.7259,  1.8860]],

          [[ 0.6423,  2.3803,  4.4902,  2.1953],
           [ 1.6271,  2.3689,  3.5560,  3.0090],
           [ 2.4989,  2.3303,  4.1886,  3.1002],
           ...,
           [23.4363,  2.5629,  4.3883,  3.1421],
           [24.3396,  2.4390,  3.5359,  3.1952],
           [25.6226,  2.5058,  6.5433,  2.0999]],

          ...,

          [[ 0.3858, 23.6020,  5.0466,  2.7074],
           [ 1.6609, 23.7123,  3.0693,  3.3700],
           [ 2.3609, 23.6698,  4.5686,  2.7648],
           ...,
           [23.5818, 23.5714,  4.4397,  2.3183],
           [24.2809, 23.5915,  2.9458,  2.7866],
           [25.5348, 23.5920,  4.8764,  2.5051]],

          [[ 0.3838, 24.5216,  5.0152,  2.5273],
           [ 1.6283, 24.5025,  2.8333,  2.6238],
           [ 2.4259, 24.5380,  4.7354,  2.7388],
           ...,
           [23.5650, 24.6483,  4.4669,  1.9487],
           [24.3243, 24.5099,  2.9056,  2.4340],
           [25.5305, 24.5388,  5.2175,  2.0302]],

          [[ 0.3826, 25.5105,  8.2608,  1.8332],
           [ 1.6803, 25.2899,  5.2068,  1.4679],
           [ 2.5340, 25.3636,  6.0398,  1.2916],
           ...,
           [23.4154, 25.2978,  7.2987,  0.9922],
           [24.2625, 25.2301,  5.1672,  1.3792],
           [25.5490, 25.4416,  9.5359,  1.3284]]],


         [[[ 0.6075,  0.4292,  1.7445, 13.5424],
           [ 1.5253,  0.3840,  2.3476, 10.8218],
           [ 2.5433,  0.3424,  2.7357, 10.8481],
           ...,
           [23.5597,  0.3516,  3.0050, 10.8726],
           [24.4799,  0.3998,  2.5751, 11.4444],
           [25.4824,  0.4055,  1.7727, 15.0990]],

          [[ 0.7435,  1.6203,  1.8204, 12.5636],
           [ 1.6551,  1.7066,  3.0608,  7.8938],
           [ 2.5373,  1.7169,  3.8671,  7.5734],
           ...,
           [23.6002,  1.6990,  4.1170,  7.0720],
           [24.4998,  1.6623,  3.3253,  8.7891],
           [25.5196,  1.5248,  1.7336, 15.9621]],

          [[ 0.7497,  2.5730,  1.6091, 11.6028],
           [ 1.6295,  2.6546,  2.5850,  7.7053],
           [ 2.4523,  2.6136,  3.5186,  7.4297],
           ...,
           [23.5589,  2.6262,  4.4210,  7.5364],
           [24.3984,  2.5720,  3.2552,  9.2453],
           [25.4668,  2.4976,  1.6248, 15.9777]],

          ...,

          [[ 0.6910, 23.3454,  1.5849, 10.4217],
           [ 1.5156, 23.3723,  3.0263,  6.3035],
           [ 2.1694, 23.3817,  4.1158,  6.8108],
           ...,
           [23.7170, 23.3835,  4.8996,  5.6246],
           [24.5243, 23.2775,  3.1222,  6.6765],
           [25.3565, 23.4328,  1.3966, 13.8069]],

          [[ 0.5859, 24.4733,  1.8002, 12.3709],
           [ 1.5189, 24.3314,  3.5403,  7.3899],
           [ 2.2334, 24.4153,  4.4862,  6.0823],
           ...,
           [23.7194, 24.4124,  4.7667,  5.3181],
           [24.5090, 24.3977,  3.4843,  7.4374],
           [25.4415, 24.4473,  1.5556, 15.0788]],

          [[ 0.4717, 25.5130,  2.1504, 14.5251],
           [ 1.4431, 25.6598,  2.6781,  9.7153],
           [ 2.3560, 25.6480,  2.7752,  9.5683],
           ...,
           [23.5834, 25.6514,  3.0773,  7.8221],
           [24.5085, 25.5656,  2.6544, 10.8823],
           [25.4342, 25.5032,  1.6263, 17.6908]]]]], device='cuda:0')
pred_boxes_size: torch.Size([1, 3, 26, 26, 4])
pred_boxes.view(batch_size, -1, 4): tensor([[[ 0.5435,  0.6996,  1.3506,  4.0862],
         [ 1.3755,  0.6918,  1.5673,  3.7575],
         [ 2.3262,  0.6223,  1.4000,  4.4562],
         ...,
         [23.5834, 25.6514,  3.0773,  7.8221],
         [24.5085, 25.5656,  2.6544, 10.8823],
         [25.4342, 25.5032,  1.6263, 17.6908]]], device='cuda:0')
up_size: torch.Size([1, 2028, 4])
conf.view(batch_size, -1, 1): tensor([[[6.7220e-08],
         [7.1782e-08],
         [2.5353e-09],
         ...,
         [4.3750e-09],
         [6.2142e-08],
         [2.2917e-07]]], device='cuda:0')
up_size: torch.Size([1, 2028, 1])
pred_cls.view(batch_size, -1, self.num_classes): tensor([[[7.6471e-02, 1.1474e-02, 1.4119e-01,  ..., 1.9414e-03,
          4.1810e-03, 1.5336e-03],
         [3.7578e-02, 8.6508e-03, 1.1135e-01,  ..., 1.8708e-03,
          5.4690e-03, 9.3695e-04],
         [8.2906e-02, 1.1944e-02, 7.3967e-02,  ..., 4.8466e-03,
          5.1711e-03, 2.1046e-03],
         ...,
         [6.2720e-01, 1.4727e-02, 5.3624e-02,  ..., 1.5066e-03,
          9.9467e-04, 2.7934e-04],
         [4.2871e-01, 1.4371e-02, 5.8503e-02,  ..., 6.9517e-03,
          1.2432e-03, 7.2760e-04],
         [6.3671e-01, 8.6686e-03, 2.0069e-02,  ..., 1.8776e-02,
          1.0443e-03, 6.7953e-04]]], device='cuda:0')
up_size: torch.Size([1, 2028, 80])
output: tensor([[[8.6965e+00, 1.1194e+01, 2.1610e+01,  ..., 1.9414e-03,
          4.1810e-03, 1.5336e-03],
         [2.2008e+01, 1.1068e+01, 2.5077e+01,  ..., 1.8708e-03,
          5.4690e-03, 9.3695e-04],
         [3.7219e+01, 9.9564e+00, 2.2400e+01,  ..., 4.8466e-03,
          5.1711e-03, 2.1046e-03],
         ...,
         [3.7733e+02, 4.1042e+02, 4.9236e+01,  ..., 1.5066e-03,
          9.9467e-04, 2.7934e-04],
         [3.9214e+02, 4.0905e+02, 4.2471e+01,  ..., 6.9517e-03,
          1.2432e-03, 7.2760e-04],
         [4.0695e+02, 4.0805e+02, 2.6021e+01,  ..., 1.8776e-02,
          1.0443e-03, 6.7953e-04]]], device='cuda:0')
up_size: torch.Size([1, 2028, 85])
input: tensor([[[[ 1.8275e-02, -1.2279e-01,  4.0532e-01,  ..., -2.7918e-02,
           -2.7237e-01,  9.8608e-01],
          [-5.0516e-01, -6.6735e-02,  2.4294e-01,  ..., -8.5104e-02,
           -1.1794e-01,  1.9468e+00],
          [-4.2893e-01, -2.1846e-01,  4.3079e-02,  ...,  1.6267e-01,
           -5.3496e-01,  2.0588e+00],
          ...,
          [-4.9065e-01, -1.0052e+00, -1.6964e-01,  ...,  4.6447e-01,
            3.3795e-01,  1.6263e+00],
          [-7.0134e-02, -8.3368e-01, -4.3153e-03,  ...,  2.7901e-01,
            1.0247e-01,  8.9559e-01],
          [ 4.9697e-01, -4.5370e-01,  1.0696e-01,  ...,  8.6112e-02,
            2.1561e-01, -3.3207e-01]],

         [[-8.7506e-01, -6.5591e-01,  1.1695e-01,  ..., -1.4886e+00,
           -1.5644e+00, -6.8006e-01],
          [-1.2419e-01,  1.0832e-01, -3.9503e-01,  ..., -3.2129e-01,
           -8.2920e-02, -4.3073e-01],
          [ 7.4726e-02, -2.9672e-01, -4.5211e-01,  ...,  2.6186e-01,
            3.4755e-01,  5.0577e-02],
          ...,
          [-2.4060e-03,  8.1871e-02,  5.2332e-01,  ...,  5.9040e-01,
            3.3677e-01,  1.4037e-01],
          [-1.4356e-01,  7.0871e-01,  6.8193e-01,  ...,  6.2053e-01,
            5.0239e-01, -8.6428e-02],
          [ 1.8021e-01,  5.3312e-01,  9.7686e-01,  ...,  1.5209e+00,
            6.8010e-01,  3.3287e-01]],

         [[-7.5408e-01,  2.8089e-01, -1.5594e-01,  ...,  9.0693e-01,
            8.9289e-01, -9.0721e-01],
          [-1.0582e+00, -6.5117e-01, -3.2702e-01,  ..., -4.0497e-01,
           -1.2877e-01, -1.8518e+00],
          [-1.1189e+00, -3.0122e-01, -5.6255e-01,  ..., -7.1694e-01,
           -3.5672e-01, -2.3133e+00],
          ...,
          [-1.2086e+00,  1.4792e-01, -9.8050e-02,  ...,  3.9883e-01,
            1.0263e-01, -1.8763e+00],
          [-8.5657e-01,  2.0378e-01, -2.0814e-02,  ..., -3.1722e-01,
           -2.0266e-01, -1.3130e+00],
          [-1.7489e-01,  9.2349e-01,  1.2425e+00,  ...,  1.0254e+00,
            6.7748e-01, -5.0320e-01]],

         ...,

         [[-4.6913e+00, -5.2362e+00, -4.7203e+00,  ..., -6.1895e+00,
           -6.4068e+00, -5.4626e+00],
          [-6.4058e+00, -7.0950e+00, -6.6477e+00,  ..., -6.7633e+00,
           -6.8296e+00, -6.0529e+00],
          [-7.1143e+00, -8.1983e+00, -8.2271e+00,  ..., -6.9133e+00,
           -6.3105e+00, -5.8911e+00],
          ...,
          [-6.2385e+00, -7.4166e+00, -7.1834e+00,  ..., -1.0723e+01,
           -9.8048e+00, -7.7755e+00],
          [-5.9360e+00, -7.2487e+00, -7.5312e+00,  ..., -9.9567e+00,
           -9.2681e+00, -8.2588e+00],
          [-5.1675e+00, -6.0167e+00, -6.5800e+00,  ..., -7.8492e+00,
           -7.4922e+00, -6.4911e+00]],

         [[-4.3171e+00, -4.6803e+00, -4.1339e+00,  ..., -6.6822e+00,
           -6.3444e+00, -5.2358e+00],
          [-4.3076e+00, -4.9531e+00, -4.9521e+00,  ..., -7.1251e+00,
           -6.7024e+00, -5.5864e+00],
          [-4.3986e+00, -5.3857e+00, -5.5872e+00,  ..., -7.2584e+00,
           -6.3028e+00, -5.6514e+00],
          ...,
          [-4.2479e+00, -5.9406e+00, -7.5714e+00,  ..., -9.6763e+00,
           -7.1613e+00, -5.2810e+00],
          [-4.2528e+00, -5.4051e+00, -6.7962e+00,  ..., -9.0518e+00,
           -7.0886e+00, -5.8590e+00],
          [-4.5045e+00, -5.2381e+00, -6.2031e+00,  ..., -7.9092e+00,
           -6.2841e+00, -5.1543e+00]],

         [[-4.9294e+00, -5.6940e+00, -5.7405e+00,  ..., -6.9393e+00,
           -6.7251e+00, -5.9426e+00],
          [-5.8259e+00, -6.8969e+00, -7.1109e+00,  ..., -7.5739e+00,
           -7.0890e+00, -6.0325e+00],
          [-6.2072e+00, -7.3811e+00, -7.4264e+00,  ..., -7.3384e+00,
           -6.6616e+00, -6.0924e+00],
          ...,
          [-5.1893e+00, -7.4205e+00, -9.8441e+00,  ..., -1.1496e+01,
           -8.2798e+00, -6.4103e+00],
          [-4.4650e+00, -5.6257e+00, -7.4339e+00,  ..., -1.0819e+01,
           -8.2170e+00, -6.6846e+00],
          [-3.9793e+00, -4.8924e+00, -6.0924e+00,  ..., -8.3123e+00,
           -6.2193e+00, -5.0261e+00]]]], device='cuda:0')
input_size: torch.Size([1, 255, 52, 52])
scaled_anchors: [(1.25, 1.625), (2.0, 3.75), (4.125, 2.875)]
prediction: tensor([[[[[ 1.8275e-02, -8.7506e-01, -7.5408e-01,  ..., -5.2933e+00,
            -5.3596e+00, -5.7325e+00],
           [-1.2279e-01, -6.5591e-01,  2.8089e-01,  ..., -5.8866e+00,
            -5.3160e+00, -6.5649e+00],
           [ 4.0532e-01,  1.1695e-01, -1.5594e-01,  ..., -6.1693e+00,
            -5.3557e+00, -6.8563e+00],
           ...,
           [-2.7918e-02, -1.4886e+00,  9.0693e-01,  ..., -6.4445e+00,
            -7.6316e+00, -8.1638e+00],
           [-2.7237e-01, -1.5644e+00,  8.9289e-01,  ..., -6.9287e+00,
            -7.4966e+00, -8.3299e+00],
           [ 9.8608e-01, -6.8006e-01, -9.0721e-01,  ..., -6.0440e+00,
            -6.9887e+00, -7.4506e+00]],

          [[-5.0516e-01, -1.2419e-01, -1.0582e+00,  ..., -6.7497e+00,
            -5.0896e+00, -7.2107e+00],
           [-6.6735e-02,  1.0832e-01, -6.5117e-01,  ..., -7.6065e+00,
            -5.8550e+00, -7.7099e+00],
           [ 2.4294e-01, -3.9503e-01, -3.2702e-01,  ..., -8.4263e+00,
            -6.7544e+00, -9.1774e+00],
           ...,
           [-8.5104e-02, -3.2129e-01, -4.0497e-01,  ..., -6.9708e+00,
            -8.1605e+00, -8.4603e+00],
           [-1.1794e-01, -8.2920e-02, -1.2877e-01,  ..., -7.0475e+00,
            -7.8270e+00, -8.7330e+00],
           [ 1.9468e+00, -4.3073e-01, -1.8518e+00,  ..., -6.8156e+00,
            -7.3710e+00, -8.0762e+00]],

          [[-4.2893e-01,  7.4726e-02, -1.1189e+00,  ..., -7.6355e+00,
            -5.6390e+00, -7.9462e+00],
           [-2.1846e-01, -2.9672e-01, -3.0122e-01,  ..., -9.1805e+00,
            -6.8540e+00, -9.1843e+00],
           [ 4.3079e-02, -4.5211e-01, -5.6255e-01,  ..., -1.0620e+01,
            -8.1630e+00, -1.0003e+01],
           ...,
           [ 1.6267e-01,  2.6186e-01, -7.1694e-01,  ..., -7.4818e+00,
            -8.4780e+00, -8.3308e+00],
           [-5.3496e-01,  3.4755e-01, -3.5672e-01,  ..., -6.8849e+00,
            -7.4733e+00, -8.2124e+00],
           [ 2.0588e+00,  5.0577e-02, -2.3133e+00,  ..., -6.7384e+00,
            -7.3838e+00, -7.9518e+00]],

          ...,

          [[-4.9065e-01, -2.4060e-03, -1.2086e+00,  ..., -6.5747e+00,
            -4.9723e+00, -5.5236e+00],
           [-1.0052e+00,  8.1871e-02,  1.4792e-01,  ..., -7.4328e+00,
            -5.8328e+00, -6.8222e+00],
           [-1.6964e-01,  5.2332e-01, -9.8050e-02,  ..., -7.0078e+00,
            -7.6644e+00, -8.5877e+00],
           ...,
           [ 4.6447e-01,  5.9040e-01,  3.9883e-01,  ..., -8.9800e+00,
            -7.8274e+00, -9.9995e+00],
           [ 3.3795e-01,  3.3677e-01,  1.0263e-01,  ..., -8.4043e+00,
            -5.7786e+00, -7.9322e+00],
           [ 1.6263e+00,  1.4037e-01, -1.8763e+00,  ..., -7.1594e+00,
            -5.0257e+00, -6.9688e+00]],

          [[-7.0134e-02, -1.4356e-01, -8.5657e-01,  ..., -6.4439e+00,
            -4.8324e+00, -5.0153e+00],
           [-8.3368e-01,  7.0871e-01,  2.0378e-01,  ..., -7.5014e+00,
            -5.2211e+00, -5.3099e+00],
           [-4.3153e-03,  6.8193e-01, -2.0814e-02,  ..., -7.5773e+00,
            -6.8897e+00, -6.9398e+00],
           ...,
           [ 2.7901e-01,  6.2053e-01, -3.1722e-01,  ..., -8.3473e+00,
            -7.7900e+00, -9.7128e+00],
           [ 1.0247e-01,  5.0239e-01, -2.0266e-01,  ..., -7.9412e+00,
            -5.9418e+00, -8.1134e+00],
           [ 8.9559e-01, -8.6428e-02, -1.3130e+00,  ..., -7.6568e+00,
            -5.5021e+00, -7.5937e+00]],

          [[ 4.9697e-01,  1.8021e-01, -1.7489e-01,  ..., -5.4704e+00,
            -4.9021e+00, -4.3279e+00],
           [-4.5370e-01,  5.3312e-01,  9.2349e-01,  ..., -6.3189e+00,
            -5.1685e+00, -5.1454e+00],
           [ 1.0696e-01,  9.7686e-01,  1.2425e+00,  ..., -6.8086e+00,
            -6.3506e+00, -6.2952e+00],
           ...,
           [ 8.6112e-02,  1.5209e+00,  1.0254e+00,  ..., -7.5535e+00,
            -7.8094e+00, -9.0270e+00],
           [ 2.1561e-01,  6.8010e-01,  6.7748e-01,  ..., -7.1677e+00,
            -5.9449e+00, -7.4941e+00],
           [-3.3207e-01,  3.3287e-01, -5.0320e-01,  ..., -6.7775e+00,
            -5.4218e+00, -6.4692e+00]]],


         [[[ 1.5805e-01,  4.9319e-01, -6.3092e-01,  ..., -4.4966e+00,
            -4.3064e+00, -5.2661e+00],
           [-1.7790e-01,  4.3059e-01, -4.7943e-02,  ..., -4.8997e+00,
            -3.9758e+00, -5.6767e+00],
           [ 4.1721e-01,  3.0150e-01, -2.9973e-01,  ..., -4.7085e+00,
            -3.5461e+00, -5.8110e+00],
           ...,
           [ 4.5531e-02, -1.3115e-01,  6.5546e-02,  ..., -5.5772e+00,
            -5.8951e+00, -6.4758e+00],
           [ 4.0722e-01, -1.1336e-02,  5.9845e-02,  ..., -5.9291e+00,
            -5.7621e+00, -6.6100e+00],
           [ 8.2871e-01,  1.8078e-01, -9.5594e-01,  ..., -5.2528e+00,
            -5.6893e+00, -6.2356e+00]],

          [[ 4.0187e-01,  3.5182e-01, -4.9045e-01,  ..., -6.5831e+00,
            -4.5645e+00, -6.3633e+00],
           [-8.4691e-01,  4.2800e-01,  2.0103e-01,  ..., -7.0074e+00,
            -4.6518e+00, -7.0816e+00],
           [ 2.3486e-01,  8.0829e-01, -2.3625e-01,  ..., -7.1607e+00,
            -5.2753e+00, -7.6280e+00],
           ...,
           [-3.6160e-02, -1.8013e-01,  1.4382e-01,  ..., -6.5391e+00,
            -7.0912e+00, -7.1681e+00],
           [ 4.9399e-01, -4.9437e-02,  1.8231e-01,  ..., -6.6767e+00,
            -6.8289e+00, -7.2530e+00],
           [ 1.0046e+00,  1.2790e-01, -1.2486e+00,  ..., -6.1678e+00,
            -6.6980e+00, -6.6069e+00]],

          [[ 6.9525e-01, -2.6369e-02, -6.9022e-01,  ..., -7.1142e+00,
            -4.9101e+00, -6.8781e+00],
           [-1.0680e+00, -1.3331e-01,  1.2410e-01,  ..., -8.2889e+00,
            -5.4613e+00, -7.8772e+00],
           [ 3.6801e-01,  7.3414e-02, -4.9443e-01,  ..., -9.2274e+00,
            -6.5335e+00, -8.3054e+00],
           ...,
           [ 8.8856e-02, -2.6615e-01,  1.0482e-01,  ..., -6.5967e+00,
            -7.3391e+00, -6.8969e+00],
           [ 6.4673e-01, -1.5552e-01,  1.7587e-01,  ..., -6.0689e+00,
            -6.2805e+00, -6.6721e+00],
           [ 1.3284e+00,  1.1060e-01, -1.6108e+00,  ..., -6.0632e+00,
            -7.0195e+00, -6.5009e+00]],

          ...,

          [[ 6.3826e-01, -2.1072e-02, -6.9962e-01,  ..., -6.7165e+00,
            -4.4005e+00, -5.8567e+00],
           [-1.4935e+00,  5.1589e-01,  2.4371e-01,  ..., -7.5191e+00,
            -5.2541e+00, -7.4542e+00],
           [-6.6576e-01,  7.1302e-01,  2.3806e-01,  ..., -7.1149e+00,
            -7.1887e+00, -9.1173e+00],
           ...,
           [ 4.5380e-01,  8.5228e-01,  3.2189e-01,  ..., -9.3501e+00,
            -7.7845e+00, -1.0599e+01],
           [ 4.4518e-01,  8.0150e-01,  2.6056e-01,  ..., -9.1391e+00,
            -5.9275e+00, -8.2732e+00],
           [ 2.1855e-01,  2.7223e-01, -1.0007e+00,  ..., -7.6797e+00,
            -5.3810e+00, -7.2825e+00]],

          [[ 8.8439e-01, -5.0027e-01, -5.1000e-01,  ..., -6.3526e+00,
            -4.0853e+00, -5.2621e+00],
           [-1.1538e+00, -2.9026e-01,  2.3168e-01,  ..., -7.3461e+00,
            -4.1410e+00, -5.8618e+00],
           [-5.5513e-01, -1.6929e-01,  2.1540e-01,  ..., -7.4369e+00,
            -5.6712e+00, -7.3151e+00],
           ...,
           [ 1.5330e-01, -6.9777e-01,  2.5593e-01,  ..., -8.7602e+00,
            -7.0937e+00, -9.9038e+00],
           [ 4.9779e-01, -6.5939e-01,  3.2357e-01,  ..., -8.6901e+00,
            -5.5693e+00, -8.0298e+00],
           [-1.9562e-01, -4.7828e-01, -7.3318e-01,  ..., -8.0563e+00,
            -5.6218e+00, -7.4705e+00]],

          [[ 5.1178e-01, -5.8423e-01, -7.0188e-01,  ..., -5.0808e+00,
            -3.8457e+00, -4.5367e+00],
           [-4.1476e-01, -5.8495e-01,  7.0644e-03,  ..., -5.7818e+00,
            -3.6729e+00, -5.1331e+00],
           [ 1.9728e-03, -3.4481e-01, -2.5267e-02,  ..., -6.2572e+00,
            -4.4892e+00, -5.9496e+00],
           ...,
           [ 3.4643e-01,  5.8834e-02,  6.2397e-02,  ..., -6.8346e+00,
            -5.9035e+00, -7.8535e+00],
           [ 2.3171e-01, -4.0201e-01,  6.2007e-02,  ..., -6.9574e+00,
            -4.5994e+00, -6.3259e+00],
           [ 9.9449e-02, -3.5573e-01, -8.1418e-01,  ..., -6.0936e+00,
            -4.3884e+00, -5.6886e+00]]],


         [[[ 2.2417e-02, -1.4917e-02,  7.8568e-01,  ..., -4.6913e+00,
            -4.3171e+00, -4.9294e+00],
           [ 6.3778e-01,  3.5120e-01,  1.9272e-01,  ..., -5.2362e+00,
            -4.6803e+00, -5.6940e+00],
           [-5.1552e-02,  1.6038e-01,  5.6259e-01,  ..., -4.7203e+00,
            -4.1339e+00, -5.7405e+00],
           ...,
           [-1.0227e-01, -1.2001e-01,  5.8120e-01,  ..., -6.1895e+00,
            -6.6822e+00, -6.9393e+00],
           [-8.5054e-01, -1.5697e-01,  5.0654e-01,  ..., -6.4068e+00,
            -6.3444e+00, -6.7251e+00],
           [-3.6133e-01, -3.3517e-01,  8.1953e-01,  ..., -5.4626e+00,
            -5.2358e+00, -5.9426e+00]],

          [[-1.1552e-01, -1.3055e-01,  6.6546e-02,  ..., -6.4058e+00,
            -4.3076e+00, -5.8259e+00],
           [ 7.5464e-01,  1.6014e-01, -1.5713e-01,  ..., -7.0950e+00,
            -4.9531e+00, -6.8969e+00],
           [-1.3102e-01, -8.0640e-02,  1.4219e-01,  ..., -6.6477e+00,
            -4.9521e+00, -7.1109e+00],
           ...,
           [-2.4287e-01, -6.5864e-01,  2.4964e-01,  ..., -6.7633e+00,
            -7.1251e+00, -7.5739e+00],
           [-1.2107e+00, -5.0151e-01,  9.8225e-02,  ..., -6.8296e+00,
            -6.7024e+00, -7.0890e+00],
           [-1.7682e-01, -3.7566e-01,  5.7016e-01,  ..., -6.0529e+00,
            -5.5864e+00, -6.0325e+00]],

          [[-3.3713e-01, -3.3908e-01,  1.0102e-01,  ..., -7.1143e+00,
            -4.3986e+00, -6.2072e+00],
           [ 6.7120e-01, -3.3641e-01, -2.3267e-01,  ..., -8.1983e+00,
            -5.3857e+00, -7.3811e+00],
           [-4.6272e-01, -6.4438e-01,  1.9708e-02,  ..., -8.2271e+00,
            -5.5872e+00, -7.4264e+00],
           ...,
           [-7.3048e-02, -7.0843e-01,  2.5953e-01,  ..., -6.9133e+00,
            -7.2584e+00, -7.3384e+00],
           [-7.8663e-01, -2.8610e-01,  9.5524e-02,  ..., -6.3105e+00,
            -6.3028e+00, -6.6616e+00],
           [ 5.9948e-02, -3.3833e-01,  5.4286e-01,  ..., -5.8911e+00,
            -5.6514e+00, -6.0924e+00]],

          ...,

          [[ 2.2625e-02, -6.1177e-02, -1.4530e-02,  ..., -6.2385e+00,
            -4.2479e+00, -5.1893e+00],
           [ 9.9324e-01,  6.0265e-01, -1.5587e-01,  ..., -7.4166e+00,
            -5.9406e+00, -7.4205e+00],
           [-1.9280e-01,  7.4908e-01,  2.1583e-01,  ..., -7.1834e+00,
            -7.5714e+00, -9.8441e+00],
           ...,
           [ 5.5766e-01,  1.2660e+00,  2.7223e-01,  ..., -1.0723e+01,
            -9.6763e+00, -1.1496e+01],
           [-1.7339e+00,  9.7403e-01, -1.3992e-01,  ..., -9.8048e+00,
            -7.1613e+00, -8.2798e+00],
           [-5.2156e-01,  3.9110e-01,  2.5501e-01,  ..., -7.7755e+00,
            -5.2810e+00, -6.4103e+00]],

          [[ 5.3952e-03, -8.5447e-02,  1.6359e-02,  ..., -5.9360e+00,
            -4.2528e+00, -4.4650e+00],
           [ 1.1058e+00,  1.3335e-01, -1.3710e-01,  ..., -7.2487e+00,
            -5.4051e+00, -5.6257e+00],
           [ 1.5937e-01,  4.2489e-01,  2.0534e-01,  ..., -7.5312e+00,
            -6.7962e+00, -7.4339e+00],
           ...,
           [ 3.3030e-01, -2.5743e-01,  2.3837e-01,  ..., -9.9567e+00,
            -9.0518e+00, -1.0819e+01],
           [-1.5423e+00, -2.1052e-01, -1.2682e-01,  ..., -9.2681e+00,
            -7.0886e+00, -8.2170e+00],
           [-7.3563e-01,  1.5632e-01,  1.6444e-01,  ..., -8.2588e+00,
            -5.8590e+00, -6.6846e+00]],

          [[ 2.7248e-02,  9.0111e-02,  7.0472e-01,  ..., -5.1675e+00,
            -4.5045e+00, -3.9793e+00],
           [ 7.8987e-01, -8.6671e-03,  2.8075e-01,  ..., -6.0167e+00,
            -5.2381e+00, -4.8924e+00],
           [ 1.5437e-01,  1.3248e-02,  6.9717e-01,  ..., -6.5800e+00,
            -6.2031e+00, -6.0924e+00],
           ...,
           [-9.7538e-02,  7.5100e-01,  6.9250e-01,  ..., -7.8492e+00,
            -7.9092e+00, -8.3123e+00],
           [-8.7754e-01,  2.5773e-01,  4.4014e-01,  ..., -7.4922e+00,
            -6.2841e+00, -6.2193e+00],
           [-5.8192e-01,  6.9322e-01,  8.4297e-01,  ..., -6.4911e+00,
            -5.1543e+00, -5.0261e+00]]]]], device='cuda:0')
prediction_size: torch.Size([1, 3, 52, 52, 85])
x: tensor([[[[0.5046, 0.4693, 0.6000,  ..., 0.4930, 0.4323, 0.7283],
          [0.3763, 0.4833, 0.5604,  ..., 0.4787, 0.4705, 0.8751],
          [0.3944, 0.4456, 0.5108,  ..., 0.5406, 0.3694, 0.8868],
          ...,
          [0.3797, 0.2679, 0.4577,  ..., 0.6141, 0.5837, 0.8357],
          [0.4825, 0.3029, 0.4989,  ..., 0.5693, 0.5256, 0.7100],
          [0.6217, 0.3885, 0.5267,  ..., 0.5215, 0.5537, 0.4177]],

         [[0.5394, 0.4556, 0.6028,  ..., 0.5114, 0.6004, 0.6961],
          [0.5991, 0.3001, 0.5584,  ..., 0.4910, 0.6210, 0.7320],
          [0.6671, 0.2558, 0.5910,  ..., 0.5222, 0.6563, 0.7906],
          ...,
          [0.6544, 0.1834, 0.3394,  ..., 0.6115, 0.6095, 0.5544],
          [0.7077, 0.2398, 0.3647,  ..., 0.5382, 0.6219, 0.4513],
          [0.6252, 0.3978, 0.5005,  ..., 0.5858, 0.5577, 0.5248]],

         [[0.5056, 0.6543, 0.4871,  ..., 0.4745, 0.2993, 0.4106],
          [0.4712, 0.6802, 0.4673,  ..., 0.4396, 0.2296, 0.4559],
          [0.4165, 0.6618, 0.3863,  ..., 0.4817, 0.3129, 0.5150],
          ...,
          [0.5057, 0.7297, 0.4519,  ..., 0.6359, 0.1501, 0.3725],
          [0.5013, 0.7513, 0.5398,  ..., 0.5818, 0.1762, 0.3240],
          [0.5068, 0.6878, 0.5385,  ..., 0.4756, 0.2937, 0.3585]]]],
       device='cuda:0')
x_size: torch.Size([1, 3, 52, 52])
y: tensor([[[[0.2942, 0.3417, 0.5292,  ..., 0.1841, 0.1730, 0.3362],
          [0.4690, 0.5271, 0.4025,  ..., 0.4204, 0.4793, 0.3940],
          [0.5187, 0.4264, 0.3889,  ..., 0.5651, 0.5860, 0.5126],
          ...,
          [0.4994, 0.5205, 0.6279,  ..., 0.6435, 0.5834, 0.5350],
          [0.4642, 0.6701, 0.6642,  ..., 0.6503, 0.6230, 0.4784],
          [0.5449, 0.6302, 0.7265,  ..., 0.8207, 0.6638, 0.5825]],

         [[0.6209, 0.6060, 0.5748,  ..., 0.4673, 0.4972, 0.5451],
          [0.5871, 0.6054, 0.6917,  ..., 0.4551, 0.4876, 0.5319],
          [0.4934, 0.4667, 0.5183,  ..., 0.4339, 0.4612, 0.5276],
          ...,
          [0.4947, 0.6262, 0.6711,  ..., 0.7010, 0.6903, 0.5676],
          [0.3775, 0.4279, 0.4578,  ..., 0.3323, 0.3409, 0.3827],
          [0.3580, 0.3578, 0.4146,  ..., 0.5147, 0.4008, 0.4120]],

         [[0.4963, 0.5869, 0.5400,  ..., 0.4700, 0.4608, 0.4170],
          [0.4674, 0.5400, 0.4799,  ..., 0.3410, 0.3772, 0.4072],
          [0.4160, 0.4167, 0.3443,  ..., 0.3299, 0.4290, 0.4162],
          ...,
          [0.4847, 0.6463, 0.6790,  ..., 0.7801, 0.7259, 0.5965],
          [0.4787, 0.5333, 0.6047,  ..., 0.4360, 0.4476, 0.5390],
          [0.5225, 0.4978, 0.5033,  ..., 0.6794, 0.5641, 0.6667]]]],
       device='cuda:0')
y_size: torch.Size([1, 3, 52, 52])
w: tensor([[[[-0.7541,  0.2809, -0.1559,  ...,  0.9069,  0.8929, -0.9072],
          [-1.0582, -0.6512, -0.3270,  ..., -0.4050, -0.1288, -1.8518],
          [-1.1189, -0.3012, -0.5626,  ..., -0.7169, -0.3567, -2.3133],
          ...,
          [-1.2086,  0.1479, -0.0981,  ...,  0.3988,  0.1026, -1.8763],
          [-0.8566,  0.2038, -0.0208,  ..., -0.3172, -0.2027, -1.3130],
          [-0.1749,  0.9235,  1.2425,  ...,  1.0254,  0.6775, -0.5032]],

         [[-0.6309, -0.0479, -0.2997,  ...,  0.0655,  0.0598, -0.9559],
          [-0.4904,  0.2010, -0.2363,  ...,  0.1438,  0.1823, -1.2486],
          [-0.6902,  0.1241, -0.4944,  ...,  0.1048,  0.1759, -1.6108],
          ...,
          [-0.6996,  0.2437,  0.2381,  ...,  0.3219,  0.2606, -1.0007],
          [-0.5100,  0.2317,  0.2154,  ...,  0.2559,  0.3236, -0.7332],
          [-0.7019,  0.0071, -0.0253,  ...,  0.0624,  0.0620, -0.8142]],

         [[ 0.7857,  0.1927,  0.5626,  ...,  0.5812,  0.5065,  0.8195],
          [ 0.0665, -0.1571,  0.1422,  ...,  0.2496,  0.0982,  0.5702],
          [ 0.1010, -0.2327,  0.0197,  ...,  0.2595,  0.0955,  0.5429],
          ...,
          [-0.0145, -0.1559,  0.2158,  ...,  0.2722, -0.1399,  0.2550],
          [ 0.0164, -0.1371,  0.2053,  ...,  0.2384, -0.1268,  0.1644],
          [ 0.7047,  0.2808,  0.6972,  ...,  0.6925,  0.4401,  0.8430]]]],
       device='cuda:0')
w_size: torch.Size([1, 3, 52, 52])
h: tensor([[[[-1.1538, -1.4507, -0.9346,  ..., -1.7866, -1.7783, -0.7139],
          [ 0.5772, -0.6493, -0.1177,  ..., -0.5048, -0.5900,  0.7493],
          [ 0.4189, -0.2495,  0.0248,  ..., -0.9474, -1.1047,  0.8037],
          ...,
          [ 0.7389, -0.1907, -0.4287,  ..., -0.7024, -0.4906,  0.5008],
          [ 0.3909, -0.4547, -0.6835,  ..., -0.8130, -0.5465,  0.3751],
          [-0.7258, -1.1093, -1.6865,  ..., -2.0005, -1.5175, -1.0856]],

         [[ 0.5069, -0.1921,  0.0022,  ..., -0.3200, -0.3464,  0.6644],
          [ 0.1798, -0.0858, -0.0772,  ..., -0.2754, -0.2361,  0.8858],
          [ 0.5468,  0.0566,  0.2471,  ..., -0.0455, -0.0877,  1.2662],
          ...,
          [ 0.3649,  0.0259, -0.0202,  ..., -0.2339, -0.0621,  0.4912],
          [ 0.0579, -0.1983, -0.2856,  ..., -0.4194, -0.2626,  0.1233],
          [ 0.2632, -0.3766, -0.3374,  ..., -0.4359, -0.4090,  0.3148]],

         [[-0.7734, -0.7303, -0.7386,  ..., -1.2266, -1.1093, -0.9089],
          [-0.1265,  0.0903, -0.0251,  ..., -0.1029, -0.0958, -0.2853],
          [-0.1851,  0.1145,  0.0313,  ..., -0.0742, -0.1593, -0.3305],
          ...,
          [-0.0791,  0.1597,  0.1535,  ..., -0.1704, -0.0525, -0.1825],
          [-0.2133, -0.0898, -0.2234,  ..., -0.1181, -0.0740, -0.1694],
          [-0.9450, -1.0711, -1.2426,  ..., -1.4536, -1.2045, -1.1795]]]],
       device='cuda:0')
h_size: torch.Size([1, 3, 52, 52])
conf: tensor([[[[1.4156e-05, 1.7501e-05, 2.8875e-05,  ..., 1.0805e-05,
           1.2690e-05, 2.3204e-05],
          [1.2305e-05, 3.0514e-06, 2.0275e-05,  ..., 5.5576e-08,
           6.4016e-08, 3.6502e-06],
          [8.8089e-06, 4.2823e-06, 1.1381e-05,  ..., 1.5371e-08,
           5.8833e-08, 1.4913e-06],
          ...,
          [3.4571e-05, 5.8830e-07, 5.3811e-08,  ..., 7.4041e-10,
           2.8439e-07, 1.7241e-06],
          [2.6063e-05, 2.0111e-06, 4.4077e-07,  ..., 2.6228e-08,
           7.0056e-07, 3.8068e-06],
          [6.5584e-05, 5.3835e-05, 1.7299e-05,  ..., 4.6859e-06,
           2.0311e-05, 2.2002e-05]],

         [[5.6794e-07, 2.0093e-07, 1.8803e-07,  ..., 1.0052e-08,
           2.1739e-08, 3.7220e-07],
          [1.0308e-05, 5.4290e-06, 1.0317e-05,  ..., 1.9231e-08,
           1.0054e-07, 9.0515e-07],
          [8.7346e-06, 8.3023e-06, 2.4798e-05,  ..., 1.5774e-09,
           2.1756e-08, 9.3459e-07],
          ...,
          [4.3968e-05, 1.3675e-05, 6.6624e-08,  ..., 1.2469e-10,
           1.0590e-06, 2.1591e-06],
          [2.3577e-05, 7.7296e-06, 1.1674e-07,  ..., 3.9141e-09,
           2.4854e-06, 1.8638e-06],
          [1.8347e-06, 5.7012e-07, 1.9049e-08,  ..., 1.3372e-09,
           4.8801e-08, 1.7252e-07]],

         [[1.8850e-07, 2.0038e-06, 1.6534e-06,  ..., 1.7877e-05,
           3.5408e-06, 2.6690e-07],
          [1.9276e-07, 4.8893e-06, 2.5305e-06,  ..., 2.2431e-06,
           2.4159e-07, 1.9263e-08],
          [6.8191e-08, 1.2715e-06, 6.5636e-07,  ..., 3.4554e-08,
           2.1097e-08, 3.2327e-09],
          ...,
          [6.8233e-08, 5.6209e-06, 3.8736e-06,  ..., 1.6212e-07,
           1.5902e-06, 2.6874e-09],
          [1.0908e-07, 6.0799e-06, 7.1102e-06,  ..., 8.6387e-07,
           3.9363e-06, 1.1174e-08],
          [7.6011e-07, 1.4205e-05, 4.1771e-05,  ..., 4.8843e-06,
           4.4310e-06, 2.5277e-07]]]], device='cuda:0')
conf_size: torch.Size([1, 3, 52, 52])
pred_cls: tensor([[[[[6.9899e-02, 3.3174e-03, 3.6174e-02,  ..., 4.9998e-03,
            4.6807e-03, 3.2286e-03],
           [6.2770e-02, 2.6142e-03, 1.6417e-02,  ..., 2.7686e-03,
            4.8884e-03, 1.4070e-03],
           [3.6946e-02, 1.1582e-03, 4.6947e-03,  ..., 2.0883e-03,
            4.6991e-03, 1.0517e-03],
           ...,
           [3.6902e-01, 6.1363e-03, 5.2151e-02,  ..., 1.5868e-03,
            4.8463e-04, 2.8471e-04],
           [1.6703e-01, 7.3527e-03, 1.0366e-01,  ..., 9.7830e-04,
            5.5466e-04, 2.4114e-04],
           [2.1681e-01, 7.1641e-03, 7.1441e-02,  ..., 2.3665e-03,
            9.2136e-04, 5.8076e-04]],

          [[1.6267e-01, 2.2779e-03, 1.8543e-02,  ..., 1.1699e-03,
            6.1226e-03, 7.3812e-04],
           [1.1786e-01, 1.1729e-03, 1.5111e-02,  ..., 4.9694e-04,
            2.8574e-03, 4.4814e-04],
           [4.2018e-02, 2.2101e-04, 3.5430e-03,  ..., 2.1898e-04,
            1.1644e-03, 1.0334e-04],
           ...,
           [2.8106e-01, 2.2511e-03, 2.4068e-02,  ..., 9.3806e-04,
            2.8563e-04, 2.1166e-04],
           [2.7920e-01, 3.2474e-03, 3.2519e-02,  ..., 8.6880e-04,
            3.9865e-04, 1.6115e-04],
           [2.2045e-01, 5.2198e-03, 4.5454e-02,  ..., 1.0954e-03,
            6.2882e-04, 3.1074e-04]],

          [[1.9486e-01, 7.4952e-03, 4.8377e-02,  ..., 4.8275e-04,
            3.5438e-03, 3.5387e-04],
           [9.9682e-02, 3.7120e-03, 2.9135e-02,  ..., 1.0301e-04,
            1.0542e-03, 1.0263e-04],
           [3.9630e-03, 2.9731e-04, 1.7717e-03,  ..., 2.4423e-05,
            2.8494e-04, 4.5252e-05],
           ...,
           [8.3829e-02, 3.1204e-03, 4.2028e-02,  ..., 5.6290e-04,
            2.0794e-04, 2.4091e-04],
           [1.0394e-01, 4.9348e-03, 6.7741e-02,  ..., 1.0221e-03,
            5.6776e-04, 2.7120e-04],
           [1.9966e-01, 8.4368e-03, 7.9145e-02,  ..., 1.1831e-03,
            6.2083e-04, 3.5189e-04]],

          ...,

          [[2.7348e-01, 1.1404e-02, 6.0038e-02,  ..., 1.3933e-03,
            6.8798e-03, 3.9756e-03],
           [1.8542e-01, 2.9545e-03, 1.9570e-02,  ..., 5.9120e-04,
            2.9213e-03, 1.0882e-03],
           [8.9813e-02, 2.8505e-04, 6.7067e-03,  ..., 9.0399e-04,
            4.6903e-04, 1.8635e-04],
           ...,
           [3.3797e-02, 2.5812e-04, 1.0609e-02,  ..., 1.2588e-04,
            3.9852e-04, 4.5420e-05],
           [5.0693e-02, 4.6766e-04, 2.6349e-02,  ..., 2.2385e-04,
            3.0834e-03, 3.5886e-04],
           [9.7842e-02, 2.3835e-03, 3.8504e-02,  ..., 7.7689e-04,
            6.5239e-03, 9.3991e-04]],

          [[2.2945e-01, 9.7390e-03, 5.6842e-02,  ..., 1.5877e-03,
            7.9048e-03, 6.5920e-03],
           [8.9814e-02, 4.7587e-03, 5.1537e-02,  ..., 5.5200e-04,
            5.3721e-03, 4.9181e-03],
           [1.0524e-01, 9.8047e-04, 1.2777e-02,  ..., 5.1168e-04,
            1.0172e-03, 9.6756e-04],
           ...,
           [1.1218e-02, 3.1986e-04, 3.1989e-03,  ..., 2.3699e-04,
            4.1369e-04, 6.0500e-05],
           [3.8397e-02, 8.5166e-04, 1.1600e-02,  ..., 3.5567e-04,
            2.6204e-03, 2.9942e-04],
           [7.1865e-02, 2.8384e-03, 2.0673e-02,  ..., 4.7260e-04,
            4.0616e-03, 5.0338e-04]],

          [[1.7710e-01, 1.1176e-02, 2.7062e-02,  ..., 4.1921e-03,
            7.3763e-03, 1.3023e-02],
           [1.9965e-01, 1.2313e-02, 3.0006e-02,  ..., 1.7987e-03,
            5.6610e-03, 5.7923e-03],
           [3.1727e-01, 1.0616e-02, 2.3186e-02,  ..., 1.1031e-03,
            1.7427e-03, 1.8418e-03],
           ...,
           [1.9881e-01, 5.6802e-03, 3.7108e-02,  ..., 5.2402e-04,
            4.0575e-04, 1.2011e-04],
           [1.7387e-01, 1.0706e-02, 7.0629e-02,  ..., 7.7052e-04,
            2.6122e-03, 5.5602e-04],
           [1.1673e-01, 1.6507e-02, 8.1020e-02,  ..., 1.1378e-03,
            4.3998e-03, 1.5481e-03]]],


         [[[3.1079e-01, 3.9024e-03, 1.3046e-02,  ..., 1.1024e-02,
            1.3303e-02, 5.1372e-03],
           [2.7288e-01, 5.7406e-03, 1.5420e-02,  ..., 7.3939e-03,
            1.8419e-02, 3.4133e-03],
           [1.9978e-01, 2.9471e-03, 5.5369e-03,  ..., 8.9380e-03,
            2.8030e-02, 2.9854e-03],
           ...,
           [5.9208e-01, 1.2923e-02, 5.7819e-02,  ..., 3.7688e-03,
            2.7453e-03, 1.5379e-03],
           [3.1568e-01, 1.2895e-02, 1.1988e-01,  ..., 2.6538e-03,
            3.1348e-03, 1.3450e-03],
           [3.3258e-01, 1.0604e-02, 5.7493e-02,  ..., 5.2055e-03,
            3.3705e-03, 1.9546e-03]],

          [[1.3869e-01, 3.5197e-03, 1.7341e-02,  ..., 1.3817e-03,
            1.0307e-02, 1.7207e-03],
           [9.7299e-02, 3.3088e-03, 1.7618e-02,  ..., 9.0431e-04,
            9.4544e-03, 8.3969e-04],
           [5.9221e-02, 7.8315e-04, 3.8055e-03,  ..., 7.7591e-04,
            5.0906e-03, 4.8638e-04],
           ...,
           [1.5747e-01, 5.4596e-03, 2.2117e-02,  ..., 1.4436e-03,
            8.3173e-04, 7.7023e-04],
           [1.4369e-01, 6.5164e-03, 5.8380e-02,  ..., 1.2584e-03,
            1.0808e-03, 7.0755e-04],
           [2.2371e-01, 8.7204e-03, 5.3729e-02,  ..., 2.0914e-03,
            1.2318e-03, 1.3492e-03]],

          [[1.8729e-01, 6.2304e-03, 2.9800e-02,  ..., 8.1283e-04,
            7.3180e-03, 1.0291e-03],
           [7.7152e-02, 3.7839e-03, 1.8802e-02,  ..., 2.5122e-04,
            4.2302e-03, 3.7913e-04],
           [2.4131e-02, 2.5615e-04, 1.1903e-03,  ..., 9.8300e-05,
            1.4518e-03, 2.4713e-04],
           ...,
           [8.5581e-02, 3.7086e-03, 1.8109e-02,  ..., 1.3630e-03,
            6.4923e-04, 1.0098e-03],
           [7.4754e-02, 8.2601e-03, 7.1079e-02,  ..., 2.3083e-03,
            1.8690e-03, 1.2642e-03],
           [2.4194e-01, 7.5642e-03, 5.1287e-02,  ..., 2.3216e-03,
            8.9347e-04, 1.4998e-03]],

          ...,

          [[3.8045e-01, 1.6437e-02, 9.4354e-02,  ..., 1.2092e-03,
            1.2122e-02, 2.8526e-03],
           [4.0004e-01, 5.8102e-03, 5.9208e-02,  ..., 5.4234e-04,
            5.1988e-03, 5.7868e-04],
           [5.0968e-01, 6.8991e-04, 5.6692e-03,  ..., 8.1225e-04,
            7.5453e-04, 1.0973e-04],
           ...,
           [4.7865e-01, 1.1556e-03, 6.1403e-03,  ..., 8.6947e-05,
            4.1596e-04, 2.4949e-05],
           [9.2487e-02, 2.0325e-03, 1.0654e-02,  ..., 1.0737e-04,
            2.6581e-03, 2.5520e-04],
           [1.8388e-01, 4.4795e-03, 1.1979e-02,  ..., 4.6188e-04,
            4.5823e-03, 6.8701e-04]],

          [[4.0018e-01, 1.2158e-02, 6.0194e-02,  ..., 1.7393e-03,
            1.6541e-02, 5.1577e-03],
           [4.2859e-01, 7.2478e-03, 8.7126e-02,  ..., 6.4469e-04,
            1.5659e-02, 2.8380e-03],
           [6.2312e-01, 1.4430e-03, 1.4193e-02,  ..., 5.8875e-04,
            3.4318e-03, 6.6497e-04],
           ...,
           [1.5042e-01, 1.5311e-03, 5.5079e-03,  ..., 1.5683e-04,
            8.2959e-04, 4.9982e-05],
           [5.7320e-02, 2.9986e-03, 9.4175e-03,  ..., 1.6822e-04,
            3.7986e-03, 3.2549e-04],
           [1.2892e-01, 6.6082e-03, 1.4634e-02,  ..., 3.1699e-04,
            3.6049e-03, 5.6929e-04]],

          [[3.9989e-01, 2.5227e-02, 2.6635e-02,  ..., 6.1766e-03,
            2.0924e-02, 1.0595e-02],
           [3.3792e-01, 3.5150e-02, 3.6978e-02,  ..., 3.0738e-03,
            2.4774e-02, 5.8635e-03],
           [6.0521e-01, 1.8771e-02, 1.6634e-02,  ..., 1.9129e-03,
            1.1105e-02, 2.6000e-03],
           ...,
           [2.0971e-01, 4.1618e-02, 2.0026e-02,  ..., 1.0747e-03,
            2.7225e-03, 3.8823e-04],
           [1.1308e-01, 5.4930e-02, 2.6861e-02,  ..., 9.5064e-04,
            9.9580e-03, 1.7862e-03],
           [1.7170e-01, 5.0359e-02, 4.3214e-02,  ..., 2.2523e-03,
            1.2268e-02, 3.3728e-03]]],


         [[[1.2048e-01, 4.4893e-03, 4.2984e-02,  ..., 9.0913e-03,
            1.3163e-02, 7.1789e-03],
           [9.0326e-02, 5.7315e-03, 2.8016e-02,  ..., 5.2923e-03,
            9.1914e-03, 3.3548e-03],
           [6.6233e-02, 3.4393e-03, 1.7169e-02,  ..., 8.8340e-03,
            1.5768e-02, 3.2029e-03],
           ...,
           [1.9157e-01, 6.6194e-03, 1.6600e-01,  ..., 2.0467e-03,
            1.2515e-03, 9.6800e-04],
           [1.1531e-01, 6.0908e-03, 2.1812e-01,  ..., 1.6476e-03,
            1.7534e-03, 1.1990e-03],
           [1.3731e-01, 7.6893e-03, 1.5062e-01,  ..., 4.2246e-03,
            5.2945e-03, 2.6184e-03]],

          [[8.0842e-02, 3.8618e-03, 3.4435e-02,  ..., 1.6493e-03,
            1.3287e-02, 2.9414e-03],
           [6.4796e-02, 3.8859e-03, 2.3689e-02,  ..., 8.2852e-04,
            7.0120e-03, 1.0099e-03],
           [3.8989e-02, 1.3693e-03, 1.9939e-02,  ..., 1.2954e-03,
            7.0187e-03, 8.1548e-04],
           ...,
           [7.5020e-02, 2.8271e-03, 5.8549e-02,  ..., 1.1540e-03,
            8.0399e-04, 5.1344e-04],
           [1.1260e-01, 4.8802e-03, 1.0928e-01,  ..., 1.0802e-03,
            1.2264e-03, 8.3353e-04],
           [1.1044e-01, 7.2923e-03, 1.2230e-01,  ..., 2.3455e-03,
            3.7344e-03, 2.3938e-03]],

          [[6.5002e-02, 5.6106e-03, 5.0227e-02,  ..., 8.1276e-04,
            1.2145e-02, 2.0107e-03],
           [3.1950e-02, 4.5705e-03, 2.2415e-02,  ..., 2.7504e-04,
            4.5609e-03, 6.2254e-04],
           [9.9544e-03, 9.3996e-04, 1.5504e-02,  ..., 2.6723e-04,
            3.7316e-03, 5.9497e-04],
           ...,
           [2.3236e-02, 4.0022e-03, 4.6256e-02,  ..., 9.9351e-04,
            7.0375e-04, 6.4965e-04],
           [5.5432e-02, 1.0632e-02, 9.5817e-02,  ..., 1.8139e-03,
            1.8278e-03, 1.2774e-03],
           [7.5813e-02, 7.8061e-03, 9.7888e-02,  ..., 2.7564e-03,
            3.5004e-03, 2.2549e-03]],

          ...,

          [[2.5899e-01, 1.9440e-02, 1.4931e-01,  ..., 1.9489e-03,
            1.4093e-02, 5.5449e-03],
           [3.1533e-01, 8.0575e-03, 6.2048e-02,  ..., 6.0084e-04,
            2.6236e-03, 5.9852e-04],
           [2.6983e-01, 1.1105e-03, 2.1523e-02,  ..., 7.5851e-04,
            5.1470e-04, 5.3055e-05],
           ...,
           [3.3412e-02, 2.2600e-04, 1.1295e-02,  ..., 2.2042e-05,
            6.2748e-05, 1.0167e-05],
           [3.8825e-02, 6.9868e-04, 9.6011e-03,  ..., 5.5185e-05,
            7.7546e-04, 2.5353e-04],
           [4.5212e-02, 2.6400e-03, 1.9363e-02,  ..., 4.1972e-04,
            5.0616e-03, 1.6418e-03]],

          [[2.7951e-01, 1.7005e-02, 1.2585e-01,  ..., 2.6355e-03,
            1.4025e-02, 1.1374e-02],
           [2.5363e-01, 1.0426e-02, 1.1704e-01,  ..., 7.1061e-04,
            4.4734e-03, 3.5911e-03],
           [2.9567e-01, 2.7446e-03, 4.8735e-02,  ..., 5.3578e-04,
            1.1168e-03, 5.9053e-04],
           ...,
           [1.9746e-02, 6.6229e-04, 6.5465e-03,  ..., 4.7405e-05,
            1.1716e-04, 2.0015e-05],
           [5.0388e-02, 1.7640e-03, 7.5508e-03,  ..., 9.4376e-05,
            8.3383e-04, 2.6995e-04],
           [6.3203e-02, 4.2114e-03, 1.7318e-02,  ..., 2.5889e-04,
            2.8459e-03, 1.2484e-03]],

          [[2.9262e-01, 1.9639e-02, 4.1824e-02,  ..., 5.6663e-03,
            1.0938e-02, 1.8356e-02],
           [1.8556e-01, 2.3986e-02, 5.7973e-02,  ..., 2.4318e-03,
            5.2823e-03, 7.4472e-03],
           [2.7931e-01, 1.1663e-02, 3.7706e-02,  ..., 1.3859e-03,
            2.0192e-03, 2.2548e-03],
           ...,
           [8.1081e-02, 1.0510e-02, 3.7148e-02,  ..., 3.8989e-04,
            3.6722e-04, 2.4541e-04],
           [1.0089e-01, 2.1606e-02, 4.8575e-02,  ..., 5.5713e-04,
            1.8623e-03, 1.9866e-03],
           [1.1258e-01, 2.4415e-02, 5.9118e-02,  ..., 1.5146e-03,
            5.7411e-03, 6.5217e-03]]]]], device='cuda:0')
pred_cls_size: torch.Size([1, 3, 52, 52, 80])
grid_x: tensor([[[[ 0.,  1.,  2.,  ..., 49., 50., 51.],
          [ 0.,  1.,  2.,  ..., 49., 50., 51.],
          [ 0.,  1.,  2.,  ..., 49., 50., 51.],
          ...,
          [ 0.,  1.,  2.,  ..., 49., 50., 51.],
          [ 0.,  1.,  2.,  ..., 49., 50., 51.],
          [ 0.,  1.,  2.,  ..., 49., 50., 51.]],

         [[ 0.,  1.,  2.,  ..., 49., 50., 51.],
          [ 0.,  1.,  2.,  ..., 49., 50., 51.],
          [ 0.,  1.,  2.,  ..., 49., 50., 51.],
          ...,
          [ 0.,  1.,  2.,  ..., 49., 50., 51.],
          [ 0.,  1.,  2.,  ..., 49., 50., 51.],
          [ 0.,  1.,  2.,  ..., 49., 50., 51.]],

         [[ 0.,  1.,  2.,  ..., 49., 50., 51.],
          [ 0.,  1.,  2.,  ..., 49., 50., 51.],
          [ 0.,  1.,  2.,  ..., 49., 50., 51.],
          ...,
          [ 0.,  1.,  2.,  ..., 49., 50., 51.],
          [ 0.,  1.,  2.,  ..., 49., 50., 51.],
          [ 0.,  1.,  2.,  ..., 49., 50., 51.]]]], device='cuda:0')
grid_x_size: torch.Size([1, 3, 52, 52])
grid_y: tensor([[[[ 0.,  0.,  0.,  ...,  0.,  0.,  0.],
          [ 1.,  1.,  1.,  ...,  1.,  1.,  1.],
          [ 2.,  2.,  2.,  ...,  2.,  2.,  2.],
          ...,
          [49., 49., 49.,  ..., 49., 49., 49.],
          [50., 50., 50.,  ..., 50., 50., 50.],
          [51., 51., 51.,  ..., 51., 51., 51.]],

         [[ 0.,  0.,  0.,  ...,  0.,  0.,  0.],
          [ 1.,  1.,  1.,  ...,  1.,  1.,  1.],
          [ 2.,  2.,  2.,  ...,  2.,  2.,  2.],
          ...,
          [49., 49., 49.,  ..., 49., 49., 49.],
          [50., 50., 50.,  ..., 50., 50., 50.],
          [51., 51., 51.,  ..., 51., 51., 51.]],

         [[ 0.,  0.,  0.,  ...,  0.,  0.,  0.],
          [ 1.,  1.,  1.,  ...,  1.,  1.,  1.],
          [ 2.,  2.,  2.,  ...,  2.,  2.,  2.],
          ...,
          [49., 49., 49.,  ..., 49., 49., 49.],
          [50., 50., 50.,  ..., 50., 50., 50.],
          [51., 51., 51.,  ..., 51., 51., 51.]]]], device='cuda:0')
grid_y_size: torch.Size([1, 3, 52, 52])
anchor_w: tensor([[[[1.2500, 1.2500, 1.2500,  ..., 1.2500, 1.2500, 1.2500],
          [1.2500, 1.2500, 1.2500,  ..., 1.2500, 1.2500, 1.2500],
          [1.2500, 1.2500, 1.2500,  ..., 1.2500, 1.2500, 1.2500],
          ...,
          [1.2500, 1.2500, 1.2500,  ..., 1.2500, 1.2500, 1.2500],
          [1.2500, 1.2500, 1.2500,  ..., 1.2500, 1.2500, 1.2500],
          [1.2500, 1.2500, 1.2500,  ..., 1.2500, 1.2500, 1.2500]],

         [[2.0000, 2.0000, 2.0000,  ..., 2.0000, 2.0000, 2.0000],
          [2.0000, 2.0000, 2.0000,  ..., 2.0000, 2.0000, 2.0000],
          [2.0000, 2.0000, 2.0000,  ..., 2.0000, 2.0000, 2.0000],
          ...,
          [2.0000, 2.0000, 2.0000,  ..., 2.0000, 2.0000, 2.0000],
          [2.0000, 2.0000, 2.0000,  ..., 2.0000, 2.0000, 2.0000],
          [2.0000, 2.0000, 2.0000,  ..., 2.0000, 2.0000, 2.0000]],

         [[4.1250, 4.1250, 4.1250,  ..., 4.1250, 4.1250, 4.1250],
          [4.1250, 4.1250, 4.1250,  ..., 4.1250, 4.1250, 4.1250],
          [4.1250, 4.1250, 4.1250,  ..., 4.1250, 4.1250, 4.1250],
          ...,
          [4.1250, 4.1250, 4.1250,  ..., 4.1250, 4.1250, 4.1250],
          [4.1250, 4.1250, 4.1250,  ..., 4.1250, 4.1250, 4.1250],
          [4.1250, 4.1250, 4.1250,  ..., 4.1250, 4.1250, 4.1250]]]],
       device='cuda:0')
anchor_h: tensor([[[[1.6250, 1.6250, 1.6250,  ..., 1.6250, 1.6250, 1.6250],
          [1.6250, 1.6250, 1.6250,  ..., 1.6250, 1.6250, 1.6250],
          [1.6250, 1.6250, 1.6250,  ..., 1.6250, 1.6250, 1.6250],
          ...,
          [1.6250, 1.6250, 1.6250,  ..., 1.6250, 1.6250, 1.6250],
          [1.6250, 1.6250, 1.6250,  ..., 1.6250, 1.6250, 1.6250],
          [1.6250, 1.6250, 1.6250,  ..., 1.6250, 1.6250, 1.6250]],

         [[3.7500, 3.7500, 3.7500,  ..., 3.7500, 3.7500, 3.7500],
          [3.7500, 3.7500, 3.7500,  ..., 3.7500, 3.7500, 3.7500],
          [3.7500, 3.7500, 3.7500,  ..., 3.7500, 3.7500, 3.7500],
          ...,
          [3.7500, 3.7500, 3.7500,  ..., 3.7500, 3.7500, 3.7500],
          [3.7500, 3.7500, 3.7500,  ..., 3.7500, 3.7500, 3.7500],
          [3.7500, 3.7500, 3.7500,  ..., 3.7500, 3.7500, 3.7500]],

         [[2.8750, 2.8750, 2.8750,  ..., 2.8750, 2.8750, 2.8750],
          [2.8750, 2.8750, 2.8750,  ..., 2.8750, 2.8750, 2.8750],
          [2.8750, 2.8750, 2.8750,  ..., 2.8750, 2.8750, 2.8750],
          ...,
          [2.8750, 2.8750, 2.8750,  ..., 2.8750, 2.8750, 2.8750],
          [2.8750, 2.8750, 2.8750,  ..., 2.8750, 2.8750, 2.8750],
          [2.8750, 2.8750, 2.8750,  ..., 2.8750, 2.8750, 2.8750]]]],
       device='cuda:0')
pred_boxes: tensor([[[[[-3.1796e-01,  5.4260e-01,  3.5451e-01, -4.5240e-01],
           [-1.8913e+01, -2.9183e+00, -4.7475e+00, -2.3301e+00],
           [-5.9606e+00, -3.8765e+00, -2.7145e+00, -1.2861e+00],
           ...,
           [-2.7198e+00, -6.1345e+00, -6.2785e+00, -5.8889e+00],
           [-5.2214e+00, -5.6942e+00, -6.3891e+00, -4.5200e+00],
           [-5.5901e+00, -6.5862e+00, -5.6870e+00, -5.0818e+00]],

          [[-5.0626e+00, -5.4007e+00, -6.4869e+00, -6.3145e+00],
           [-5.5276e+00, -5.9262e+00, -5.3659e+00, -6.2370e+00],
           [-4.1579e+00, -7.4449e+00, -5.7464e+00, -6.5279e+00],
           ...,
           [-7.8556e+00, -5.8322e+00, -5.9522e+00, -2.2003e+00],
           [-4.4548e+00, -5.9507e+00, -6.1110e+00, -5.7130e+00],
           [-4.6976e+00, -4.3154e+00, -6.9558e+00, -6.1878e+00]],

          [[-5.7027e+00, -5.6362e+00, -4.9218e+00, -2.5336e+00],
           [-5.8399e+00, -6.1175e+00, -5.4265e+00, -5.9023e+00],
           [-7.0541e+00, -6.5316e-02,  6.6139e-01,  6.6395e-01],
           ...,
           [-6.2843e+00, -3.3051e+00, -3.8520e+00, -5.6908e+00],
           [-5.9467e+00, -6.7291e+00, -6.7967e+00, -7.2151e+00],
           [-5.8768e+00, -4.8843e+00, -7.8072e+00, -6.3854e+00]],

          ...,

          [[-5.9756e+00, -6.0083e+00, -7.2786e+00, -9.2797e+00],
           [-8.0106e+00, -6.8684e+00, -7.5537e+00, -7.2947e+00],
           [-2.7449e-01, -4.2514e-01,  3.1315e-01, -2.7261e-01],
           ...,
           [-3.6314e+00, -6.8804e+00, -7.0804e+00, -7.0882e+00],
           [-9.5325e+00, -9.9735e+00, -8.7738e+00, -8.3013e+00],
           [-9.4900e+00, -5.8323e+00, -1.0669e+01, -3.4920e+00]],

          [[-4.9014e+00, -4.8571e+00, -8.0963e+00, -6.0306e+00],
           [-6.8446e+00, -7.3845e+00, -5.7650e+00, -6.6087e+00],
           [-7.8693e+00, -7.0199e+00, -7.4457e+00, -6.9512e+00],
           ...,
           [-8.3572e+00, -7.9539e+00, -6.1745e+00, -7.4908e+00],
           [-7.2560e+00, -5.9724e+00, -6.9794e+00, -3.4475e+00],
           [-7.0446e+00, -4.2599e+00, -8.3867e+00, -8.7326e+00]],

          [[-4.9563e+00, -8.1432e+00, -8.0964e+00, -8.0140e+00],
           [-7.8797e+00, -8.7117e+00, -7.5813e+00, -9.8093e+00],
           [-7.1784e+00, -8.2053e+00, -6.8845e+00, -7.1738e+00],
           ...,
           [-1.2627e+01, -1.2035e+01, -9.8355e+00, -1.1114e+01],
           [-1.0081e+01, -1.3994e+01, -8.4503e+00, -1.1727e+01],
           [-1.2699e+01, -7.9063e+00, -1.2260e+01, -9.8632e+00]]],


         [[[-5.5528e+00, -1.0747e+01, -9.9268e+00, -1.3347e+01],
           [-1.2563e+01, -1.3810e+01, -1.2123e+01, -1.3031e+01],
           [-1.0034e+01, -1.1847e+01, -9.7323e+00, -1.3869e+01],
           ...,
           [-4.8247e+00, -4.7229e+00, -4.7641e+00, -4.8811e+00],
           [-2.7132e+00, -2.2260e+00, -4.6279e+00, -2.5984e+00],
           [-3.3910e+00, -3.3236e+00, -4.6711e+00, -4.0939e+00]],

          [[-3.3504e+00, -2.9686e+00, -3.2175e+00, -3.8692e+00],
           [-3.2004e+00, -4.0638e+00, -2.9425e+00, -3.9030e+00],
           [-5.2759e+00, -3.9163e+00, -5.5479e+00, -4.1005e+00],
           ...,
           [-5.5731e-01,  1.2657e-02,  1.5982e-01,  2.1483e-02],
           [-1.4408e+01,  8.2414e-01, -6.0956e+00, -3.3851e+00],
           [-7.9496e+00, -8.6783e+00, -5.8909e+00, -6.0595e+00]],

          [[-7.0619e+00, -7.5424e+00, -5.7354e+00, -6.1850e+00],
           [-6.0321e+00, -6.1125e+00, -3.2041e+00, -6.3164e+00],
           [-5.7293e+00, -5.0254e+00, -8.5966e+00, -7.3583e+00],
           ...,
           [-8.0743e+00, -7.2351e+00, -7.4671e+00, -7.6282e+00],
           [-5.6449e+00, -7.1502e+00, -6.7350e+00, -7.3390e+00],
           [-7.7053e+00, -6.8986e+00, -7.5052e+00, -6.4522e+00]],

          ...,

          [[-6.5391e+00, -5.2372e+00, -6.7053e+00, -7.0261e+00],
           [-6.1143e+00, -5.5719e+00, -5.5954e+00, -5.9315e+00],
           [-5.1356e+00, -5.0673e+00, -5.0232e+00, -6.0395e+00],
           ...,
           [-7.9451e+00, -8.4635e+00, -8.1366e+00, -9.1637e+00],
           [-9.6321e+00, -7.0729e+00, -1.0145e+01, -7.6537e+00],
           [-9.1770e+00, -9.0545e+00, -7.9699e+00, -8.2449e+00]],

          [[-8.3112e+00, -7.5457e+00, -9.5015e+00, -8.9456e+00],
           [-8.5834e+00, -8.5202e+00, -8.4829e+00, -1.0615e+01],
           [-8.5447e+00, -8.5895e+00, -6.4086e+00, -8.8100e+00],
           ...,
           [-1.0288e+01, -7.5523e+00, -1.0435e+01, -9.4645e+00],
           [-9.1211e+00, -6.4351e+00, -8.6273e+00, -8.6502e+00],
           [-3.7048e-01,  9.4718e-01,  4.4179e-01, -6.0446e-01]],

          [[-8.7114e+00,  3.5467e+00, -8.2203e+00, -4.9685e+00],
           [-6.7461e+00, -9.7272e+00, -8.9212e+00, -9.0492e+00],
           [-7.4084e+00, -1.0780e+01, -7.8956e+00, -9.6997e+00],
           ...,
           [-1.0097e+01, -9.4828e+00, -1.2600e+01, -1.0626e+01],
           [-1.1298e+01, -1.1017e+01, -1.1306e+01, -9.7838e+00],
           [-1.0958e+01, -1.2369e+01, -1.1545e+01, -1.1774e+01]]],


         [[[-1.2736e+01, -1.3379e+01, -9.2145e+00, -1.2308e+01],
           [-9.8504e+00, -1.0236e+01, -1.1050e+01, -9.8119e+00],
           [-9.4442e+00, -1.1893e+01, -8.2523e+00, -1.1652e+01],
           ...,
           [-1.1690e+01, -1.0195e+01, -1.1946e+01, -1.2416e+01],
           [-1.0939e+01, -1.2493e+01, -1.1642e+01, -1.1554e+01],
           [-1.1738e+01, -9.7422e+00, -8.4546e+00, -1.1745e+01]],

          [[-1.0064e+01, -1.0985e+01, -8.6191e+00, -1.1325e+01],
           [-9.8841e+00, -1.6712e+00,  1.9084e+00, -2.5496e-01],
           [-3.1644e-01, -6.1849e+00,  3.7462e+00, -6.1815e+00],
           ...,
           [-4.7211e+00, -5.3220e+00, -5.6145e+00, -5.3647e+00],
           [-5.4663e+00, -5.5680e+00, -5.7812e+00, -5.4898e+00],
           [-5.0437e+00, -1.7754e+00, -3.8587e+00, -4.9571e+00]],

          [[-5.2361e+00, -5.3622e+00, -5.3574e+00, -5.3508e+00],
           [-4.8111e+00, -5.7218e+00, -5.4590e+00, -6.4093e+00],
           [-5.0951e+00, -4.4338e+00, -5.6705e+00, -2.6397e+00],
           ...,
           [-7.9075e+00, -1.0254e+01, -9.0163e+00, -1.0668e+01],
           [-9.6564e+00, -1.0388e+01, -9.9811e+00, -8.0174e+00],
           [-1.0315e+01, -1.0998e+01, -7.5927e+00, -8.7030e+00]],

          ...,

          [[-8.4611e+00, -7.4106e+00, -7.6588e+00, -5.6261e+00],
           [-6.1297e+00, -6.8509e+00, -8.2194e+00, -7.1840e+00],
           [-8.1699e+00, -7.7217e+00, -6.4453e+00, -7.8553e+00],
           ...,
           [-6.7517e+00, -4.8016e+00, -4.4188e+00, -4.3398e+00],
           [-5.3328e+00, -6.5873e+00, -6.0003e+00, -4.5368e+00],
           [-5.4994e+00, -6.1108e+00, -5.5826e+00, -5.1714e+00]],

          [[-4.6624e+00, -4.9184e+00, -5.2588e+00, -6.0870e+00],
           [-5.6435e+00, -5.2456e+00, -4.4185e+00, -4.5631e+00],
           [-7.3197e+00, -4.9122e+00, -5.1450e+00, -5.5416e+00],
           ...,
           [-7.0494e+00, -2.9188e+00, -7.9652e+00, -8.5612e+00],
           [-6.7509e+00, -7.2160e+00, -6.0819e+00, -8.4026e+00],
           [-7.3886e+00, -7.4517e+00, -8.4952e+00, -7.4060e+00]],

          [[-8.6836e+00, -6.7774e+00, -1.0869e+01, -7.7690e+00],
           [-7.0506e+00, -4.0175e+00, -5.6256e+00, -8.3347e+00],
           [-7.2904e+00, -8.7954e+00, -7.5387e+00, -8.1637e+00],
           ...,
           [-1.0028e+01, -5.1700e+00, -1.0793e+01, -5.4952e+00],
           [-8.2538e+00, -7.7386e+00, -1.0791e+01, -1.1209e+01],
           [-8.5775e+00, -8.4317e+00, -6.2536e+00, -7.0824e+00]]]]],
       device='cuda:0')
pred_boxes: tensor([[[[[ 0.5046,  0.2942,  0.5881,  0.5126],
           [ 1.4693,  0.3417,  1.6554,  0.3809],
           [ 2.6000,  0.5292,  1.0695,  0.6382],
           ...,
           [49.4930,  0.1841,  3.0959,  0.2722],
           [50.4323,  0.1730,  3.0527,  0.2745],
           [51.7283,  0.3362,  0.5046,  0.7958]],

          [[ 0.3763,  1.4690,  0.4338,  2.8942],
           [ 1.4833,  1.5271,  0.6518,  0.8490],
           [ 2.5604,  1.4025,  0.9013,  1.4445],
           ...,
           [49.4787,  1.4204,  0.8337,  0.9809],
           [50.4706,  1.4793,  1.0990,  0.9008],
           [51.8751,  1.3940,  0.1962,  3.4378]],

          [[ 0.3944,  2.5187,  0.4083,  2.4704],
           [ 1.4456,  2.4264,  0.9249,  1.2662],
           [ 2.5108,  2.3889,  0.7122,  1.6658],
           ...,
           [49.5406,  2.5651,  0.6103,  0.6301],
           [50.3694,  2.5860,  0.8750,  0.5384],
           [51.8868,  2.5126,  0.1237,  3.6299]],

          ...,

          [[ 0.3797, 49.4994,  0.3733,  3.4020],
           [ 1.2679, 49.5205,  1.4493,  1.3429],
           [ 2.4577, 49.6279,  1.1333,  1.0585],
           ...,
           [49.6141, 49.6435,  1.8626,  0.8050],
           [50.5837, 49.5834,  1.3851,  0.9949],
           [51.8357, 49.5350,  0.1914,  2.6813]],

          [[ 0.4825, 50.4642,  0.5308,  2.4023],
           [ 1.3029, 50.6701,  1.5325,  1.0313],
           [ 2.4989, 50.6642,  1.2243,  0.8204],
           ...,
           [49.5693, 50.6503,  0.9102,  0.7208],
           [50.5256, 50.6230,  1.0207,  0.9409],
           [51.7100, 50.4784,  0.3363,  2.3646]],

          [[ 0.6217, 51.5449,  1.0494,  0.7864],
           [ 1.3885, 51.6302,  3.1476,  0.5359],
           [ 2.5267, 51.7265,  4.3305,  0.3009],
           ...,
           [49.5215, 51.8207,  3.4853,  0.2198],
           [50.5537, 51.6638,  2.4611,  0.3563],
           [51.4177, 51.5825,  0.7557,  0.5488]]],


         [[[ 0.5394,  0.6209,  1.0642,  6.2256],
           [ 1.4556,  0.6060,  1.9064,  3.0947],
           [ 2.6028,  0.5748,  1.4820,  3.7582],
           ...,
           [49.5114,  0.4673,  2.1355,  2.7231],
           [50.6004,  0.4972,  2.1233,  2.6521],
           [51.6961,  0.5451,  0.7689,  7.2872]],

          [[ 0.5991,  1.5871,  1.2247,  4.4888],
           [ 1.3001,  1.6054,  2.4453,  3.4416],
           [ 2.5584,  1.6917,  1.5792,  3.4714],
           ...,
           [49.4910,  1.4551,  2.3093,  2.8473],
           [50.6210,  1.4876,  2.4000,  2.9614],
           [51.7320,  1.5319,  0.5738,  9.0937]],

          [[ 0.6671,  2.4934,  1.0029,  6.4792],
           [ 1.2558,  2.4667,  2.2642,  3.9685],
           [ 2.5910,  2.5183,  1.2198,  4.8013],
           ...,
           [49.5222,  2.4339,  2.2210,  3.5832],
           [50.6563,  2.4612,  2.3846,  3.4350],
           [51.7906,  2.5276,  0.3995, 13.3025]],

          ...,

          [[ 0.6544, 49.4947,  0.9935,  5.4014],
           [ 1.1834, 49.6262,  2.5519,  3.8486],
           [ 2.3394, 49.6711,  2.5376,  3.6752],
           ...,
           [49.6115, 49.7010,  2.7595,  2.9678],
           [50.6095, 49.6903,  2.5953,  3.5240],
           [51.5544, 49.5676,  0.7352,  6.1286]],

          [[ 0.7077, 50.3775,  1.2010,  3.9735],
           [ 1.2398, 50.4279,  2.5214,  3.0755],
           [ 2.3647, 50.4578,  2.4807,  2.8184],
           ...,
           [49.5382, 50.3323,  2.5833,  2.4655],
           [50.6219, 50.3409,  2.7641,  2.8839],
           [51.4513, 50.3827,  0.9608,  4.2419]],

          [[ 0.6252, 51.3580,  0.9913,  4.8790],
           [ 1.3978, 51.3578,  2.0142,  2.5732],
           [ 2.5005, 51.4146,  1.9501,  2.6760],
           ...,
           [49.5858, 51.5147,  2.1288,  2.4252],
           [50.5577, 51.4008,  2.1279,  2.4912],
           [51.5248, 51.4120,  0.8860,  5.1373]]],


         [[[ 0.5056,  0.4963,  9.0498,  1.3266],
           [ 1.6543,  0.5869,  5.0017,  1.3851],
           [ 2.4871,  0.5400,  7.2403,  1.3736],
           ...,
           [49.4745,  0.4700,  7.3763,  0.8432],
           [50.2993,  0.4608,  6.8456,  0.9481],
           [51.4106,  0.4170,  9.3615,  1.1586]],

          [[ 0.4712,  1.4674,  4.4088,  2.5333],
           [ 1.6802,  1.5400,  3.5252,  3.1468],
           [ 2.4673,  1.4799,  4.7553,  2.8038],
           ...,
           [49.4396,  1.3410,  5.2947,  2.5940],
           [50.2296,  1.3772,  4.5507,  2.6124],
           [51.4559,  1.4072,  7.2953,  2.1614]],

          [[ 0.4165,  2.4160,  4.5635,  2.3891],
           [ 1.6618,  2.4167,  3.2687,  3.2237],
           [ 2.3863,  2.3443,  4.2071,  2.9664],
           ...,
           [49.4817,  2.3299,  5.3473,  2.6695],
           [50.3129,  2.4290,  4.5385,  2.4517],
           [51.5150,  2.4162,  7.0988,  2.0658]],

          ...,

          [[ 0.5057, 49.4847,  4.0655,  2.6562],
           [ 1.7297, 49.6463,  3.5296,  3.3730],
           [ 2.4519, 49.6790,  5.1187,  3.3520],
           ...,
           [49.6359, 49.7801,  5.4157,  2.4247],
           [50.1501, 49.7259,  3.5864,  2.7279],
           [51.3725, 49.5965,  5.3232,  2.3954]],

          [[ 0.5013, 50.4787,  4.1930,  2.3226],
           [ 1.7513, 50.5333,  3.5965,  2.6282],
           [ 2.5398, 50.6047,  5.0653,  2.2994],
           ...,
           [49.5818, 50.4360,  5.2354,  2.5548],
           [50.1762, 50.4476,  3.6337,  2.6699],
           [51.3240, 50.5390,  4.8623,  2.4271]],

          [[ 0.5068, 51.5225,  8.3461,  1.1174],
           [ 1.6878, 51.4978,  5.4620,  0.9851],
           [ 2.5385, 51.5033,  8.2833,  0.8298],
           ...,
           [49.4756, 51.6794,  8.2446,  0.6719],
           [50.2937, 51.5641,  6.4058,  0.8620],
           [51.3585, 51.6667,  9.5834,  0.8839]]]]], device='cuda:0')
pred_boxes_size: torch.Size([1, 3, 52, 52, 4])
pred_boxes.view(batch_size, -1, 4): tensor([[[ 0.5046,  0.2942,  0.5881,  0.5126],
         [ 1.4693,  0.3417,  1.6554,  0.3809],
         [ 2.6000,  0.5292,  1.0695,  0.6382],
         ...,
         [49.4756, 51.6794,  8.2446,  0.6719],
         [50.2937, 51.5641,  6.4058,  0.8620],
         [51.3585, 51.6667,  9.5834,  0.8839]]], device='cuda:0')
up_size: torch.Size([1, 8112, 4])
conf.view(batch_size, -1, 1): tensor([[[1.4156e-05],
         [1.7501e-05],
         [2.8875e-05],
         ...,
         [4.8843e-06],
         [4.4310e-06],
         [2.5277e-07]]], device='cuda:0')
up_size: torch.Size([1, 8112, 1])
pred_cls.view(batch_size, -1, self.num_classes): tensor([[[0.0699, 0.0033, 0.0362,  ..., 0.0050, 0.0047, 0.0032],
         [0.0628, 0.0026, 0.0164,  ..., 0.0028, 0.0049, 0.0014],
         [0.0369, 0.0012, 0.0047,  ..., 0.0021, 0.0047, 0.0011],
         ...,
         [0.0811, 0.0105, 0.0371,  ..., 0.0004, 0.0004, 0.0002],
         [0.1009, 0.0216, 0.0486,  ..., 0.0006, 0.0019, 0.0020],
         [0.1126, 0.0244, 0.0591,  ..., 0.0015, 0.0057, 0.0065]]],
       device='cuda:0')
up_size: torch.Size([1, 8112, 80])
output: tensor([[[4.0365e+00, 2.3536e+00, 4.7044e+00,  ..., 4.9998e-03,
          4.6807e-03, 3.2286e-03],
         [1.1755e+01, 2.7333e+00, 1.3243e+01,  ..., 2.7686e-03,
          4.8884e-03, 1.4070e-03],
         [2.0800e+01, 4.2336e+00, 8.5561e+00,  ..., 2.0883e-03,
          4.6991e-03, 1.0517e-03],
         ...,
         [3.9581e+02, 4.1344e+02, 6.5957e+01,  ..., 3.8989e-04,
          3.6722e-04, 2.4541e-04],
         [4.0235e+02, 4.1251e+02, 5.1247e+01,  ..., 5.5713e-04,
          1.8623e-03, 1.9866e-03],
         [4.1087e+02, 4.1333e+02, 7.6667e+01,  ..., 1.5146e-03,
          5.7411e-03, 6.5217e-03]]], device='cuda:0')
up_size: torch.Size([1, 8112, 85])
output_list: [tensor([[[1.3478e+01, 2.0237e+01, 1.6536e+02,  ..., 3.0908e-03,
          4.1193e-03, 3.7631e-03],
         [5.2095e+01, 2.3547e+01, 1.3304e+02,  ..., 2.8145e-03,
          3.1190e-03, 1.5285e-03],
         [8.3474e+01, 2.3794e+01, 1.8797e+02,  ..., 3.4963e-03,
          3.1008e-03, 1.2002e-03],
         ...,
         [3.3363e+02, 4.0203e+02, 3.1219e+02,  ..., 2.2314e-04,
          6.8903e-04, 3.0381e-04],
         [3.7139e+02, 4.0134e+02, 2.7432e+02,  ..., 1.5585e-03,
          2.2613e-03, 8.6090e-04],
         [4.0059e+02, 3.9722e+02, 3.5208e+02,  ..., 2.7119e-02,
          8.3832e-03, 8.3005e-03]]], device='cuda:0'), tensor([[[8.6965e+00, 1.1194e+01, 2.1610e+01,  ..., 1.9414e-03,
          4.1810e-03, 1.5336e-03],
         [2.2008e+01, 1.1068e+01, 2.5077e+01,  ..., 1.8708e-03,
          5.4690e-03, 9.3695e-04],
         [3.7219e+01, 9.9564e+00, 2.2400e+01,  ..., 4.8466e-03,
          5.1711e-03, 2.1046e-03],
         ...,
         [3.7733e+02, 4.1042e+02, 4.9236e+01,  ..., 1.5066e-03,
          9.9467e-04, 2.7934e-04],
         [3.9214e+02, 4.0905e+02, 4.2471e+01,  ..., 6.9517e-03,
          1.2432e-03, 7.2760e-04],
         [4.0695e+02, 4.0805e+02, 2.6021e+01,  ..., 1.8776e-02,
          1.0443e-03, 6.7953e-04]]], device='cuda:0'), tensor([[[4.0365e+00, 2.3536e+00, 4.7044e+00,  ..., 4.9998e-03,
          4.6807e-03, 3.2286e-03],
         [1.1755e+01, 2.7333e+00, 1.3243e+01,  ..., 2.7686e-03,
          4.8884e-03, 1.4070e-03],
         [2.0800e+01, 4.2336e+00, 8.5561e+00,  ..., 2.0883e-03,
          4.6991e-03, 1.0517e-03],
         ...,
         [3.9581e+02, 4.1344e+02, 6.5957e+01,  ..., 3.8989e-04,
          3.6722e-04, 2.4541e-04],
         [4.0235e+02, 4.1251e+02, 5.1247e+01,  ..., 5.5713e-04,
          1.8623e-03, 1.9866e-03],
         [4.1087e+02, 4.1333e+02, 7.6667e+01,  ..., 1.5146e-03,
          5.7411e-03, 6.5217e-03]]], device='cuda:0')]
outputall: tensor([[[1.3478e+01, 2.0237e+01, 1.6536e+02,  ..., 3.0908e-03,
          4.1193e-03, 3.7631e-03],
         [5.2095e+01, 2.3547e+01, 1.3304e+02,  ..., 2.8145e-03,
          3.1190e-03, 1.5285e-03],
         [8.3474e+01, 2.3794e+01, 1.8797e+02,  ..., 3.4963e-03,
          3.1008e-03, 1.2002e-03],
         ...,
         [3.9581e+02, 4.1344e+02, 6.5957e+01,  ..., 3.8989e-04,
          3.6722e-04, 2.4541e-04],
         [4.0235e+02, 4.1251e+02, 5.1247e+01,  ..., 5.5713e-04,
          1.8623e-03, 1.9866e-03],
         [4.1087e+02, 4.1333e+02, 7.6667e+01,  ..., 1.5146e-03,
          5.7411e-03, 6.5217e-03]]], device='cuda:0')
output_size: torch.Size([1, 10647, 85])
batch_detections: [tensor([[2.4368e+01, 1.6797e+02, 8.4563e+01, 2.9811e+02, 9.9966e-01, 9.9998e-01,
         0.0000e+00],
        [2.8477e+02, 1.5642e+02, 3.6046e+02, 3.1049e+02, 9.9960e-01, 9.9999e-01,
         0.0000e+00],
        [1.5713e+02, 1.6347e+02, 2.0733e+02, 2.7020e+02, 9.9225e-01, 9.9995e-01,
         0.0000e+00],
        [1.3654e+02, 1.6564e+02, 1.7356e+02, 2.7249e+02, 9.8432e-01, 9.9991e-01,
         0.0000e+00],
        [1.1945e+02, 1.7913e+02, 1.3158e+02, 2.1723e+02, 9.7268e-01, 9.9993e-01,
         0.0000e+00],
        [1.0390e+02, 1.7771e+02, 1.1477e+02, 2.1709e+02, 9.4489e-01, 9.9978e-01,
         0.0000e+00],
        [1.1085e+02, 1.7795e+02, 1.2062e+02, 2.1561e+02, 8.9083e-01, 9.9990e-01,
         0.0000e+00],
        [6.8493e+01, 1.8071e+02, 8.2606e+01, 2.1603e+02, 7.6416e-01, 9.9741e-01,
         0.0000e+00],
        [2.4441e+02, 2.2482e+02, 3.8912e+02, 3.2443e+02, 9.9891e-01, 9.9981e-01,
         1.0000e+00],
        [2.0537e+02, 1.8278e+02, 3.0059e+02, 2.4081e+02, 9.8974e-01, 9.9549e-01,
         2.0000e+00],
        [1.8214e+02, 1.6956e+02, 2.4430e+02, 2.2714e+02, 9.3306e-01, 9.8885e-01,
         2.0000e+00],
        [1.0942e-01, 1.8847e+02, 1.4550e+01, 2.1490e+02, 8.3737e-01, 9.8151e-01,
         2.0000e+00]], device='cuda:0')]
batch_detections[0]_size: torch.Size([12, 7])
batch_detections[:, 4]: [0.99966156 0.9995964  0.9922506  0.98432237 0.97268254 0.9448944
 0.89083326 0.76416326 0.99891233 0.9897372  0.93305784 0.837368  ]
[:, 4]_size: (12,)
batch_detections[:, 5]: [0.99997544 0.9999932  0.99994576 0.99991274 0.9999294  0.99978286
 0.9999043  0.9974111  0.9998116  0.99549025 0.9888509  0.98151267]
[:, 5]_size: (12,)
self.confidence: 0.5
top_index: [ True  True  True  True  True  True  True  True  True  True  True  True]
top_index_size: (12,)
top_conf: [0.999637   0.9995896  0.9921968  0.9842365  0.9726139  0.9446892
 0.89074796 0.7621849  0.9987241  0.9852737  0.9226551  0.8218873 ]
top_conf_size: (12,)
batch_detections[top_index, -1]: [0. 0. 0. 0. 0. 0. 0. 0. 1. 2. 2. 2.]
[top_index, -1]_size: (12,)
top_label: [0 0 0 0 0 0 0 0 1 2 2 2]
top_label_size: (12,)
batch_detections[top_index, :4]: [[2.43682899e+01 1.67966278e+02 8.45626984e+01 2.98105377e+02]
 [2.84769165e+02 1.56417816e+02 3.60464111e+02 3.10493591e+02]
 [1.57126831e+02 1.63470337e+02 2.07332794e+02 2.70202576e+02]
 [1.36535690e+02 1.65640045e+02 1.73559158e+02 2.72493835e+02]
 [1.19447296e+02 1.79131195e+02 1.31582870e+02 2.17228088e+02]
 [1.03896835e+02 1.77706223e+02 1.14766953e+02 2.17089645e+02]
 [1.10847725e+02 1.77950073e+02 1.20623390e+02 2.15614929e+02]
 [6.84927292e+01 1.80705933e+02 8.26062546e+01 2.16026520e+02]
 [2.44414062e+02 2.24817841e+02 3.89124451e+02 3.24432159e+02]
 [2.05366028e+02 1.82778381e+02 3.00586975e+02 2.40813599e+02]
 [1.82142441e+02 1.69557343e+02 2.44298172e+02 2.27140167e+02]
 [1.09417439e-01 1.88468979e+02 1.45504131e+01 2.14898117e+02]]
[top_index, :4]_size: (12, 4)
top_bboxes: [[2.43682899e+01 1.67966278e+02 8.45626984e+01 2.98105377e+02]
 [2.84769165e+02 1.56417816e+02 3.60464111e+02 3.10493591e+02]
 [1.57126831e+02 1.63470337e+02 2.07332794e+02 2.70202576e+02]
 [1.36535690e+02 1.65640045e+02 1.73559158e+02 2.72493835e+02]
 [1.19447296e+02 1.79131195e+02 1.31582870e+02 2.17228088e+02]
 [1.03896835e+02 1.77706223e+02 1.14766953e+02 2.17089645e+02]
 [1.10847725e+02 1.77950073e+02 1.20623390e+02 2.15614929e+02]
 [6.84927292e+01 1.80705933e+02 8.26062546e+01 2.16026520e+02]
 [2.44414062e+02 2.24817841e+02 3.89124451e+02 3.24432159e+02]
 [2.05366028e+02 1.82778381e+02 3.00586975e+02 2.40813599e+02]
 [1.82142441e+02 1.69557343e+02 2.44298172e+02 2.27140167e+02]
 [1.09417439e-01 1.88468979e+02 1.45504131e+01 2.14898117e+02]]
top_bboxes_size: (12, 4)
top_xmin: [[2.43682899e+01]
 [2.84769165e+02]
 [1.57126831e+02]
 [1.36535690e+02]
 [1.19447296e+02]
 [1.03896835e+02]
 [1.10847725e+02]
 [6.84927292e+01]
 [2.44414062e+02]
 [2.05366028e+02]
 [1.82142441e+02]
 [1.09417439e-01]]
top_ymin: [[167.96628]
 [156.41782]
 [163.47034]
 [165.64005]
 [179.1312 ]
 [177.70622]
 [177.95007]
 [180.70593]
 [224.81784]
 [182.77838]
 [169.55734]
 [188.46898]]
top_xmax: [[ 84.5627  ]
 [360.4641  ]
 [207.3328  ]
 [173.55916 ]
 [131.58287 ]
 [114.76695 ]
 [120.62339 ]
 [ 82.606255]
 [389.12445 ]
 [300.58698 ]
 [244.29817 ]
 [ 14.550413]]
top_ymax: [[298.10538]
 [310.4936 ]
 [270.20258]
 [272.49384]
 [217.22809]
 [217.08965]
 [215.61493]
 [216.02652]
 [324.43216]
 [240.8136 ]
 [227.14017]
 [214.89812]]
top_size: (12, 1)
top_xmin: [[7.7908234e+01]
 [9.1043988e+02]
 [5.0235260e+02]
 [4.3652036e+02]
 [3.8188678e+02]
 [3.3217017e+02]
 [3.5439294e+02]
 [2.1897916e+02]
 [7.8141998e+02]
 [6.5657892e+02]
 [5.8233038e+02]
 [3.4982020e-01]]
top_ymin: [[537.00757]
 [500.08582]
 [522.63354]
 [529.5703 ]
 [572.7031 ]
 [568.1473 ]
 [568.92694]
 [577.73773]
 [718.76855]
 [584.3636 ]
 [542.09436]
 [602.55707]]
top_xmax: [[ 270.3567  ]
 [1152.4453  ]
 [ 662.8668  ]
 [ 554.8887  ]
 [ 420.68564 ]
 [ 366.9232  ]
 [ 385.6469  ]
 [ 264.1017  ]
 [1244.0758  ]
 [ 961.0112  ]
 [ 781.04944 ]
 [  46.519352]]
top_ymax: [[ 953.0773 ]
 [ 992.68384]
 [ 863.8688 ]
 [ 871.1942 ]
 [ 694.50323]
 [ 694.06067]
 [ 689.3458 ]
 [ 690.6617 ]
 [1037.2471 ]
 [ 769.9088 ]
 [ 726.1933 ]
 [ 687.0541 ]]
boxes: [[5.3700757e+02 7.7908234e+01 9.5307727e+02 2.7035669e+02]
 [5.0008582e+02 9.1043988e+02 9.9268384e+02 1.1524453e+03]
 [5.2263354e+02 5.0235260e+02 8.6386877e+02 6.6286682e+02]
 [5.2957031e+02 4.3652036e+02 8.7119421e+02 5.5488867e+02]
 [5.7270312e+02 3.8188678e+02 6.9450323e+02 4.2068564e+02]
 [5.6814728e+02 3.3217017e+02 6.9406067e+02 3.6692319e+02]
 [5.6892694e+02 3.5439294e+02 6.8934583e+02 3.8564691e+02]
 [5.7773773e+02 2.1897916e+02 6.9066168e+02 2.6410172e+02]
 [7.1876855e+02 7.8141998e+02 1.0372471e+03 1.2440758e+03]
 [5.8436359e+02 6.5657892e+02 7.6990881e+02 9.6101123e+02]
 [5.4209436e+02 5.8233038e+02 7.2619330e+02 7.8104944e+02]
 [6.0255707e+02 3.4982020e-01 6.8705408e+02 4.6519352e+01]]
b'person 1.00' 532 73 958 275
b'person 1.00' 495 905 998 1157
b'person 0.99' 518 497 869 668
b'person 0.98' 525 432 876 560
b'person 0.97' 568 377 700 426
b'person 0.94' 563 327 699 372
b'person 0.89' 564 349 694 391
b'person 0.76' 573 214 696 269
b'bicycle 1.00' 714 776 1042 1249
b'car 0.99' 579 652 775 966
b'car 0.92' 537 577 731 786
b'car 0.82' 598 0 692 52
Input image filename: